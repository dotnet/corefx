<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreReleaseLabel>rc3</PreReleaseLabel>
    <PackageDescriptionFile>$(ProjectDir)pkg/descriptions.json</PackageDescriptionFile>
    <PackageLicenseFile>$(ProjectDir)pkg/dotnet_library_license.txt</PackageLicenseFile>
    <PackageThirdPartyNoticesFile>$(ProjectDir)pkg/ThirdPartyNotices.txt</PackageThirdPartyNoticesFile>
    <RuntimeIdGraphDefinitionFile>$(ProjectDir)pkg/Microsoft.NETCore.Platforms/runtime.json</RuntimeIdGraphDefinitionFile>
    <!-- Add a condition for this when we are able to run on .NET Core -->
    <PackagingTaskDir>$(ToolsDir)net45/</PackagingTaskDir>
    <!-- defined in buildtools packaging.targets, but we need this before targets are imported -->
    <PackagePlatform Condition="'$(PackagePlatform)' == ''">$(Platform)</PackagePlatform>
    <PackagePlatform Condition="'$(PackagePlatform)' == 'amd64'">x64</PackagePlatform>
    <NativePackagePath>$(MSBuildThisFileDirectory)src/Native/pkg</NativePackagePath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OsEnvironment)'=='Unix'">
    <!--
      Building packages fails for two reasons.
      First, nuget doesn't like the paths in the nuspec having backslashes as directory separators.
      Second, we aren't yet building pdbs, which the nuspecs specify.
    -->
    <SkipBuildPackages>true</SkipBuildPackages>
  </PropertyGroup>

  <!-- Add required legal files to packages -->
  <ItemGroup Condition="'$(MSBuildProjectExtension)' == '.pkgproj'">
    <File Condition="Exists('$(PackageLicenseFile)')" 
	  	    Include="$(PackageLicenseFile)" >
        <SkipPackageFileCheck>true</SkipPackageFileCheck>
    </File>        
    <File Condition="Exists('$(PackageThirdPartyNoticesFile)')"
	        Include="$(PackageThirdPartyNoticesFile)" >
        <SkipPackageFileCheck>true</SkipPackageFileCheck>
    </File>        
  </ItemGroup>
</Project>