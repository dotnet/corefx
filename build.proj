<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="Directory.Build.props" />

  <PropertyGroup>
    <BuildRestore Condition="'$(BuildRestore)'==''">true</BuildRestore>
    <BuildNative Condition="'$(BuildNative)'==''">true</BuildNative>
    <BuildManaged Condition="'$(BuildManaged)'==''">true</BuildManaged>
    <BuildTests Condition="'$(BuildTests)'==''">false</BuildTests>
    <BuildPackages Condition="'$(BuildPackages)'==''">true</BuildPackages>

    <BuildDependsOn Condition="'$(BuildRestore)'=='true'">$(BuildDependsOn);Restore</BuildDependsOn>
    <BuildDependsOn Condition="'$(BuildNative)'=='true'">$(BuildDependsOn);BuildNative</BuildDependsOn>
    <BuildDependsOn Condition="'$(BuildManaged)'=='true'">$(BuildDependsOn);BuildManaged</BuildDependsOn>
    <BuildDependsOn Condition="'$(BuildTests)'=='true'">$(BuildDependsOn);Test</BuildDependsOn>
    <BuildDependsOn Condition="'$(BuildPackages)'=='true'">$(BuildDependsOn);Pack</BuildDependsOn>

    <!-- Explicitly set Configuration based on BuildConfiguration for the root projects -->
    <ProjectProperties>Configuration=$(BuildConfiguration)</ProjectProperties>
  </PropertyGroup>

  <Import Project="$(ToolsDir)VersionTools.targets" Condition="Exists('$(ToolsDir)VersionTools.targets')" />

  <Import Project="Directory.Build.targets" />

  <UsingTask TaskName="GenerateConfigurationProps" AssemblyFile="$(BuildToolsTaskDir)Microsoft.DotNet.Build.Tasks.dll"/>

  <Target Name="Restore" DependsOnTargets="RestoreOptionalToolingPackages;RestoreOptimizationDataPackage">
    <ItemGroup>
      <_RestoreProjects Include="external\dir.proj" />
    </ItemGroup>

    <!-- Generate the configurations for this repo -->
    <GenerateConfigurationProps Properties="@(Property)" PropertyValues="@(PropertyValue)" PropsFolder="$(BuildConfigurationFolder)" />

    <MSBuild Projects="@(_RestoreProjects)" Properties="$(ProjectProperties)" />
  </Target>

  <Target Name="BuildNative">
    <ItemGroup>
      <_BuildNativeProjects Include="src\Native\build-native.proj" />
    </ItemGroup>

    <MSBuild Projects="@(_BuildNativeProjects)" Properties="$(ProjectProperties)" />
  </Target>

  <Target Name="BuildManaged">
    <ItemGroup>
      <_BuildMangedProjects Include="src\dirs.proj" />
    </ItemGroup>

    <MSBuild Projects="@(_BuildMangedProjects)" Properties="$(ProjectProperties)" />
  </Target>

  <Target Name="Test">
    <ItemGroup>
      <_TestProjects Include="src\tests.builds" />
    </ItemGroup>

    <MSBuild Projects="@(_TestProjects)" Properties="$(ProjectProperties)" />
  </Target>

  <Target Name="Pack">
    <ItemGroup>
      <_PackProjects Include="src\packages.builds" Condition="'$(BuildPackages)'=='true'" />
    </ItemGroup>

    <MSBuild Projects="@(_PackProjects)" Properties="$(ProjectProperties)" />
  </Target>

  <Import Project="$(ToolsDir)clean.targets" />

  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)" />

  <Target Name="Clean">
    <RemoveDir Directories="$(ArtifactsObjDir)" />
    <RemoveDir Directories="$(ArtifactsBinDir)" />
    <RemoveDir Directories="$(ArtifactsPackagesDir)" />
  </Target>

  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />

  <!-- Hook that can be used to insert custom build tasks to the build process such as setup and/or cleanup tasks -->
  <Import Project="build.override.targets" Condition="Exists('build.override.targets')" />

  <UsingTask TaskName="UpdateVSConfigurations" AssemblyFile="$(BuildToolsTaskDir)Microsoft.DotNet.Build.Tasks.dll"/>
  <Target Name="UpdateVSConfigurations">
    <Message Importance="High" Text="Updating configurations for projects ..." />
    <ItemGroup>
      <_projectsToExcludeFromUpdate Include="$(MSBuildThisFileDirectory)src/SharedFrameworkValidation/**/*.csproj" />
      <_projectsToUpdate Include="$(MSBuildThisFileDirectory)src/**/*.*csproj" Exclude="@(_projectsToExcludeFromUpdate)" />
      <_projectsToUpdate Include="$(MSBuildThisFileDirectory)src/**/*.*ilproj" Exclude="@(_projectsToExcludeFromUpdate)" />
      <_projectsToUpdate Include="$(MSBuildThisFileDirectory)src/**/*.*vbproj" Exclude="@(_projectsToExcludeFromUpdate)" />
      <_solutionsToUpdateFiles Include="$(MSBuildThisFileDirectory)src/*/Directory.Build.props" />
      <_solutionsToUpdate Include="@(_solutionsToUpdateFiles->'%(RootDir)%(Directory)')" Exclude="@(_solutionsToExcludeFromUpdate)" />
    </ItemGroup>
    <UpdateVSConfigurations ProjectsToUpdate="@(_projectsToUpdate)" SolutionsToUpdate="@(_solutionsToUpdate)" />
    <Message Importance="High" Text="Updating configurations for projects ... Done." />
  </Target>
</Project>
