<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="dir.props" />

  <!-- Inline task to bootstrap the build to enable downloading nuget.exe -->
  <UsingTask TaskName="DownloadFile" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <Address ParameterType="System.String" Required="true"/>
      <FileName ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
           var directory = System.IO.Path.GetDirectoryName(FileName);
           System.IO.Directory.CreateDirectory(directory);
           var client = new System.Net.WebClient();
           client.Proxy = System.Net.WebRequest.DefaultWebProxy;
           client.Proxy.Credentials = System.Net.CredentialCache.DefaultCredentials;
           client.DownloadFile(Address, FileName);
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="_RestoreBuildTools"
    BeforeTargets="BuildAllProjects"
    Inputs="$(BuildToolsTargetInputs)"
    Outputs="$(BuildToolsTargetOutputs)"
    >
    <Message Importance="High" Text="Restoring build tools..." />

    <!-- Download latest nuget.exe -->
    <DownloadFile
      Condition="!Exists($(NuGetToolPath))"
      Address="http://nuget.org/nuget.exe"
      FileName="$(NuGetToolPath)" />

    <!-- Restore build tools -->
    <Exec
      StandardOutputImportance="Low"
      Command="&quot;$(NuGetToolPath)&quot; install &quot; $(SourceDir).nuget\packages.config &quot;  -o &quot; $(PackagesDir) &quot; $(NuGetConfigCommandLine)" />

    <Touch Files="$(BuildToolsInstallSemaphore)" AlwaysCreate="true" />
  </Target>

  <ItemGroup>
    <Project Include="src\dirs.proj" />
  </ItemGroup>

  <Import Project="dir.traversal.targets" />

  <!-- Override clean from dir.traversal.targets and just remove the full BinDir -->
  <Target Name="Clean">
    <RemoveDir Directories="$(BinDir);$(PackagesDir)" />
  </Target>
  
  <Target Name="GenerateCoverageReport"
    AfterTargets="Build"
    Inputs="$(CoverageReportDir)\*.coverage.xml"
    Outputs="$(CoverageReportDir)*.*"
    Condition="$(_CoverageEnabled)">
    
    <PropertyGroup>
      <ReportGeneratorVersion>2.0.4.0</ReportGeneratorVersion>
      <ReportGeneratorCommandLine>$(PackagesDir)ReportGenerator.$(ReportGeneratorVersion)\ReportGenerator.exe</ReportGeneratorCommandLine>
      <ReportGeneratorOptions>-reports:$(CoverageReportDir)\*.coverage.xml -targetdir:$(CoverageReportDir) -reporttypes:Html</ReportGeneratorOptions>
    </PropertyGroup>
    
    <Exec
      Command="$(ReportGeneratorCommandLine) $(ReportGeneratorOptions)"
      ContinueOnError="ErrorAndContinue" />
    
  </Target>
  
</Project>