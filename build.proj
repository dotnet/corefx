<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="dir.props" />

  <!-- Inline task to bootstrap the build to enable downloading nuget.exe -->
  <UsingTask TaskName="DownloadFile" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <Address ParameterType="System.String" Required="true"/>
      <FileName ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
           var directory = System.IO.Path.GetDirectoryName(FileName);
           System.IO.Directory.CreateDirectory(directory);
           var client = new System.Net.WebClient();
           client.Proxy = System.Net.WebRequest.DefaultWebProxy;
           client.Proxy.Credentials = System.Net.CredentialCache.DefaultCredentials;
           client.DownloadFile(Address, FileName);
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="_RestoreBuildTools"
    BeforeTargets="Build"
    Inputs="$(BuildToolsTargetInputs)"
    Outputs="$(BuildToolsTargetOutputs)"
    >

    <!-- Download latest nuget.exe -->
    <DownloadFile
      Condition="!Exists($(NuGetToolPath))"
      Address="http://nuget.org/nuget.exe"
      FileName="$(NuGetToolPath)" />

    <!-- Restore build tools -->
    <Exec
      StandardOutputImportance="Low"
      Command="&quot;$(NuGetToolPath)&quot; install &quot; $(SourceDir).nuget\packages.config &quot;  -o &quot; $(PackagesDir) &quot; $(NuGetConfigCommandLine)" />

    <!-- Testing build tools packages before deployment is an interesting scenario.  There isn't an easy way to do this in the
         nuget workflow (especially outside vs/powershell).  For now, we'll delete the BuildTools package directory, then reinstall with
         an alternate source for the build tools directory. The alternate source is specified by BuildToolsAlternateSource. -->
    
    <RemoveDir Directories="$(ToolsPackageDir)" Condition="$(BuildToolsUseAlternateSource)" />
    <Exec
      StandardOutputImportance="Low"
      Command="&quot;$(NuGetToolPath)&quot; install &quot; $(SourceDir).nuget\packages.config &quot;  -o &quot; $(PackagesDir) &quot; -Source  &quot; $(BuildToolsAlternateSource) &quot; -NoCache $(NuGetConfigCommandLine)"
      Condition="$(BuildToolsUseAlternateSource)" />
      
    <Touch Files="$(BuildToolsInstallSemaphore)" AlwaysCreate="true" />
  </Target>

  <ItemGroup>
    <Project Include="src\dirs.proj" />
  </ItemGroup>

  <Import Project="dir.traversal.targets" />

  <!-- Override clean from dir.traversal.targets and just remove the full BinDir -->
  <Target Name="Clean">
    <RemoveDir Directories="$(BinDir);$(PackagesDir)" />
  </Target>
</Project>