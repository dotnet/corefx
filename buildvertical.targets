<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="FindBestConfiguration" AssemblyFile="$(CoreFxToolsTaskDir)CoreFx.Tools.dll"/>
  <PropertyGroup>
    <ImportedBuildVerticalTargets>true</ImportedBuildVerticalTargets>
  </PropertyGroup>

 <!-- Required for FindBestConfiguration task -->
 <Import Project="$(MSBuildThisFileDirectory)src/Tools/GenerateProps/properties.props" />

 <Target Name="AnnotateProjects"
         BeforeTargets="BuildAllProjects"
         Condition="!$(MSBuildProjectFullPath.EndsWith('.proj'))">
   <!-- Clear ProjectWithConfiguration to prevent circular dependency -->
   <ItemGroup><ProjectWithConfiguration Remove="@(ProjectWithConfiguration)" /></ItemGroup>
   <MSBuild Targets="AnnotateProjectsWithConfiguration" 
            Projects="@(Project)"> 
     <Output TaskParameter="TargetOutputs" 
             ItemName="ProjectWithConfiguration" /> 
   </MSBuild> 
   <ItemGroup>
     <Project Remove="@(Project)" />
     <Project Include="@(ProjectWithConfiguration)" />
   </ItemGroup>
 </Target>

 <Target Name="AnnotateProjectsWithConfiguration" 
         Returns="@(ProjectWithConfiguration)"> 
    <ItemGroup> 
       <ProjectWithConfiguration Include="$(MSBuildProjectFullPath)"> 
         <AdditionalProperties Condition="'$(_BestConfiguration)' != ''">Configuration=$(_BestConfiguration);%(ProjectWithConfiguration.AdditionalProperties)</AdditionalProperties>
         <UndefineProperties Condition="'$(_BestConfiguration)' == ''">Configuration;%(ProjectWithConfiguration.UndefineProperties)</UndefineProperties>
       </ProjectWithConfiguration>
       <ProjectWithConfiguration Remove="@(OmitProject)" />
     </ItemGroup>
  </Target>

  <!-- The initial shaking target for trimming down applicable projects for specified vertical -->
  <Target Name="DetermineProjectsConfiguration"
          Returns="@(OmitProject)"
          BeforeTargets="AnnotateProjectsWithConfiguration">
    <!-- Clear the _Configuration item -->
    <ItemGroup><_Configuration Remove="@(_Configuration)" /></ItemGroup>
    <FindBestConfiguration Properties="@(Property)"
                           PropertyValues="@(PropertyValue)"
                           BuildConfigurations="$(BuildConfigurations)"
                           BuildConfiguration="$(BuildConfiguration)" 
                           Condition="'$(BuildConfigurations)' != ''"
                           ContinueOnError="true">
      <Output TaskParameter="BestConfiguration" ItemName="_Configuration" />
    </FindBestConfiguration>  

    <ItemGroup>
      <_Configuration Condition="'$(BuildConfigurations)' == ''" Include="$(BuildConfiguration)" />
    </ItemGroup>

    <PropertyGroup>
      <_BestConfiguration>%(_Configuration.Identity)</_BestConfiguration>
    </PropertyGroup>
 
    <ItemGroup>
      <OmitProject Include="$(MSBuildProjectFullPath)" Condition="'$(BuildConfigurations)' != '' and '$(_BestConfiguration)' == ''" />
    </ItemGroup>
  </Target>

  <Target Name="FindBestConfiguration"
          Returns="@(_Configuration)">
     <!-- Clear the _Configuration item -->
    <ItemGroup><_Configuration Remove="@(_Configuration)" /></ItemGroup>
    <FindBestConfiguration Properties="@(Property)"
                           PropertyValues="@(PropertyValue)"
                           BuildConfigurations="$(BuildConfigurations)"
                           BuildConfiguration="$(BuildConfiguration)" 
                           Condition="'$(BuildConfigurations)' != ''"
                           ContinueOnError="true">
      <Output TaskParameter="BestConfiguration" ItemName="_Configuration" />
    </FindBestConfiguration>  
    
    <ItemGroup>
      <_Configuration Condition="'$(BuildConfigurations)' == ''" Include="$(BuildConfiguration)" />
    </ItemGroup>
  </Target>

  <Target Name="AnnotateProjectReference"
          Inputs="%(ProjectReference.Identity)"
          Outputs="fake"
          BeforeTargets="BeforeResolveReferences">
    <PropertyGroup>
      <_ProjectReferenceToAnnotate>%(ProjectReference.Identity)</_ProjectReferenceToAnnotate>
    </PropertyGroup>

    <ItemGroup><_Configuration Remove="@(_Configuration)" /></ItemGroup>
    <MSBuild Targets="FindBestConfiguration"
             Projects="$(_ProjectReferenceToAnnotate)">
      <Output TaskParameter="TargetOutputs" ItemName="_Configuration" />
    </MSBuild>

    <PropertyGroup>
      <_BestConfiguration>%(_Configuration.Identity)</_BestConfiguration>
      <_AdditionalProperties />
      <_AdditionalProperties Condition="'$(_BestConfiguration)' != ''">Configuration=$(_BestConfiguration)</_AdditionalProperties>
    </PropertyGroup>
    <ItemGroup>
      <ProjectReference>
        <AdditionalProperties Condition="'$(_AdditionalProperties)' != ''">$(_AdditionalProperties);%(ProjectReference.AdditionalProperties)</AdditionalProperties>
        <UndefineProperties Condition="'$(_AdditionalProperties)' == ''">Configuration;%(ProjectReference.Configuration)</UndefineProperties>
      </ProjectReference>
    </ItemGroup>
  </Target>
</Project>