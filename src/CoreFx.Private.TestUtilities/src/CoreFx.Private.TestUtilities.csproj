<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <AssemblyName>CoreFx.Private.TestUtilities</AssemblyName>
    <ProjectGuid>{EBDB0247-CA43-4226-B7A1-8FEF21061D09}</ProjectGuid>
    <RuntimeProjectFile>$(ProjectDir)\external\test-runtime\XUnit.Runtime.depproj</RuntimeProjectFile>
    <ClsCompliant>false</ClsCompliant>
    <ShouldWriteSigningRequired>false</ShouldWriteSigningRequired>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <EnablePInvokeAnalyzer>false</EnablePInvokeAnalyzer>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netcoreapp-Unix-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netcoreapp-Unix-Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netcoreapp-Windows_NT-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netcoreapp-Windows_NT-Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netfx-Windows_NT-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netfx-Windows_NT-Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'uap-Windows_NT-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'uap-Windows_NT-Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'uapaot-Windows_NT-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'uapaot-Windows_NT-Release|AnyCPU'" />
  <ItemGroup>
    <Compile Include="System\AdminHelpers.cs" />
    <Compile Include="System\IO\FileCleanupTestBase.cs" />
    <Compile Include="System\Diagnostics\RemoteExecutorTestBase.cs" />
    <Compile Include="System\Net\PlatformDetection.Networking.cs" />
    <Compile Condition="'$(TargetGroup)' == 'netcoreapp'" Include="System\Diagnostics\RemoteExecutorTestBase.netcore.cs" />
    <Compile Condition="'$(TargetGroup)' == 'netfx'" Include="System\Diagnostics\RemoteExecutorTestBase.netfx.cs" />
    <Compile Condition="'$(TargetGroup)' != 'uap'" Include="System\Diagnostics\RemoteExecutorTestBase.Process.cs" />
    <Compile Condition="'$(TargetGroup)' == 'uap'" Include="System\Diagnostics\RemoteExecutorTestBase.uap.cs" />
    <Compile Condition="'$(TargetGroup)' == 'uapaot'" Include="System\Diagnostics\RemoteExecutorTestBase.uapaot.cs" />
    <Compile Condition="'$(TargetGroup)' == 'netfx'" Include="System\PlatformDetection.NetFx.cs" />
    <Compile Condition="'$(TargetGroup)' != 'netfx'" Include="System\PlatformDetection.NonNetFx.cs" />
    <Compile Include="System\PlatformDetection.cs" />
    <Compile Include="System\PlatformDetection.Unix.cs" Condition="'$(TargetsWindows)' != 'true'" />
    <Compile Include="System\PlatformDetection.Windows.cs" Condition="'$(TargetsWindows)' == 'true'" />
    <Compile Include="$(CommonPath)\System\PasteArguments.cs">
      <Link>Common\System\PasteArguments.cs</Link>
    </Compile>
    <Compile Include="System\AssertExtensions.cs" />
    <Compile Include="System\TheoryExtensions.cs" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="System.Memory" />
    <Reference Include="Microsoft.Win32.Registry" />
    <Reference Include="System.Runtime" />
    <Reference Include="System.IO.FileSystem" />
    <Reference Include="System.Linq" />
    <Reference Include="System.Xml.XDocument" />
    <Reference Include="System.Xml.ReaderWriter" />
    <Reference Include="System.Threading.Thread" />
    <Reference Include="System.Threading.Tasks" />
    <Reference Include="System.Runtime.Extensions" />
    <Reference Include="System.Diagnostics.Debug" />
    <Reference Include="System.Diagnostics.Process" />
    <Reference Include="System.ComponentModel.Primitives" />
    <Reference Include="System.Runtime.InteropServices.RuntimeInformation" />
    <Reference Include="System.Runtime.InteropServices" />
    <ReferenceFromRuntime Include="xunit.core" />
    <ReferenceFromRuntime Include="Xunit.NetCore.Extensions" />
    <ReferenceFromRuntime Include="xunit.assert" />
    <ReferenceFromRuntime Condition="'$(TargetGroup)' != 'uapaot'" Include="Microsoft.DotNet.PlatformAbstractions" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetsWindows)' == 'true'">
    <Reference Include="System.Security.Principal.Windows" />
    <Reference Include="Microsoft.Win32.Primitives" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetsWindows)' == 'true'">
    <Compile Include="$(CommonPath)\Interop\Windows\kernel32\Interop.GetCurrentProcess_IntPtr.cs">
      <Link>Common\Interop\Windows\kernel32\Interop.GetCurrentProcess_IntPtr.cs</Link>
    </Compile>
    <Compile Include="..\..\Common\src\System\PasteArguments.Windows.cs">
      <Link>Common\System\PasteArguments.Windows.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\advapi32\Interop.OpenProcessToken_SafeAccessTokenHandle.cs">
      <Link>Common\Interop\Windows\advapi32\Interop.OpenProcessToken_SafeAccessTokenHandle.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\Interop.Libraries.cs">
      <Link>Common\Interop\Windows\Interop.Libraries.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\kernel32\Interop.CloseHandle.cs">
      <Link>Common\Interop\Windows\kernel32\Interop.CloseHandle.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\advapi32\Interop.TOKEN_INFORMATION_CLASS.cs">
      <Link>Common\Interop\Windows\advapi32\Interop.TOKEN_INFORMATION_CLASS.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\advapi32\Interop.GetTokenInformation_void.cs">
      <Link>Common\Interop\Windows\advapi32\Interop.GetTokenInformation_void.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\advapi32\Interop.TOKEN_ELEVATION.cs">
      <Link>Common\Interop\Windows\advapi32\Interop.TOKEN_ELEVATION.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\Interop.BOOL.cs">
      <Link>Common\Interop\Windows\Interop.BOOL.cs</Link>
    </Compile>
    <Compile Include="System\AdminHelpers.Windows.cs" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetsUnix)' == 'true'">
    <Compile Include="$(CommonPath)\Interop\Unix\System.Security.Cryptography.Native\Interop.OpenSslVersion.cs">
      <Link>Common\Interop\Unix\System.Security.Cryptography.Native\Interop.OpenSslVersion.cs</Link>
    </Compile>
    <Compile Include="..\..\Common\src\System\PasteArguments.Unix.cs">
      <Link>Common\System\PasteArguments.Unix.cs</Link>
    </Compile>
    <Compile Include="System\AdminHelpers.Unix.cs" />
    <Compile Include="$(CommonPath)\Interop\Unix\System.Native\Interop.GetEUid.cs">
      <Link>Common\Interop\Unix\Interop.GetEUid.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Unix\Interop.Libraries.cs">
      <Link>Common\Interop\Unix\Interop.Libraries.cs</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup Condition="'$(TargetGroup)' == 'uap'">
    <Reference Include="Windows" />
    <Reference Include="mscorlib" />
    <Reference Include="System.Runtime.WindowsRuntime" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetGroup)' == 'netfx'">
    <Reference Include="mscorlib" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources\$(AssemblyName).rd.xml" />
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
</Project>
