<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentOutOfRange_NeedNonNegNum" xml:space="preserve">
    <value>Non-negative number required.</value>
  </data>
  <data name="Argument_InvalidOffLen" xml:space="preserve">
    <value>Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.</value>
  </data>
  <data name="ArgumentNull_Buffer" xml:space="preserve">
    <value>Buffer cannot be null.</value>
  </data>
  <data name="Cryptography_ArgECDHKeySizeMismatch" xml:space="preserve">
    <value>The keys from both parties must be the same size to generate a secret agreement.</value>
  </data>
  <data name="Cryptography_ArgECDHRequiresECDHKey" xml:space="preserve">
    <value>Keys used with the ECDiffieHellmanCng algorithm must have an algorithm group of ECDiffieHellman.</value>
  </data>
  <data name="Cryptography_ArgECDsaRequiresECDsaKey" xml:space="preserve">
    <value>Keys used with the ECDsaCng algorithm must have an algorithm group of ECDsa.</value>
  </data>
  <data name="Cryptography_ArgExpectedECDiffieHellmanCngPublicKey" xml:space="preserve">
    <value>DeriveKeyMaterial requires an ECDiffieHellmanCngPublicKey.</value>
  </data>
  <data name="Cryptography_ArgRSAaRequiresRSAKey" xml:space="preserve">
    <value>Keys used with the RSACng algorithm must have an algorithm group of RSA.</value>
  </data>
  <data name="Cryptography_CngKeyWrongAlgorithm" xml:space="preserve">
    <value>This key is for algorithm '{0}'. Expected '{1}'.</value>
  </data>
  <data name="Cryptography_ECXmlSerializationFormatRequired" xml:space="preserve">
    <value>XML serialization of an elliptic curve key requires using an overload which specifies the XML format to be used.</value>
  </data>
  <data name="Cryptography_HashAlgorithmNameNullOrEmpty" xml:space="preserve">
    <value>The hash algorithm name cannot be null or empty.</value>
  </data>
  <data name="Cryptography_InvalidAlgorithmGroup" xml:space="preserve">
    <value>The algorithm group '{0}' is invalid.</value>
  </data>
  <data name="Cryptography_InvalidAlgorithmName" xml:space="preserve">
    <value>The algorithm name '{0}' is invalid.</value>
  </data>
  <data name="Cryptography_InvalidCipherMode" xml:space="preserve">
    <value>Specified cipher mode is not valid for this algorithm.</value>
  </data>
  <data name="Cryptography_CurveNotSupported" xml:space="preserve">
    <value>The specified curve '{0}' or its parameters are not valid for this platform.</value>
  </data>
  <data name="Cryptography_InvalidCurveOid" xml:space="preserve">
    <value>The specified Oid is not valid. The Oid.FriendlyName property must be set, or be determined from Oid.Value.</value>
  </data>
  <data name="Cryptography_InvalidIVSize" xml:space="preserve">
    <value>Specified initialization vector (IV) does not match the block size for this algorithm.</value>
  </data>
  <data name="Cryptography_InvalidKeyBlobFormat" xml:space="preserve">
    <value>The key blob format '{0}' is invalid.</value>
  </data>
  <data name="Cryptography_InvalidKeySize" xml:space="preserve">
    <value>Specified key is not a valid size for this algorithm.</value>
  </data>
  <data name="Cryptography_InvalidPadding" xml:space="preserve">
    <value>Specified padding mode is not valid for this algorithm.</value>
  </data>
  <data name="Cryptography_InvalidProviderName" xml:space="preserve">
    <value>The provider name '{0}' is invalid.</value>
  </data>
  <data name="Cryptography_InvalidRsaParameters" xml:space="preserve">
    <value>The specified RSA parameters are not valid; both Exponent and Modulus are required fields.</value>
  </data>
  <data name="Cryptography_InvalidSignatureAlgorithm" xml:space="preserve">
    <value>The hash algorithm is not supported for signatures. Only MD5, SHA1, SHA256,SHA384, and SHA512 are supported at this time.</value>
  </data>
  <data name="Cryptography_KeyBlobParsingError" xml:space="preserve">
    <value>Key Blob not in expected format.</value>
  </data>
  <data name="Cryptography_OpenEphemeralKeyHandleWithoutEphemeralFlag" xml:space="preserve">
    <value>The CNG key handle being opened was detected to be ephemeral, but the EphemeralKey open option was not specified.</value>
  </data>
  <data name="Cryptography_OpenInvalidHandle" xml:space="preserve">
    <value>Cannot open an invalid handle.</value>
  </data>
  <data name="NotSupported_Method" xml:space="preserve">
    <value>Method not supported.</value>
  </data>
  <data name="Cryptography_MissingIV" xml:space="preserve">
    <value>The cipher mode specified requires that an initialization vector (IV) be used.</value>
  </data>
  <data name="Cryptography_MustTransformWholeBlock" xml:space="preserve">
    <value>TransformBlock may only process bytes in block sized increments.</value>
  </data>
  <data name="Cryptography_NotValidPrivateKey" xml:space="preserve">
    <value>Key is not a valid private key.</value>
  </data>
  <data name="Cryptography_NotValidPublicOrPrivateKey" xml:space="preserve">
    <value>Key is not a valid public or private key.</value>
  </data>
  <data name="Cryptography_NonCompliantFIPSAlgorithm" xml:space="preserve">
    <value>This implementation is not part of the Windows Platform FIPS validated cryptographic algorithms.</value>
  </data>
  <data name="Cryptography_PartialBlock" xml:space="preserve">
    <value>The input data is not a complete block.</value>
  </data>
  <data name="Cryptography_RC2_EKSKS2" xml:space="preserve">
    <value>EffectiveKeySize must be the same as KeySize in this implementation.</value>
  </data>
  <data name="Cryptography_TlsRequiresLabelAndSeed" xml:space="preserve">
    <value>The TLS key derivation function requires both the label and seed properties to be set.</value>
  </data>
  <data name="Cryptography_UnsupportedPaddingMode" xml:space="preserve">
    <value>The specified PaddingMode is not supported.</value>
  </data>
  <data name="Cryptography_PlatformNotSupported" xml:space="preserve">
    <value>The specified cryptographic algorithm is not supported on this platform.</value>
  </data>
  <data name="Cryptography_TransformBeyondEndOfBuffer" xml:space="preserve">
    <value>Attempt to transform beyond end of buffer.</value>
  </data>
  <data name="Cryptography_UnexpectedTransformTruncation" xml:space="preserve">
    <value>CNG provider unexpectedly terminated encryption or decryption prematurely.</value>
  </data>
  <data name="Cryptography_UnknownHashAlgorithm" xml:space="preserve">
    <value>'{0}' is not a known hash algorithm.</value>
  </data>
  <data name="Cryptography_UnknownPaddingMode" xml:space="preserve">
    <value>Unknown padding mode used.</value>
  </data>
  <data name="Cryptography_WeakKey" xml:space="preserve">
    <value>Specified key is a known weak key for this algorithm and cannot be used.</value>
  </data>
  <data name="WorkInProgress_UnsupportedHash" xml:space="preserve">
    <value>Unsupported hash algorithm. RSACng currently supports only MD5, SHA1, SHA256, SHA384 and SHA512.</value>
  </data>
</root>
