<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ImageTooSmall" xml:space="preserve">
    <value>Image is too small.</value>
  </data>
  <data name="InvalidCorHeaderSize" xml:space="preserve">
    <value>Invalid COR header size.</value>
  </data>
  <data name="InvalidHandle" xml:space="preserve">
    <value>Invalid handle.</value>
  </data>
  <data name="UnexpectedHandleKind" xml:space="preserve">
    <value>Unexpected handle kind: {0}.</value>
  </data>
  <data name="UnexpectedOpCode" xml:space="preserve">
    <value>Unexpected op-code: {0}.</value>
  </data>
  <data name="InvalidLocalSignatureToken" xml:space="preserve">
    <value>Invalid local signature token: 0x{0:X8}</value>
  </data>
  <data name="InvalidMetadataSectionSpan" xml:space="preserve">
    <value>Invalid metadata section span.</value>
  </data>
  <data name="InvalidMethodHeader1" xml:space="preserve">
    <value>Invalid method header: 0x{0:X2}</value>
  </data>
  <data name="InvalidMethodHeader2" xml:space="preserve">
    <value>Invalid method header: 0x{0:X2} 0x{1:X2}</value>
  </data>
  <data name="InvalidPESignature" xml:space="preserve">
    <value>Invalid PE signature.</value>
  </data>
  <data name="InvalidSehHeader" xml:space="preserve">
    <value>Invalid SEH header: 0x{0:X2}</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Invalid token.</value>
  </data>
  <data name="MetadataImageDoesNotRepresentAnAssembly" xml:space="preserve">
    <value>Metadata image doesn't represent an assembly.</value>
  </data>
  <data name="StandaloneDebugMetadataImageDoesNotContainModuleTable" xml:space="preserve">
    <value>Standalone debug metadata image doesn't contain Module table.</value>
  </data>
  <data name="PEImageNotAvailable" xml:space="preserve">
    <value>PE image not available.</value>
  </data>
  <data name="MissingDataDirectory" xml:space="preserve">
    <value>Missing data directory.</value>
  </data>
  <data name="NotMetadataHeapHandle" xml:space="preserve">
    <value>Specified handle is not a valid metadata heap handle.</value>
  </data>
  <data name="NotMetadataTableOrUserStringHandle" xml:space="preserve">
    <value>Specified handle is not a valid metadata table or UserString heap handle.</value>
  </data>
  <data name="SectionTooSmall" xml:space="preserve">
    <value>Section too small.</value>
  </data>
  <data name="StreamMustSupportReadAndSeek" xml:space="preserve">
    <value>Stream must support read and seek operations.</value>
  </data>
  <data name="UnknownFileFormat" xml:space="preserve">
    <value>Unknown file format.</value>
  </data>
  <data name="UnknownPEMagicValue" xml:space="preserve">
    <value>Unknown PE Magic value.</value>
  </data>
  <data name="MetadataTableNotSorted" xml:space="preserve">
    <value>Metadata table {0} not sorted.</value>
  </data>
  <data name="AssemblyTableInvalidNumberOfRows" xml:space="preserve">
    <value>Invalid number of rows of Assembly table: {0}.</value>
  </data>
  <data name="ModuleTableInvalidNumberOfRows" xml:space="preserve">
    <value>Invalid number of rows of Module table: {0}.</value>
  </data>
  <data name="UnknownTables" xml:space="preserve">
    <value>Unknown tables: 0x{0:x16}.</value>
  </data>
  <data name="IllegalTablesInCompressedMetadataStream" xml:space="preserve">
    <value>Illegal tables in compressed metadata stream.</value>
  </data>
  <data name="TableRowCountSpaceTooSmall" xml:space="preserve">
    <value>Table row count space to small.</value>
  </data>
  <data name="OutOfBoundsRead" xml:space="preserve">
    <value>Read out of bounds.</value>
  </data>
  <data name="OutOfBoundsWrite" xml:space="preserve">
    <value>Write out of bounds.</value>
  </data>
  <data name="MetadataHeaderTooSmall" xml:space="preserve">
    <value>Metadata header too small.</value>
  </data>
  <data name="MetadataSignature" xml:space="preserve">
    <value>Invalid COR20 header signature.</value>
  </data>
  <data name="NotEnoughSpaceForVersionString" xml:space="preserve">
    <value>Not enough space for version string.</value>
  </data>
  <data name="StreamHeaderTooSmall" xml:space="preserve">
    <value>Stream header too small.</value>
  </data>
  <data name="NotEnoughSpaceForStreamHeaderName" xml:space="preserve">
    <value>Not enough space for stream header name.</value>
  </data>
  <data name="NotEnoughSpaceForStringStream" xml:space="preserve">
    <value>Not enough space for String stream.</value>
  </data>
  <data name="NotEnoughSpaceForBlobStream" xml:space="preserve">
    <value>Not enough space for Blob stream.</value>
  </data>
  <data name="NotEnoughSpaceForGUIDStream" xml:space="preserve">
    <value>Not enough space for GUID stream.</value>
  </data>
  <data name="NotEnoughSpaceForMetadataStream" xml:space="preserve">
    <value>Not enough space for Metadata stream.</value>
  </data>
  <data name="InvalidMetadataStreamFormat" xml:space="preserve">
    <value>Invalid Metadata stream format.</value>
  </data>
  <data name="MetadataTablesTooSmall" xml:space="preserve">
    <value>Metadata tables too small.</value>
  </data>
  <data name="MetadataTableHeaderTooSmall" xml:space="preserve">
    <value>Metadata table header too small.</value>
  </data>
  <data name="WinMDMissingMscorlibRef" xml:space="preserve">
    <value>Missing mscorlib reference in AssemblyRef table.</value>
  </data>
  <data name="UnableToReadMetadataFile" xml:space="preserve">
    <value>Unable to read metadata file.</value>
  </data>
  <data name="UnexpectedStreamEnd" xml:space="preserve">
    <value>Unexpected stream end.</value>
  </data>
  <data name="InvalidMethodRva" xml:space="preserve">
    <value>Invalid relative virtual address (RVA): 0x{0:X8}</value>
  </data>
  <data name="CantGetOffsetForVirtualHeapHandle" xml:space="preserve">
    <value>Can't get a heap offset for a virtual heap handle</value>
  </data>
  <data name="InvalidSectionName" xml:space="preserve">
    <value>Invalid section name</value>
  </data>
  <data name="InvalidNumberOfSections" xml:space="preserve">
    <value>Invalid number of sections in declared in PE header.</value>
  </data>
  <data name="InvalidSignature" xml:space="preserve">
    <value>Invalid signature.</value>
  </data>
  <data name="PEImageDoesNotHaveMetadata" xml:space="preserve">
    <value>PE image does not have metadata.</value>
  </data>
  <data name="InvalidCodedIndex" xml:space="preserve">
    <value>Invalid coded index.</value>
  </data>
  <data name="InvalidCompressedInteger" xml:space="preserve">
    <value>Invalid compressed integer.</value>
  </data>
  <data name="InvalidDocumentName" xml:space="preserve">
    <value>Invalid document name.</value>
  </data>
  <data name="RowIdOrHeapOffsetTooLarge" xml:space="preserve">
    <value>Row ID or heap offset is too large.</value>
  </data>
  <data name="EnCMapNotSorted" xml:space="preserve">
    <value>EnCMap table not sorted or has missing records.</value>
  </data>
  <data name="InvalidSerializedString" xml:space="preserve">
    <value>Invalid serialized string.</value>
  </data>
  <data name="StreamTooLarge" xml:space="preserve">
    <value>Stream length minus starting position is too large to hold a PEImage.</value>
  </data>
  <data name="NegativeByteCountOrOffset" xml:space="preserve">
    <value>Negative byte count or offset.</value>
  </data>
  <data name="ImageTooSmallOrContainsInvalidOffsetOrCount" xml:space="preserve">
    <value>Image is either too small or contains an invalid byte offset or count.</value>
  </data>
  <data name="LitteEndianArchitectureRequired" xml:space="preserve">
    <value>Little-endian architecture required.</value>
  </data>
  <data name="MetadataStringDecoderEncodingMustBeUtf8" xml:space="preserve">
    <value>The MetadataStringDecoder instance used to instantiate the Metadata reader must have a UTF8 encoding.</value>
  </data>
  <data name="InvalidConstantValue" xml:space="preserve">
    <value>Invalid constant value.</value>
  </data>
  <data name="InvalidConstantValueOfType" xml:space="preserve">
    <value>Value of type '{0}' is not a constant.</value>
  </data>
  <data name="InvalidImportDefinitionKind" xml:space="preserve">
    <value>Invalid import definition kind: {0}.</value>
  </data>
  <data name="ValueTooLarge" xml:space="preserve">
    <value>Value is too large.</value>
  </data>
  <data name="BlobTooLarge" xml:space="preserve">
    <value>Blob is to large.</value>
  </data>
  <data name="InvalidTypeSize" xml:space="preserve">
    <value>Invalid type size.</value>
  </data>
  <data name="HandleBelongsToFutureGeneration" xml:space="preserve">
    <value>Handle belongs to a future generation</value>
  </data>
  <data name="InvalidRowCount" xml:space="preserve">
    <value>Invalid row count: {0}</value>
  </data>
  <data name="InvalidEntryPointToken" xml:space="preserve">
    <value>Invalid entry point token: 0x{0:8X}</value>
  </data>
  <data name="TooManySubnamespaces" xml:space="preserve">
    <value>There are too many subnamespaces.</value>
  </data>
  <data name="TooManyExceptionRegions" xml:space="preserve">
    <value>There are too many exception regions.</value>
  </data>
  <data name="SequencePointValueOutOfRange" xml:space="preserve">
    <value>Sequence point value is out of range.</value>
  </data>
  <data name="InvalidDirectoryRVA" xml:space="preserve">
    <value>Invalid directory relative virtual address.</value>
  </data>
  <data name="InvalidDirectorySize" xml:space="preserve">
    <value>Invalid directory size.</value>
  </data>
  <data name="InvalidDebugDirectoryEntryCharacteristics" xml:space="preserve">
    <value>The value of field Characteristics in debug directory entry must be zero.</value>
  </data>
  <data name="UnexpectedCodeViewDataSignature" xml:space="preserve">
    <value>Unexpected CodeView data signature value.</value>
  </data>
  <data name="UnexpectedEmbeddedPortablePdbDataSignature" xml:space="preserve">
    <value>Unexpected Embedded Portable PDB data signature value.</value>
  </data>  
  <data name="UnexpectedPdbChecksumDataSignature" xml:space="preserve">
    <value>Unexpected PDB Checksum data signature value.</value>
  </data>
  <data name="InvalidPdbChecksumDataFormat" xml:space="preserve">
    <value>Invalid PDB Checksum data format.</value>
  </data>
  <data name="UnexpectedSignatureHeader" xml:space="preserve">
    <value>Expected signature header for '{0}', but found '{1}' (0x{2:x2}).</value>
  </data>
  <data name="UnexpectedSignatureHeader2" xml:space="preserve">
    <value>Expected signature header for '{0}' or '{1}', but found '{2}' (0x{3:x2}).</value>
  </data>
  <data name="NotTypeDefOrRefHandle" xml:space="preserve">
    <value>Specified handle is not a TypeDefinitionHandle or TypeRefererenceHandle.</value>
  </data>
  <data name="UnexpectedSignatureTypeCode" xml:space="preserve">
    <value>Unexpected SignatureTypeCode: (0x{0:x}).</value>
  </data>
  <data name="SignatureTypeSequenceMustHaveAtLeastOneElement" xml:space="preserve">
    <value>Signature type sequence must have at least one element.</value>
  </data>
  <data name="NotTypeDefOrRefOrSpecHandle" xml:space="preserve">
    <value>Specified handle is not a TypeDefinitionHandle, TypeRefererenceHandle, or TypeSpecificationHandle.</value>
  </data>
  <data name="UnexpectedDebugDirectoryType" xml:space="preserve">
    <value>The Debug directory was not of type {0}.</value>
  </data>
  <data name="HeapSizeLimitExceeded" xml:space="preserve">
    <value>The limit on the size of {0} heap has been exceeded.</value>
  </data>
  <data name="BuilderMustAligned" xml:space="preserve">
    <value>Builder must be aligned to 4 byte boundary.</value>
  </data>
  <data name="BuilderAlreadyLinked" xml:space="preserve">
    <value>The operation is not valid on this builder as it has been linked with another one.</value>
  </data>
  <data name="ReturnedBuilderSizeTooSmall" xml:space="preserve">
    <value>The size of the builder returned by {0}.{1} is smaller than requested.</value>
  </data>
  <data name="SignatureNotVarArg" xml:space="preserve">
    <value>Can't add vararg parameters to non-vararg signature.</value>
  </data>
  <data name="LabelDoesntBelongToBuilder" xml:space="preserve">
    <value>Specified label doesn't belong to the current builder.</value>
  </data>
  <data name="ControlFlowBuilderNotAvailable" xml:space="preserve">
    <value>Can't emit a branch or exception region, the current encoder not created with a control flow builder.</value>
  </data>
  <data name="BaseReaderMustBeFullMetadataReader" xml:space="preserve">
    <value>Base reader must be a full metadata reader.</value>
  </data>
  <data name="ModuleAlreadyAdded" xml:space="preserve">
    <value>Module already added.</value>
  </data>
  <data name="AssemblyAlreadyAdded" xml:space="preserve">
    <value>Assembly already added.</value>
  </data>
  <data name="ExpectedListOfSize" xml:space="preserve">
    <value>Expected list of size {0}.</value>
  </data>
  <data name="ExpectedArrayOfSize" xml:space="preserve">
    <value>Expected array of size {0}.</value>
  </data>
  <data name="ExpectedNonEmptyList" xml:space="preserve">
    <value>Expected non-empty list.</value>
  </data>  
  <data name="ExpectedNonEmptyArray" xml:space="preserve">
    <value>Expected non-empty array.</value>
  </data>
  <data name="ExpectedNonEmptyString" xml:space="preserve">
    <value>Expected non-empty string.</value>
  </data>
  <data name="ReadersMustBeDeltaReaders" xml:space="preserve">
    <value>Specified readers must be minimal delta metadata readers.</value>
  </data>
  <data name="SignatureProviderReturnedInvalidSignature" xml:space="preserve">
    <value>Signature provider returned invalid signature.</value>
  </data>
  <data name="UnknownSectionName" xml:space="preserve">
    <value>Unknown section name: '{0}'.</value>
  </data>
  <data name="HashTooShort" xml:space="preserve">
    <value>Hash must be at least {0}B long.</value>
  </data>
  <data name="UnexpectedArrayLength" xml:space="preserve">
    <value>Expected array of length {0}.</value>
  </data>
  <data name="ValueMustBeMultiple" xml:space="preserve">
    <value>Value must be multiple of {0}.</value>
  </data>
  <data name="MustNotReturnNull" xml:space="preserve">
    <value>{0} must not return null.</value>
  </data>
  <data name="MetadataVersionTooLong" xml:space="preserve">
    <value>Metadata version too long.</value>
  </data>
  <data name="RowCountMustBeZero" xml:space="preserve">
    <value>Row count must be zero for table #{0}.</value>
  </data>
  <data name="RowCountOutOfRange" xml:space="preserve">
    <value>Row count specified for table index {0} is out of allowed range.</value>
  </data>
  <data name="SizeMismatch" xml:space="preserve">
    <value>Declared size doesn't correspond to the actual size.</value>
  </data>
  <data name="DataTooBig" xml:space="preserve">
    <value>Data too big to fit in memory.</value>
  </data>
  <data name="UnsupportedFormatVersion" xml:space="preserve">
    <value>Unsupported format version: {0}</value>
  </data>
  <data name="DistanceBetweenInstructionAndLabelTooBig" xml:space="preserve">
    <value>The distance between the instruction {0} (offset {1}) and the target label doesn't fit the operand size: {2}</value>
  </data>
  <data name="LabelNotMarked" xml:space="preserve">
    <value>Label {0} has not been marked.</value>
  </data>
  <data name="MethodHasNoExceptionRegions" xml:space="preserve">
    <value>Method body was created with no exception regions.</value>
  </data>
  <data name="InvalidExceptionRegionBounds" xml:space="preserve">
    <value>Invalid exception region bounds: start offset ({0}) is greater than end offset ({1}).</value>
  </data>
  <data name="ArrayInitializedStateNotEqual" xml:space="preserve">
    <value>Object is not an array with the same initialization state as the array to compare it to.</value>
  </data>
  <data name="ArrayLengthsNotEqual" xml:space="preserve">
    <value>Object is not an array with the same number of elements as the array to compare it to.</value>
  </data>
  <data name="CannotFindOldValue" xml:space="preserve">
    <value>Cannot find the old value</value>
  </data>
  <data name="CapacityMustBeGreaterThanOrEqualToCount" xml:space="preserve">
    <value>Capacity was less than the current Count of elements.</value>
  </data>
  <data name="CapacityMustEqualCountOnMove" xml:space="preserve">
    <value>MoveToImmutable can only be performed when Count equals Capacity.</value>
  </data>
  <data name="InvalidOperationOnDefaultArray" xml:space="preserve">
    <value>This operation cannot be performed on a default instance of ImmutableArray&lt;T&gt;.  Consider initializing the array, or checking the ImmutableArray&lt;T&gt;.IsDefault property.</value>
  </data>
</root>

