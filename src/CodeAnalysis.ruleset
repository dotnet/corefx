<RuleSet Name="Microsoft.Analyzers.ManagedCodeAnalysis" Description="Microsoft.Analyzers.ManagedCodeAnalysis" ToolsVersion="14.0">
  <Rules AnalyzerId="Microsoft.Analyzers.ManagedCodeAnalysis" RuleNamespace="Microsoft.Rules.Managed">
    <Rule Id="CA1000" Action="None" /> <!-- Do not declare static members on generic types -->
    <Rule Id="CA1001" Action="None" /> <!-- Non disposable class owns disposable fields -->
    <Rule Id="CA1010" Action="None" /> <!-- Collections should implement generic interface -->
    <Rule Id="CA1028" Action="None" /> <!-- Enum storage should be Int32 -->
    <Rule Id="CA1030" Action="None" /> <!-- Use events where appropriate -->
    <Rule Id="CA1031" Action="None" /> <!-- Do not catch general exception types -->
    <Rule Id="CA1032" Action="None" /> <!-- Implement standard exception constructors  -->
    <Rule Id="CA1034" Action="None" /> <!-- Nested types should not be visible -->
    <Rule Id="CA1036" Action="None" /> <!-- Overload comparison operators when implementing System.IComparable -->
    <Rule Id="CA1041" Action="None" /> <!-- Provide ObsoleteAttribute message -->
    <Rule Id="CA1043" Action="None" /> <!-- Use integral or string argument for indexers -->
    <Rule Id="CA1044" Action="None" /> <!-- Properties should not be write only -->
    <Rule Id="CA1051" Action="None" /> <!-- Do not declare visible instance fields -->
    <Rule Id="CA1052" Action="None" /> <!-- Static holder types should be sealed -->
    <Rule Id="CA1054" Action="None" /> <!-- URI parameters should not be strings -->
    <Rule Id="CA1055" Action="None" /> <!-- URI return values should not be strings -->
    <Rule Id="CA1056" Action="None" /> <!-- URI properties should not be strings -->
    <Rule Id="CA1058" Action="None" /> <!-- Types should not extend certain base types -->
    <Rule Id="CA1061" Action="None" /> <!-- Do not hide base class methods -->
    <Rule Id="CA1062" Action="None" /> <!-- Validate arguments of public methods -->
    <Rule Id="CA1063" Action="None" /> <!-- Implement IDisposable correctly -->
    <Rule Id="CA1064" Action="None" /> <!-- Exceptions should be public -->
    <Rule Id="CA1065" Action="None" /> <!-- Do not raise exceptions in unexpected locations -->
    <Rule Id="CA1066" Action="None" /> <!-- Type should implement IEquatable -->
    <Rule Id="CA1067" Action="None" /> <!-- Override Object.Equals(object) when implementing IEquatable -->
    <Rule Id="CA1068" Action="None" /> <!-- CancellationToken parameters must come last -->
    <Rule Id="CA1200" Action="None" /> <!-- Avoid using cref tags with a prefix -->
    <Rule Id="CA1303" Action="None" /> <!-- Do not pass literals as localized parameters -->
    <Rule Id="CA1304" Action="None" /> <!-- Specify CultureInfo -->
    <Rule Id="CA1305" Action="None" /> <!-- Specify IFormatProvider -->
    <Rule Id="CA1307" Action="None" /> <!-- Specify StringComparison -->
    <Rule Id="CA1308" Action="None" /> <!-- Normalize strings to upper case -->
    <Rule Id="CA1707" Action="None" /> <!-- Identifers should not contain underscores -->
    <Rule Id="CA1710" Action="None" /> <!-- Identifers should have correct suffix -->
    <Rule Id="CA1712" Action="None" /> <!-- Do not prefix enum values with type name -->
    <Rule Id="CA1714" Action="None" /> <!-- Flags enums should have plural names -->
    <Rule Id="CA1715" Action="None" /> <!-- Type parameters names should be prefixed with T -->
    <Rule Id="CA1716" Action="None" /> <!-- Identifiers should not match keywords -->
    <Rule Id="CA1717" Action="None" /> <!-- Only FlagsAttribute enums should have plural names -->
    <Rule Id="CA1720" Action="None" /> <!-- Identifier contains type name -->
    <Rule Id="CA1721" Action="None" /> <!-- Property names should not match get methods -->
    <Rule Id="CA1724" Action="None" /> <!-- Type names should not match namespaces -->
    <Rule Id="CA1801" Action="None" /> <!-- Review unused parameters -->
    <Rule Id="CA1802" Action="None" /> <!-- Use literals where appropriate -->
    <Rule Id="CA1806" Action="None" /> <!-- Do not ignore method results -->
    <Rule Id="CA1810" Action="None" /> <!-- Initialize reference type static fields inline -->
    <Rule Id="CA1812" Action="None" /> <!-- Avoid uninstantiated internal classes -->
    <Rule Id="CA1814" Action="None" /> <!-- Prefer jagged arrays over multidimensional -->
    <Rule Id="CA1815" Action="None" /> <!-- Override equals and operator equals on value types -->
    <Rule Id="CA1816" Action="None" /> <!-- Dispose methods should call SuppressFinalize -->
    <Rule Id="CA1819" Action="None" /> <!-- Properties should not return arrays -->
    <Rule Id="CA1820" Action="None" /> <!-- Test for empty strings using string length -->
    <Rule Id="CA1822" Action="None" /> <!-- Mark members as static -->
    <Rule Id="CA1823" Action="None" /> <!-- Avoid unused private fields -->
    <Rule Id="CA2000" Action="None" /> <!-- Dispose objects before losing scope -->
    <Rule Id="CA2010" Action="None" /> <!-- Always consume the value returned by methods marked with PreserveSigAttribute -->
    <Rule Id="CA2100" Action="None" /> <!-- Review SQL queries for security vulnerabilities -->
    <Rule Id="CA2101" Action="None" /> <!-- Specify marshaling for P/Invoke string arguments -->
    <Rule Id="CA2119" Action="None" /> <!-- Seal methods that satisfy private interfaces -->
    <Rule Id="CA2207" Action="None" /> <!-- Initialize value type static fields inline -->
    <Rule Id="CA2208" Action="None" /> <!-- Instantiate exception arguments correctly -->
    <Rule Id="CA2211" Action="None" /> <!-- Non-constant fields should not be visible -->
    <Rule Id="CA2213" Action="None" /> <!-- Disposable Fields should be disposed -->
    <Rule Id="CA2214" Action="None" /> <!-- Do not call overridable methods in constructors -->
    <Rule Id="CA2216" Action="None" /> <!-- Disposable types should declare finalizer -->
    <Rule Id="CA2219" Action="None" /> <!-- Do not raise exceptions in finally clauses -->
    <Rule Id="CA2225" Action="None" /> <!-- Operator overloads have named alternates -->
    <Rule Id="CA2227" Action="None" /> <!-- Collection properties should be read only -->
    <Rule Id="CA2231" Action="None" /> <!-- Overload operator equals when overriding ValueType.Equals -->
    <Rule Id="CA2235" Action="None" /> <!-- Serializable type has non serializable field -->
    <Rule Id="CA2237" Action="None" /> <!-- Add [Serializable] to types that implement ISerializable -->
    <Rule Id="CA5366" Action="None" /> <!-- Use XmlReader For DataSet Read Xml -->
    <Rule Id="CA5369" Action="None" /> <!-- Use XmlReader For Deserialize -->
    <Rule Id="CA5371" Action="None" /> <!-- Use XmlReader For Schema Read -->
    <Rule Id="CA5372" Action="None" /> <!-- Use XmlReader For XPathDocument -->
  </Rules>
  <Rules AnalyzerId="xunit.analyzers" RuleNamespace="xunit.analyzers">
    <Rule Id="xUnit1010" Action="None" /> <!-- The value is not convertible to the method parameter type -->
    <Rule Id="xUnit1019" Action="None" /> <!-- MemberData must reference a member providing a valid data type -->
    <Rule Id="xUnit1024" Action="None" /> <!-- Test methods cannot have overloads -->
    <Rule Id="xUnit1026" Action="None" /> <!-- Theory methods should use all of their parameters -->
    <Rule Id="xUnit2000" Action="None" /> <!-- Constants and literals should be the expected argument -->
    <Rule Id="xUnit2002" Action="None" /> <!-- Do not use null check on value type -->
    <Rule Id="xUnit2005" Action="None" /> <!-- Do not use identity check on value type -->
    <Rule Id="xUnit2006" Action="None" /> <!-- Do not use invalid string equality check -->
    <Rule Id="xUnit2009" Action="None" /> <!-- Do not use boolean check to check for substrings -->
    <Rule Id="xUnit2013" Action="None" /> <!-- Do not use equality check to check for collection size. -->
    <Rule Id="xUnit2017" Action="None" /> <!-- Do not use Contains() to check if a value exists in a collection -->
    <Rule Id="xUnit2018" Action="None" /> <!-- Do not compare an object's exact type to an abstract class or interface -->
  </Rules>
</RuleSet>
