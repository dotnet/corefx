<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <_SerializationAssemblyName>$(AssemblyName).XmlSerializers</_SerializationAssemblyName>
    <_SerializerDllIntermediateFolder>$(IntermediateOutputPath)$(_SerializationAssemblyName).dll</_SerializerDllIntermediateFolder>
    <_SerializerPdbIntermediateFolder>$(IntermediateOutputPath)$(_SerializationAssemblyName).pdb</_SerializerPdbIntermediateFolder>
    <_SerializerCsIntermediateFolder>$(IntermediateOutputPath)$(_SerializationAssemblyName).cs</_SerializerCsIntermediateFolder>
    <_SGenWarningText>SGEN: Fail to generate the serializer for $(AssemblyName)$(TargetExt). Please follow the instructions at https://go.microsoft.com/fwlink/?linkid=858594 and try again.</_SGenWarningText>
    <_SerializationAssemblyDisabledWarnings>$(NoWarn);219;162;$(SerializationAssemblyDisabledWarnings)</_SerializationAssemblyDisabledWarnings>
    <_SgenRspFilePath>$(IntermediateOutputPath)sgen.rsp</_SgenRspFilePath>
    <_CscRspFilePath>$(IntermediateOutputPath)csc.rsp</_CscRspFilePath>
  </PropertyGroup>

  <Target Name="GenerateSerializationAssembly" AfterTargets="Build">
    <Delete Condition="Exists('$(_SerializerDllIntermediateFolder)') == 'true'" Files="$(_SerializerDllIntermediateFolder)" ContinueOnError="true"/>
    <Delete Condition="Exists('$(_SerializerPdbIntermediateFolder)') == 'true'" Files="$(_SerializerPdbIntermediateFolder)" ContinueOnError="true"/>
    <Delete Condition="Exists('$(_SerializerCsIntermediateFolder)') == 'true'"  Files="$(_SerializerCsIntermediateFolder)" ContinueOnError="true"/>
    <Message Text="Running Serialization Tool" Importance="normal" />
    <Exec Condition="!Exists('$(_SgenRspFilePath)')" Command="dotnet Microsoft.XmlSerializer.Generator &quot;$(IntermediateOutputPath)$(AssemblyName)$(TargetExt)&quot; --force --quiet --reference &quot;@(ReferencePath)&quot;" ContinueOnError="true"/>
    <Exec Condition="Exists('$(_SgenRspFilePath)')" Command="dotnet Microsoft.XmlSerializer.Generator &quot;$(IntermediateOutputPath)$(AssemblyName)$(TargetExt)&quot;  --force --quiet --reference &quot;@(ReferencePath)&quot; @$(_SgenRspFilePath)" ContinueOnError="true"/>
    <Warning Condition="Exists('$(_SerializerCsIntermediateFolder)') != 'true'" Text="$(_SGenWarningText)" />
    <Csc Condition="Exists('$(_SerializerCsIntermediateFolder)') AND !Exists('$(_CscRspFilePath)')" ContinueOnError="true" OutputAssembly="$(_SerializerDllIntermediateFolder)" References="@(ReferencePath);@(IntermediateAssembly)" EmitDebugInformation="$(DebugSymbols)" Sources="$(_SerializerCsIntermediateFolder)" TargetType="Library" ToolExe="$(CscToolExe)" ToolPath="$(CscToolPath)" DisabledWarnings="$(_SerializationAssemblyDisabledWarnings)"/>
    <Csc Condition="Exists('$(_SerializerCsIntermediateFolder)') AND Exists('$(_CscRspFilePath)')" ContinueOnError="true" OutputAssembly="$(_SerializerDllIntermediateFolder)" References="@(ReferencePath);@(IntermediateAssembly)" EmitDebugInformation="$(DebugSymbols)" Sources="$(_SerializerCsIntermediateFolder)" TargetType="Library" ResponseFiles="$(_CscRspFilePath)"  ToolExe="$(CscToolExe)" ToolPath="$(CscToolPath)" DisabledWarnings="$(_SerializationAssemblyDisabledWarnings)"/>
    <Warning Condition="Exists('$(_SerializerDllIntermediateFolder)') != 'true' And Exists('$(_SerializerCsIntermediateFolder)') == 'true'" Text="$(_SGenWarningText)"/>
    <Copy Condition="Exists('$(_SerializerDllIntermediateFolder)') == 'true'" SourceFiles="$(_SerializerDllIntermediateFolder)" DestinationFolder="$(OutputPath)" />
    <Delete Condition="Exists('$(_SgenRspFilePath)')" Files="$(_SgenRspFilePath)" />
    <Delete Condition="Exists('$(_CscRspFilePath)')" Files="$(_CscRspFilePath)" />
  </Target>

  <Target Name="CleanSerializationAssembly" AfterTargets="CoreClean">
    <Message Text="Cleaning serialization files..." Importance="normal"/>
    <Delete Condition="Exists('$(OutputPath)\$(_SerializationAssemblyName).dll') == 'true'" Files="$(OutputPath)\$(_SerializationAssemblyName).dll" />
  </Target>

  <Target Name="CopySerializationAssembly" AfterTargets="PrepareForPublish">
    <Copy Condition="Exists('$(OutputPath)\$(AssemblyName).XmlSerializers.dll')=='true'" SourceFiles="$(OutputPath)\$(AssemblyName).XmlSerializers.dll" DestinationFolder="$(PublishDir)" SkipUnchangedFiles="false" />
  </Target>

  <Target Name="GenerateSerializationAssemblyForReferenceAssemblies" AfterTargets="GenerateSerializationAssembly" Condition="@(SerializationAssembly)!=''">
    <ItemGroup>
      <_SearchSerializationAssembly Include="@(Reference)">
        <AssemblyName>%(SerializationAssembly.Identity)</AssemblyName>
        <SerializationTypes>%(SerializationAssembly.SerializationType)</SerializationTypes>
      </_SearchSerializationAssembly>
      <_TargetSerializationAssembly Include="@(_SearchSerializationAssembly)" Condition="$([System.String]::new('%(_SearchSerializationAssembly.Identity)').EndsWith('%(_SearchSerializationAssembly.AssemblyName).dll'))" />
      <_ReferenceSerializationAssemblyName Include="%(SerializationAssembly.Identity).XmlSerializers" />
      <_ReferenceSerializerIntermediateFolder Include="$(IntermediateOutputPath)%(_ReferenceSerializationAssemblyName.Identity)" />
    </ItemGroup>

    <Delete Files="%(_ReferenceSerializerIntermediateFolder.Identity).dll" ContinueOnError="true"/>
    <Delete Files="%(_ReferenceSerializerIntermediateFolder.Identity).cs" ContinueOnError="true"/>
    <Delete Files="%(_ReferenceSerializerIntermediateFolder.Identity).pdb" ContinueOnError="true"/>
    <Message Text="Running Serialization Tool for Reference Assembly" Importance="normal" />
    <Exec Command="dotnet Microsoft.XmlSerializer.Generator --force --quiet --reference &quot;@(ReferencePath)&quot; --assembly &quot;%(_TargetSerializationAssembly.Identity)&quot; --type %(_TargetSerializationAssembly.SerializationTypes) --out &quot;$(IntermediateOutputPath)&quot;" ContinueOnError="true" />
    <Warning Condition="Exists('$(IntermediateOutputPath)%(_ReferenceSerializationAssemblyName.Identity).cs') != 'true'" Text="SGEN: Fail to generate %(_ReferenceSerializationAssemblyName.Identity)'. Please follow the instructions at https://go.microsoft.com/fwlink/?linkid=858594 and try again." />
    <Csc Condition="Exists('$(IntermediateOutputPath)%(_ReferenceSerializationAssemblyName.Identity).cs') == 'true'" ContinueOnError="true" OutputAssembly="$(IntermediateOutputPath)%(_ReferenceSerializationAssemblyName.Identity).dll" References="@(ReferencePath);@(IntermediateAssembly)" EmitDebugInformation="$(DebugSymbols)" Sources="$(IntermediateOutputPath)%(_ReferenceSerializationAssemblyName.Identity).cs" TargetType="Library" ToolExe="$(CscToolExe)" ToolPath="$(CscToolPath)" DisabledWarnings="$(_SerializationAssemblyDisabledWarnings)"/>
    <Warning Condition="Exists('$(IntermediateOutputPath)%(_ReferenceSerializationAssemblyName.Identity).dll') != 'true' And Exists('$(IntermediateOutputPath)%(_ReferenceSerializationAssemblyName.Identity).cs') == 'true'" Text="SGEN: Fail to compile %(_ReferenceSerializationAssemblyName.Identity).cs. Please follow the instructions at https://go.microsoft.com/fwlink/?linkid=858594 and try again." />
    <Copy Condition="Exists('%(_ReferenceSerializerIntermediateFolder.Identity).dll') == 'true'" SourceFiles="%(_ReferenceSerializerIntermediateFolder.Identity).dll" DestinationFolder="$(OutputPath)" />
  </Target>

  <Target Name="CleanReferenceSerializationAssemblies" AfterTargets="CoreClean" Condition="@(SerializationAssembly)!=''">
    <Message Text="Cleaning serialization files for reference assemblies ..." Importance="normal" />
    <Delete Condition="Exists('$(OutputPath)%(SerializationAssembly.Identity).XmlSerializers.dll') == 'true'" Files="$(OutputPath)%(SerializationAssembly.Identity).XmlSerializers.dll" />
  </Target>

  <Target Name="CopySerializerForReferenceAssemblies" AfterTargets="PrepareForPublish" Condition="@(SerializationAssembly)!=''">
    <Copy Condition="Exists('$(OutputPath)%(SerializationAssembly.Identity).XmlSerializers.dll') == 'true'" SourceFiles="$(OutputPath)%(SerializationAssembly.Identity).XmlSerializers.dll" DestinationFolder="$(PublishDir)" SkipUnchangedFiles="false" />
  </Target>

  <UsingTask
     TaskName="SgenParameters"
     TaskFactory="RoslynCodeTaskFactory"
     AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <Types />
      <References />
      <UseProxyTypes ParameterType="System.Boolean" />
      <Verbose ParameterType="System.Boolean" />
      <KeyFile />
      <KeyContainer />
      <DelaySign ParameterType="System.Boolean" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text" />
      <Using Namespace="System.Collections.Generic" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[     
        var sgenCommands=new List<string>();
        if(Types!=null)
          sgenCommands.Add("--type "+ Types);
        if(UseProxyTypes)
          sgenCommands.Add("--proxytypes");
        if(Verbose)
          sgenCommands.Add("--verbose");
        if(References!=null)
        {
          sgenCommands.Add("--reference "+References);
        }
        
        var cscCommands=new List<string>();
        if(KeyFile!=null)
            cscCommands.Add("-keyfile:"+KeyFile);
        if(KeyContainer!=null)
            cscCommands.Add("-keycontainer:"+KeyContainer);
        if(DelaySign)
            cscCommands.Add("-delaysign");

        if(sgenCommands.Count>0)
        {
            string sgenRspPath= @"$(_SgenRspFilePath)";
            if (File.Exists(sgenRspPath))
                File.Delete(sgenRspPath);
            try
            {
                File.WriteAllLines(sgenRspPath, sgenCommands.ToArray(), Encoding.UTF8);
            }
            catch (Exception e)
            {
                Console.Error.WriteLine(e.Message);
                throw;
            }
         }
        
        if(cscCommands.Count>0)
        {
            string cscRspPath=@"$(_CscRspFilePath)";
            if(File.Exists(cscRspPath))
                File.Delete(cscRspPath);
            try
            {
                File.WriteAllLines(cscRspPath, cscCommands.ToArray(), Encoding.UTF8);
            }
            catch (Exception e)
            {
                Console.Error.WriteLine(e.Message);
                throw;
            }           
        }
        
]]>
      </Code>
    </Task>
  </UsingTask>

</Project>
