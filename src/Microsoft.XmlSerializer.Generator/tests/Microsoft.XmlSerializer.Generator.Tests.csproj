<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <ProjectGuid>{0D1E2954-A5C7-4B8C-932A-31EB4A96A737}</ProjectGuid>
    <DefineConstants>$(DefineConstants);XMLSERIALIZERGENERATORTESTS</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <SkipTestsOnPlatform Condition="'$(TargetGroup)' == 'uap' OR '$(TargetsUnix)' == 'true'">true</SkipTestsOnPlatform>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='netstandard-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='netstandard-Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'uap-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'uap-Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netcoreapp-Unix-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netcoreapp-Unix-Release|AnyCPU'" />
  <ItemGroup Condition=" '$(SkipTestsOnPlatform)' != 'true' ">
    <Compile Include=".\SGenTests.cs" />
    <Compile Include="$(TestSourceFolder)..\..\System.Runtime.Serialization.Xml\tests\Utils.cs" />
    <Compile Include="$(TestSourceFolder)..\..\System.Runtime.Serialization.Xml\tests\SerializationTypes.cs" />
    <Compile Include="$(TestSourceFolder)..\..\System.Private.Xml\tests\XmlSerializer\XmlSerializerTests.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include=".\AlwaysPassTest.cs" />
    <Content Include="dotnet-Microsoft.XmlSerializer.Generator.runtimeconfig.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <ReferenceFromRuntime Include="dotnet-Microsoft.XmlSerializer.Generator" />
  </ItemGroup>
  <Target Name="GenerateSerializationAssembly" AfterTargets="Build" Condition=" '$(SkipTestsOnPlatform)' != 'true' " >
    <PropertyGroup>
      <SerializerName>$(AssemblyName).XmlSerializers</SerializerName>
    </PropertyGroup>
    <Message Text="TextHost $(TestHostExecutablePath)" Importance="high"/>
    <Copy SourceFiles="$(ToolsDir)\csc.runtimeconfig.json" DestinationFiles="$(RuntimePath)dotnet-Microsoft.XmlSerializer.Generator.runtimeconfig.json" />
    <Message Text="Running Serialization Tool" Importance="high" />
    <Exec ContinueOnError="true" Command="$(ToolsDir)\dotnetcli\dotnet $(RuntimePath)dotnet-Microsoft.XmlSerializer.Generator.dll $(OutputPath)Microsoft.XmlSerializer.Generator.Tests.dll /force /casesensitive"  />
    <Message Text="Complete Serialization tool" Importance="high" />
    <Warning Condition="Exists('$(OutputPath)$(SerializerName).cs') != 'true'" Text="Fail to generate $(OutputPath)$(SerializerName).cs"/>
    <Message Text="Compile the generated code." Importance="high" />
    <Csc Condition="Exists('$(OutputPath)$(SerializerName).cs') == 'true'"
         OutputAssembly="$(OutputPath)$(SerializerName).dll" 
         References="@(ReferencePath);@(IntermediateAssembly)" 
         EmitDebugInformation="$(DebugSymbols)"  
         Sources="$(OutputPath)$(SerializerName).cs" 
         TargetType="Library" 
         ToolExe="$(CscToolExe)" 
         ToolPath="$(CscToolPath)" 
         DisabledWarnings="$(NoWarn), 219" 
         UseSharedCompilation="true" />
    <Message Text="Complete compile" Importance="high" />
    <Warning Condition="Exists('$(OutputPath)$(SerializerName).dll') != 'true'" Text="Fail to generate $(OutputPath)$(SerializerName).dll"/>
    <Message Text="Test Path is $(TestPath)" Importance="high" />
    <Warning Condition="Exists('$(TestPath)') != 'true'" Text="TestPath not exist"/>
    <Copy Condition="Exists('$(TestPath)') == 'true'" SourceFiles="$(OutputPath)$(SerializerName).dll" DestinationFiles="$(TestPath)$(SerializerName).dll" />
    <Message Text="Copied to TestPath" Importance="high" />
  </Target>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
</Project>
