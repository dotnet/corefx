<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ID91" xml:space="preserve">
    <value>Object variable or With block variable not set.</value>
  </data>
  <data name="ID92" xml:space="preserve">
    <value>For loop not initialized.</value>
  </data>
  <data name="Argument_GEZero1" xml:space="preserve">
    <value>Argument '{0}' must be greater or equal to zero.</value>
  </data>
  <data name="Argument_IComparable2" xml:space="preserve">
    <value>Loop control variable of type '{1}' does not implement the 'System.IComparable' interface.</value>
  </data>
  <data name="Argument_InvalidValue" xml:space="preserve">
    <value>Arguments are not valid.</value>
  </data>
  <data name="ForLoop_CommonType2" xml:space="preserve">
    <value>Cannot convert start value of type '{0}' and step value of type '{1}' to a common numeric type.</value>
  </data>
  <data name="ForLoop_CommonType3" xml:space="preserve">
    <value>Cannot convert start value of type '{0}', limit value of type '{1}', and step value of type '{2}' to a common numeric type.</value>
  </data>
  <data name="ForLoop_ConvertToType3" xml:space="preserve">
    <value>Cannot convert argument '{0}' of type '{1}' to type '{2}'.</value>
  </data>
  <data name="ForLoop_OperatorRequired2" xml:space="preserve">
    <value>Type '{0}' must define an operator '{1}', with parameters of type '{0}', to be used in a 'For' statement.</value>
  </data>
  <data name="ForLoop_UnacceptableOperator2" xml:space="preserve">
    <value>Return and parameter types of '{0}' must be of type '{1}' to be used in a 'For' statement.</value>
  </data>
  <data name="ForLoop_UnacceptableRelOperator2" xml:space="preserve">
    <value>Parameter types of '{0}' must be of type '{1}' to be used in a 'For' statement.</value>
  </data>
  <data name="InternalError" xml:space="preserve">
    <value>Internal error in the Microsoft Visual Basic runtime.</value>
  </data>
  <data name="Argument_InvalidNullValue1" xml:space="preserve">
    <value>Argument '{0}' is Nothing.</value>
  </data>
  <data name="InvalidCast_FromTo" xml:space="preserve">
    <value>Conversion from type '{0}' to type '{1}' is not valid.</value>
  </data>
  <data name="MissingMember_NoDefaultMemberFound1" xml:space="preserve">
    <value>No default member found for type '{0}'.</value>
  </data>
  <data name="MissingMember_MemberNotFoundOnType2" xml:space="preserve">
    <value>Public member '{0}' on type '{1}' not found.</value>
  </data>
  <data name="IntermediateLateBoundNothingResult1" xml:space="preserve">
    <value>Invocation of '{0}' on type '{1}' returned Nothing.</value>
  </data>
  <data name="RValueBaseForValueType" xml:space="preserve">
    <value>Late-bound assignment to a field of value type '{0}' is not valid when '{1}' is the result of a late-bound expression.</value>
  </data>
  <data name="ExpressionNotProcedure" xml:space="preserve">
    <value>Expression '{0}' is not a procedure, but occurs as the target of a procedure call.</value>
  </data>
  <data name="MissingMember_ReadOnlyField2" xml:space="preserve">
    <value>Field '{0}' of type '{1}' is 'ReadOnly'.</value>
  </data>
  <data name="Argument_InvalidNamedArgs" xml:space="preserve">
    <value>Named arguments are not valid as array subscripts.</value>
  </data>
  <data name="SyncLockRequiresReferenceType1" xml:space="preserve">
    <value>'SyncLock' operand cannot be of type '{0}' because '{0}' is not a reference type.</value>
  </data>
  <data name="NullReference_InstanceReqToAccessMember1" xml:space="preserve">
    <value>Reference to non-shared member '{0}' requires an object reference.</value>
  </data>
  <data name="MatchArgumentFailure2" xml:space="preserve">
    <value>Method invocation failed because '{0}' cannot be called with these arguments:{1}</value>
  </data>
  <data name="NoGetProperty1" xml:space="preserve">
    <value>Property '{0}' is WriteOnly.</value>
  </data>
  <data name="NoSetProperty1" xml:space="preserve">
    <value>Property '{0}' is ReadOnly.</value>
  </data>
  <data name="MethodAssignment1" xml:space="preserve">
    <value>Method '{0}' cannot be the target of an assignment.</value>
  </data>
  <data name="NoViableOverloadCandidates1" xml:space="preserve">
    <value>Overload resolution failed because no '{0}' is Public.</value>
  </data>
  <data name="NoArgumentCountOverloadCandidates1" xml:space="preserve">
    <value>Overload resolution failed because no accessible '{0}' accepts this number of arguments.</value>
  </data>
  <data name="NoTypeArgumentCountOverloadCandidates1" xml:space="preserve">
    <value>Overload resolution failed because no accessible '{0}' accepts this number of type arguments.</value>
  </data>
  <data name="NoCallableOverloadCandidates2" xml:space="preserve">
    <value>Overload resolution failed because no Public '{0}' can be called with these arguments:{1}</value>
  </data>
  <data name="NoNonNarrowingOverloadCandidates2" xml:space="preserve">
    <value>Overload resolution failed because no Public '{0}' can be called without a narrowing conversion:{1}</value>
  </data>
  <data name="NoMostSpecificOverload2" xml:space="preserve">
    <value>Overload resolution failed because no Public '{0}' is most specific for these arguments:{1}</value>
  </data>
  <data name="AmbiguousCast2" xml:space="preserve">
    <value>Conversion from type '{0}' to type '{1}' is ambiguous.</value>
  </data>
  <data name="NotMostSpecificOverload" xml:space="preserve">
    <value>Not most specific.</value>
  </data>
  <data name="NamedParamNotFound2" xml:space="preserve">
    <value>Named argument '{0}' matches no parameter of '{1}'.</value>
  </data>
  <data name="NamedParamArrayArgument1" xml:space="preserve">
    <value>Named argument '{0}' cannot match a ParamArray parameter.</value>
  </data>
  <data name="NamedArgUsedTwice2" xml:space="preserve">
    <value>Parameter '{0}' of '{1}' already has a matching argument.</value>
  </data>
  <data name="OmittedArgument1" xml:space="preserve">
    <value>Argument not specified for parameter '{0}'.</value>
  </data>
  <data name="OmittedParamArrayArgument" xml:space="preserve">
    <value>Omitted argument cannot match a ParamArray parameter.</value>
  </data>
  <data name="ArgumentMismatch3" xml:space="preserve">
    <value>Argument matching parameter '{0}' cannot convert from '{1}' to '{2}'.</value>
  </data>
  <data name="ArgumentMismatchAmbiguous3" xml:space="preserve">
    <value>Argument matching parameter '{0}' cannot convert from '{1}' to '{2}' because the conversion is ambiguous.</value>
  </data>
  <data name="ArgumentNarrowing3" xml:space="preserve">
    <value>Argument matching parameter '{0}' narrows from '{1}' to '{2}'.</value>
  </data>
  <data name="ArgumentMismatchCopyBack3" xml:space="preserve">
    <value>ByRef parameter '{0}' cannot convert from '{1}' to '{2}' when assigning back to the matching argument.</value>
  </data>
  <data name="ArgumentMismatchAmbiguousCopyBack3" xml:space="preserve">
    <value>ByRef parameter '{0}' cannot convert from '{1}' to '{2}' when assigning back to the matching argument because the conversion is ambiguous.</value>
  </data>
  <data name="ArgumentNarrowingCopyBack3" xml:space="preserve">
    <value>ByRef parameter '{0}' narrows from '{1}' to '{2}' when assigning back to the matching argument.</value>
  </data>
  <data name="UnboundTypeParam1" xml:space="preserve">
    <value>Type parameter '{0}' cannot be determined.</value>
  </data>
  <data name="TypeInferenceFails1" xml:space="preserve">
    <value>Type argument inference fails for argument matching parameter '{0}'.</value>
  </data>
  <data name="FailedTypeArgumentBinding" xml:space="preserve">
    <value>Substitution of type arguments failed.</value>
  </data>
  <data name="UnaryOperand2" xml:space="preserve">
    <value>Operator '{0}' is not defined for type '{1}'.</value>
  </data>
  <data name="BinaryOperands3" xml:space="preserve">
    <value>Operator '{0}' is not defined for {1} and {2}.</value>
  </data>
  <data name="NoValidOperator_StringType1" xml:space="preserve">
    <value>string \"{0}\"</value>
  </data>
  <data name="NoValidOperator_NonStringType1" xml:space="preserve">
    <value>type '{0}'</value>
  </data>
  <data name="PropertySetMissingArgument1" xml:space="preserve">
    <value>Call to set property '{0}' requires at least one argument.</value>
  </data>
</root>