<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentWrongType" xml:space="preserve"><value>The argument is of the wrong type.</value></data>
  <data name="AsyncFlowAndESInteropNotSupported" xml:space="preserve"><value>TransactionScope with TransactionScopeAsyncFlowOption.Enabled option is not supported when the TransactionScope is used within Enterprise Service context with Automatic or Full EnterpriseServicesInteropOption enabled in parent scope.</value></data>
  <data name="BadAsyncResult" xml:space="preserve"><value>The IAsyncResult parameter must be the same parameter returned by BeginCommit.</value></data>
  <data name="BadResourceManagerId" xml:space="preserve"><value>Resource Manager Identifiers cannot be Guid.Empty.</value></data>
  <data name="CannotGetPrepareInfo" xml:space="preserve"><value>Unable to obtain IPrepareInfo interface from MSDTC proxy.</value></data>
  <data name="CannotGetTransactionIdentifier" xml:space="preserve"><value>Unable to obtain the transaction identifier.</value></data>
  <data name="CannotPromoteSnapshot" xml:space="preserve"><value>Transactions with IsolationLevel Snapshot cannot be promoted.</value></data>
  <data name="CannotSetCurrent" xml:space="preserve"><value>Current cannot be set directly when Com+ Interop is enabled.</value></data>
  <data name="CannotSupportNodeNameSpecification" xml:space="preserve"><value>Cannot support specification of node name for the distributed transaction manager through System.Transactions due to MSDTC Proxy version.</value></data>
  <data name="ConfigInvalidConfigurationValue" xml:space="preserve"><value>Invalid {0}/@{1} value: {2}.</value></data>
  <data name="ConfigNull" xml:space="preserve"><value>null</value></data>
  <data name="ConfigDistributedTransactionManagerName" xml:space="preserve"><value>DistributedTransactionManagerName must be a non-null, non-empty string.</value></data>
  <data name="ConfigInvalidTimeSpanValue" xml:space="preserve"><value>Valid TimeSpan values are greater than TimeSpan.Zero.</value></data>
  <data name="ConfigurationSectionNotFound" xml:space="preserve"><value>Configuration section {0} could not be created. Machine.config is missing information</value></data>
  <data name="CurrentDelegateSet" xml:space="preserve"><value>The delegate for an external current can only be set once.</value></data>
  <data name="DistributedTransactionManager" xml:space="preserve"><value>The distributedTransactionManager attribute for the LocalTransactionManager must specify a valid configured Transaction Manager.</value></data>
  <data name="DisposeScope" xml:space="preserve"><value>The current TransactionScope is already complete. You should dispose the TransactionScope.</value></data>
  <data name="DtcTransactionManagerUnavailable" xml:space="preserve"><value>MSDTC Transaction Manager is unavailable.</value></data>
  <data name="DuplicateRecoveryComplete" xml:space="preserve"><value>RecoveryComplete must not be called twice by the same resource manager identifier instance.</value></data>
  <data name="EnlistmentStateException" xml:space="preserve"><value>The operation is not valid for the current state of the enlistment.</value></data>
  <data name="EsNotSupported" xml:space="preserve"><value>Com+ Interop features cannot be supported.</value></data>
  <data name="FailedToCreateTraceSource" xml:space="preserve"><value>Failed to create trace source.</value></data>
  <data name="FailedToInitializeTraceSource" xml:space="preserve"><value>Failed to initialize trace source.</value></data>
  <data name="FailedToTraceEvent" xml:space="preserve"><value>Failed to trace event: {0}.</value></data>
  <data name="InternalError" xml:space="preserve"><value>Internal Error</value></data>
  <data name="InvalidArgument" xml:space="preserve"><value>The argument is invalid.</value></data>
  <data name="InvalidIPromotableSinglePhaseNotificationSpecified" xml:space="preserve"><value>The specified IPromotableSinglePhaseNotification is not the same as the one provided to EnlistPromotableSinglePhase.</value></data>
  <data name="InvalidRecoveryInformation" xml:space="preserve"><value>Transaction Manager in the Recovery Information does not match the configured transaction manager.</value></data>
  <data name="InvalidScopeThread" xml:space="preserve"><value>A TransactionScope must be disposed on the same thread that it was created.</value></data>
  <data name="NetworkTransactionsDisabled" xml:space="preserve"><value>Network access for Distributed Transaction Manager (MSDTC) has been disabled. Please enable DTC for network access in the security configuration for MSDTC using the Component Services Administrative tool.</value></data>
  <data name="OletxEnlistmentUnexpectedTransactionStatus" xml:space="preserve"><value>Internal Error - Unexpected transaction status value in enlistment constructor.</value></data>
  <data name="OletxTooManyEnlistments" xml:space="preserve"><value>The distributed transaction manager does not allow any more durable enlistments on the transaction.</value></data>
  <data name="OnlySupportedOnWinNT" xml:space="preserve"><value>System.Transactions is only supported on the Windows NT platform.</value></data>
  <data name="PrepareInfo" xml:space="preserve"><value>PrepareInfo buffer.</value></data>
  <data name="PromotionFailed" xml:space="preserve"><value>There was an error promoting the transaction to a distributed transaction.</value></data>
  <data name="PromotedReturnedInvalidValue" xml:space="preserve"><value>The Promote method returned an invalid value for the distributed transaction.</value></data>
  <data name="PromotedTransactionExists" xml:space="preserve"><value>The transaction returned from Promote already exists as a distributed transaction.</value></data>
  <data name="ProxyCannotSupportMultipleNodeNames" xml:space="preserve"><value>MSDTC Proxy cannot support specification of different node names in the same process.</value></data>
  <data name="ReenlistAfterRecoveryComplete" xml:space="preserve"><value>Calling TransactionManager.Reenlist is not allowed after TransactionManager.RecoveryComplete is called for a given resource manager identifier.</value></data>
  <data name="ResourceManagerIdDoesNotMatchRecoveryInformation" xml:space="preserve"><value>The resourceManagerIdentifier does not match the contents of the specified recovery information.</value></data>
  <data name="TooLate" xml:space="preserve"><value>It is too late to add enlistments to this transaction.</value></data>
  <data name="TraceActivityIdSet" xml:space="preserve"><value>Activity Id Set</value></data>
  <data name="TraceCloneCreated" xml:space="preserve"><value>Clone Created</value></data>
  <data name="TraceConfiguredDefaultTimeoutAdjusted" xml:space="preserve"><value>Configured DefaultTimeout is greater than configured DefaultMaximumTimeout - adjusting down to DefaultMaximumTimeout</value></data>
  <data name="TraceDependentCloneComplete" xml:space="preserve"><value>Dependent Clone Completed</value></data>
  <data name="TraceDependentCloneCreated" xml:space="preserve"><value>Dependent Clone Created</value></data>
  <data name="TraceEnlistment" xml:space="preserve"><value>Enlistment Created</value></data>
  <data name="TraceEnlistmentCallbackNegative" xml:space="preserve"><value>Enlistment Callback Negative</value></data>
  <data name="TraceEnlistmentCallbackPositive" xml:space="preserve"><value>Enlistment Callback Positive</value></data>
  <data name="TraceEnlistmentNotificationCall" xml:space="preserve"><value>Enlistment Notification Call</value></data>
  <data name="TraceExceptionConsumed" xml:space="preserve"><value>Exception Consumed</value></data>
  <data name="TraceInternalError" xml:space="preserve"><value>Internal Error</value></data>
  <data name="TraceInvalidOperationException" xml:space="preserve"><value>InvalidOperationException Thrown</value></data>
  <data name="TraceMethodEntered" xml:space="preserve"><value>Method Entered</value></data>
  <data name="TraceMethodExited" xml:space="preserve"><value>Method Exited</value></data>
  <data name="TraceNewActivityIdIssued" xml:space="preserve"><value>New Activity Id Issued</value></data>
  <data name="TraceRecoveryComplete" xml:space="preserve"><value>TransactionManager.RecoveryComplete Called</value></data>
  <data name="TraceReenlist" xml:space="preserve"><value>TransactionManager.Reenlist Called</value></data>
  <data name="TraceSourceBase" xml:space="preserve"><value>[Base]</value></data>
  <data name="TraceSourceLtm" xml:space="preserve"><value>[Lightweight]</value></data>
  <data name="TraceSourceDistributed" xml:space="preserve"><value>[Distributed]</value></data>
  <data name="TraceTransactionAborted" xml:space="preserve"><value>Transaction Aborted</value></data>
  <data name="TraceTransactionCommitCalled" xml:space="preserve"><value>CommittableTransaction.Commit Called</value></data>
  <data name="TraceTransactionCommitted" xml:space="preserve"><value>Transaction Committed</value></data>
  <data name="TraceTransactionCreated" xml:space="preserve"><value>Transaction Created</value></data>
  <data name="TraceTransactionDeserialized" xml:space="preserve"><value>Transaction Deserialized</value></data>
  <data name="TraceTransactionException" xml:space="preserve"><value>TransactionException Thrown</value></data>
  <data name="TraceTransactionInDoubt" xml:space="preserve"><value>Transaction InDoubt</value></data>
  <data name="TraceTransactionManagerCreated" xml:space="preserve"><value>Transaction Manager Instance Created</value></data>
  <data name="TraceTransactionPromoted" xml:space="preserve"><value>Transaction Promoted</value></data>
  <data name="TraceTransactionRollbackCalled" xml:space="preserve"><value>Transaction.Rollback Called</value></data>
  <data name="TraceTransactionScopeCreated" xml:space="preserve"><value>TransactionScope Created</value></data>
  <data name="TraceTransactionScopeCurrentTransactionChanged" xml:space="preserve"><value>TransactionScope Current Transaction Changed</value></data>
  <data name="TraceTransactionScopeDisposed" xml:space="preserve"><value>TransactionScope Disposed</value></data>
  <data name="TraceTransactionScopeIncomplete" xml:space="preserve"><value>TransactionScope Incomplete</value></data>
  <data name="TraceTransactionScopeNestedIncorrectly" xml:space="preserve"><value>TransactionScope Nested Incorrectly</value></data>
  <data name="TraceTransactionScopeTimeout" xml:space="preserve"><value>TransactionScope Timeout</value></data>
  <data name="TraceTransactionSerialized" xml:space="preserve"><value>Transaction Serialized</value></data>
  <data name="TraceTransactionTimeout" xml:space="preserve"><value>Transaction Timeout</value></data>
  <data name="TraceUnhandledException" xml:space="preserve"><value>Unhandled Exception</value></data>
  <data name="TransactionAborted" xml:space="preserve"><value>The transaction has aborted.</value></data>
  <data name="TransactionAlreadyCompleted" xml:space="preserve"><value>DependentTransaction.Complete or CommittableTransaction.Commit has already been called for this transaction.</value></data>
  <data name="TransactionAlreadyOver" xml:space="preserve"><value>The transaction has already been implicitly or explicitly committed or aborted.</value></data>
  <data name="TransactionIndoubt" xml:space="preserve"><value>The transaction is in doubt.</value></data>
  <data name="TransactionManagerCommunicationException" xml:space="preserve"><value>Communication with the underlying transaction manager has failed.</value></data>
  <data name="TransactionScopeComplete" xml:space="preserve"><value>The current TransactionScope is already complete.</value></data>
  <data name="TransactionScopeIncorrectCurrent" xml:space="preserve"><value>Transaction.Current has changed inside of the TransactionScope.</value></data>
  <data name="TransactionScopeInvalidNesting" xml:space="preserve"><value>TransactionScope nested incorrectly.</value></data>
  <data name="TransactionScopeIsolationLevelDifferentFromTransaction" xml:space="preserve"><value>The transaction specified for TransactionScope has a different IsolationLevel than the value requested for the scope.</value></data>
  <data name="TransactionScopeTimerObjectInvalid" xml:space="preserve"><value>TransactionScope timer object is invalid.</value></data>
  <data name="TransactionStateException" xml:space="preserve"><value>The operation is not valid for the state of the transaction.</value></data>
  <data name="UnableToDeserializeTransaction" xml:space="preserve"><value>Unable to deserialize the transaction.</value></data>
  <data name="UnableToDeserializeTransactionInternalError" xml:space="preserve"><value>Internal Error - Unable to deserialize the transaction.</value></data>
  <data name="UnableToGetNotificationShimFactory" xml:space="preserve"><value>Distributed transaction manager is unable to create the NotificationShimFactory object.</value></data>
  <data name="UnexpectedTransactionManagerConfigurationValue" xml:space="preserve"><value>Unexpected transaction manager configuration value found.</value></data>
  <data name="UnexpectedFailureOfThreadPool" xml:space="preserve"><value>There was an unexpected failure of QueueUserWorkItem.</value></data>
  <data name="UnexpectedTimerFailure" xml:space="preserve"><value>There was an unexpected failure of a timer.</value></data>
  <data name="UnrecognizedRecoveryInformation" xml:space="preserve"><value>The RecoveryInformation provided is not recognized by this version of System.Transactions.</value></data>
  <data name="VolEnlistNoRecoveryInfo" xml:space="preserve"><value>Volatile enlistments do not generate recovery information.</value></data>
  <data name="DistributedTxIDInTransactionException" xml:space="preserve"><value>{0} Distributed Transaction ID is {1}</value></data>
  <data name="CannotAddToClosedDocument" xml:space="preserve"><value>Cannot add an element to a closed document.</value></data>
  <data name="DocumentAlreadyClosed" xml:space="preserve"><value>Cannot close an element on a closed document.</value></data>
  <data name="EventLogValue" xml:space="preserve"><value>Process Name: {0}\nProcess Id: {1}\nCode: {2}\nDescription: {3}</value></data>
  <data name="EventLogEventIdValue" xml:space="preserve"><value>Event ID: {0}</value></data>
  <data name="EventLogExceptionValue" xml:space="preserve"><value>Exception: {0}</value></data>
  <data name="EventLogSourceValue" xml:space="preserve"><value>Source: {0}</value></data>
  <data name="EventLogTraceValue" xml:space="preserve"><value>Other information : {0}</value></data>
  <data name="NamedActivity" xml:space="preserve"><value>Named activity</value></data>
  <data name="OperationInvalidOnAnEmptyDocument" xml:space="preserve"><value>The operation is invalid because the document is empty.</value></data>
  <data name="TextNodeAlreadyPopulated" xml:space="preserve"><value>The text node already has a value.</value></data>
  <data name="ThrowingException" xml:space="preserve"><value>Throwing an exception</value></data>
  <data name="TracingException" xml:space="preserve"><value>Tracing an exception</value></data>
  <data name="TraceCodeAppDomainUnloading" xml:space="preserve"><value>AppDomain unloading.</value></data>
  <data name="TraceFailure" xml:space="preserve"><value>Trace Event Type: {0}\nTrace Code: {1}\nTrace Description {2}\nObject: {3}</value></data>
  <data name="UnhandledException" xml:space="preserve"><value>Unhandled exception</value></data>
  <data name="PromoterTypeInvalid" xml:space="preserve"><value>The specified PromoterType is invalid.</value></data>
  <data name="PromoterTypeUnrecognized" xml:space="preserve"><value>There is a promotable enlistment for the transaction which has a PromoterType value that is not recognized by System.Transactions. {0}</value></data>
  <data name="DistributedNotSupported" xml:space="preserve"><value>This platform does not support distributed transactions.</value></data>
</root>