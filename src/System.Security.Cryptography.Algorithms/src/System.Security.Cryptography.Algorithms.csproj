<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)'==''">Windows_Debug</Configuration>
  </PropertyGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Windows_Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{81A05E2E-E3AE-4246-B4E6-DD5F31FB71F9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <CLSCompliant>false</CLSCompliant>
    <PackageTargetFramework Condition="'$(PackageTargetFramework)'==''">dotnet5.4</PackageTargetFramework>
    <IsPartialFacadeAssembly Condition="'$(TargetGroup)'=='net46'">true</IsPartialFacadeAssembly>
    <PackageTargetRuntime Condition=" '$(TargetsWindows)' == 'true'">win7</PackageTargetRuntime>
    <PackageTargetRuntime Condition=" '$(TargetGroup)' == 'net46'"></PackageTargetRuntime>
    <PackageTargetRuntime Condition="'$(TargetsUnix)' == 'true'">unix</PackageTargetRuntime>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'FreeBSD_Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'FreeBSD_Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Linux_Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Linux_Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'OSX_Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'OSX_Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Windows_Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Windows_Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'net46_Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'net46_Release|AnyCPU'" />
  <ItemGroup Condition="'$(TargetGroup)'==''">
    <Compile Include="Internal\Cryptography\TripleDesImplementation.cs" />
    <Compile Include="System\Security\Cryptography\Aes.cs" />
    <Compile Include="System\Security\Cryptography\DeriveBytes.cs" />
    <None Include="System\Security\Cryptography\DSAParameters.cs" />
    <Compile Include="System\Security\Cryptography\ECDsa.cs" />
    <Compile Include="System\Security\Cryptography\MD5.cs" />
    <Compile Include="System\Security\Cryptography\SHA1.cs" />
    <Compile Include="System\Security\Cryptography\SHA256.cs" />
    <Compile Include="System\Security\Cryptography\SHA384.cs" />
    <Compile Include="System\Security\Cryptography\SHA512.cs" />
    <Compile Include="System\Security\Cryptography\HMACMD5.cs" />
    <Compile Include="System\Security\Cryptography\HMACSHA1.cs" />
    <Compile Include="System\Security\Cryptography\HMACSHA256.cs" />
    <Compile Include="System\Security\Cryptography\HMACSHA384.cs" />
    <Compile Include="System\Security\Cryptography\HMACSHA512.cs" />
    <Compile Include="System\Security\Cryptography\IncrementalHash.cs" />
    <Compile Include="System\Security\Cryptography\RandomNumberGenerator.cs" />
    <Compile Include="System\Security\Cryptography\Rfc2898DeriveBytes.cs" />
    <Compile Include="System\Security\Cryptography\RSA.cs" />
    <Compile Include="System\Security\Cryptography\RSAEncryptionPadding.cs" />
    <Compile Include="System\Security\Cryptography\RSAEncryptionPaddingMode.cs" />
    <Compile Include="System\Security\Cryptography\RSAParameters.cs" />
    <Compile Include="System\Security\Cryptography\RSASignaturePadding.cs" />
    <Compile Include="System\Security\Cryptography\RSASignaturePaddingMode.cs" />
    <Compile Include="System\Security\Cryptography\TripleDES.cs" />
    <Compile Include="Internal\Cryptography\AesImplementation.cs" />
    <Compile Include="Internal\Cryptography\Helpers.cs" />
    <Compile Include="Internal\Cryptography\HMACCommon.cs" />
    <Compile Include="Internal\Cryptography\HashAlgorithmNames.cs" />
    <Compile Include="$(CommonPath)\Internal\Cryptography\BasicSymmetricCipher.cs">
      <Link>Internal\Cryptography\BasicSymmetricCipher.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Internal\Cryptography\HashProvider.cs">
      <Link>Internal\Cryptography\HashProvider.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Internal\Cryptography\UniversalCryptoTransform.cs">
      <Link>Internal\Cryptography\UniversalCryptoTransform.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Internal\Cryptography\UniversalCryptoEncryptor.cs">
      <Link>Internal\Cryptography\UniversalCryptoEncryptor.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Internal\Cryptography\UniversalCryptoDecryptor.cs">
      <Link>Internal\Cryptography\UniversalCryptoDecryptor.cs</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetsWindows)' == 'true' AND '$(TargetGroup)'==''">
    <Compile Include="System\Security\Cryptography\RNGCryptoServiceProvider.Windows.cs" />
    <Compile Include="Internal\Cryptography\AesImplementation.Windows.cs" />
    <Compile Include="Internal\Cryptography\CngCipher.cs" />
    <Compile Include="Internal\Cryptography\HashProviderDispenser.Windows.cs" />
    <Compile Include="Internal\Cryptography\TripleDesImplementation.Windows.cs" />
    <Compile Include="$(CommonPath)\Interop\Windows\Interop.Libraries.cs">
      <Link>Common\Interop\Windows\Interop.Libraries.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Cng.cs">
      <Link>Common\Interop\Windows\BCrypt\Cng.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.BCryptGenRandom.cs">
      <Link>Common\Interop\Windows\BCrypt\Interop.BCryptGenRandom.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.NTSTATUS.cs">
      <Link>Common\Interop\Windows\BCrypt\Interop.NTSTATUS.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.CreateCryptographicException.cs">
      <Link>Common\Interop\Windows\BCrypt\Interop.CreateCryptographicException.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.BCryptOpenAlgorithmProvider.cs">
      <Link>Interop\Windows\BCrypt\Interop.BCryptOpenAlgorithmProvider.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.BCryptCloseAlgorithmProvider.cs">
      <Link>Interop\Windows\BCrypt\Interop.BCryptCloseAlgorithmProvider.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.BCryptDestroyHash.cs">
      <Link>Interop\Windows\BCrypt\Interop.BCryptDestroyHash.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.BCryptCreateHash.cs">
      <Link>Interop\Windows\BCrypt\Interop.BCryptCreateHash.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.BCryptHashData.cs">
      <Link>Interop\Windows\BCrypt\Interop.BCryptHashData.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.BCryptFinishHash.cs">
      <Link>Interop\Windows\BCrypt\Interop.BCryptFinishHash.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.BCryptGetProperty.cs">
      <Link>Interop\Windows\BCrypt\Interop.BCryptGetProperty.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\Interop.BCryptPropertyStrings.cs">
      <Link>Interop\Windows\BCrypt\Interop.BCryptPropertyStrings.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\BCrypt\BCryptAlgorithmCache.cs">
      <Link>Internal\Windows\BCrypt\BCryptAlgorithmCache.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Microsoft\Win32\SafeHandles\SafeBCryptHandle.cs">
      <Link>Microsoft\Win32\SafeHandles\SafeBCryptHandle.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Microsoft\Win32\SafeHandles\SafeBCryptAlgorithmHandle.cs">
      <Link>Microsoft\Win32\SafeHandles\SafeBCryptAlgorithmHandle.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Microsoft\Win32\SafeHandles\SafeBCryptHashHandle.cs">
      <Link>Microsoft\Win32\SafeHandles\SafeBCryptHashHandle.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Internal\Cryptography\HashProviderCng.cs">
      <Link>Internal\Cryptography\HashProviderCng.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Internal\Cryptography\Windows\CryptoThrowHelper.cs">
      <Link>Internal\Cryptography\Windows\CryptoThrowHelper.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\mincore\Interop.FormatMessage.cs">
      <Link>Internal\Windows\mincore\Interop.FormatMessage.cs</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetsUnix)' == 'true' ">
    <Compile Include="System\Security\Cryptography\RNGCryptoServiceProvider.Unix.cs" />
    <Compile Include="Internal\Cryptography\AesImplementation.Unix.cs" />
    <Compile Include="Internal\Cryptography\HashProviderDispenser.Unix.cs" />
    <Compile Include="Internal\Cryptography\OpenSslCipher.cs" />
    <Compile Include="Internal\Cryptography\TripleDesImplementation.Unix.cs" />
    <Compile Include="$(CommonPath)\Interop\Unix\Interop.Libraries.cs">
      <Link>Common\Interop\Unix\Interop.Libraries.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Unix\System.Security.Cryptography.Native\Interop.ERR.cs">
      <Link>Common\Interop\Unix\System.Security.Cryptography.Native\Interop.ERR.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Unix\System.Security.Cryptography.Native\Interop.EVP.cs">
      <Link>Common\Interop\Unix\System.Security.Cryptography.Native\Interop.EVP.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Unix\System.Security.Cryptography.Native\Interop.EVP.Cipher.cs">
      <Link>Common\Interop\Unix\System.Security.Cryptography.Native\Interop.EVP.Cipher.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Unix\System.Security.Cryptography.Native\Interop.Initialization.cs">
      <Link>Common\Interop\Unix\System.Security.Cryptography.Native\Interop.Initialization.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Unix\System.Security.Cryptography.Native\Interop.RAND.cs">
      <Link>Common\Interop\Unix\System.Security.Cryptography.Native\Interop.RAND.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Unix\System.Security.Cryptography.Native\Interop.Hmac.cs">
      <Link>Common\Interop\Unix\System.Security.Cryptography.Native\Interop.Hmac.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Microsoft\Win32\SafeHandles\SafeEvpCipherCtxHandle.Unix.cs">
      <Link>Common\Microsoft\Win32\SafeHandles\SafeEvpCipherCtxHandle.Unix.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Microsoft\Win32\SafeHandles\SafeEvpMdCtxHandle.Unix.cs">
      <Link>Common\Microsoft\Win32\SafeHandles\SafeEvpMdCtxHandle.Unix.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Microsoft\Win32\SafeHandles\SafeHmacCtxHandle.Unix.cs">
      <Link>Common\Microsoft\Win32\SafeHandles\SafeHmacCtxHandle.Unix.cs</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup Condition="'$(TargetGroup)'=='net46'">
    <TargetingPackReference Include="mscorlib" />
    <TargetingPackReference Include="System" />
    <TargetingPackReference Include="System.Core" />
    <Compile Include="System\Security\Cryptography\IncrementalHash.net46.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="project.json" />
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
</Project>
