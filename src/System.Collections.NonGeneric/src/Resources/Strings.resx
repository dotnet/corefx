<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arg_ArrayPlusOffTooSmall" xml:space="preserve">
    <value>Destination array is not long enough to copy all the items in the collection. Check array index and length.</value>
  </data>
  <data name="Arg_HTCapacityOverflow" xml:space="preserve">
    <value>Hashtable's capacity overflowed and went negative. Check load factor, capacity and the current size of the table.</value>
  </data>
  <data name="Arg_RankMultiDimNotSupported" xml:space="preserve">
    <value>Only single dimensional arrays are supported for the requested action.</value>
  </data>
  <data name="Arg_RemoveArgNotFound" xml:space="preserve">
    <value>Cannot remove the specified item because it was not found in the specified Collection.</value>
  </data>
  <data name="Argument_AddingDuplicate__" xml:space="preserve">
    <value>Item has already been added. Key in dictionary: '{0}'  Key being added: '{1}'</value>
  </data>
  <data name="Argument_ImplementIComparable" xml:space="preserve">
    <value>At least one object must implement IComparable.</value>
  </data>
  <data name="Argument_InvalidOffLen" xml:space="preserve">
    <value>Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.</value>
  </data>
  <data name="ArgumentNull_Array" xml:space="preserve">
    <value>Array cannot be null.</value>
  </data>
  <data name="ArgumentNull_Collection" xml:space="preserve">
    <value>Collection cannot be null.</value>
  </data>
  <data name="ArgumentNull_Dictionary" xml:space="preserve">
    <value>Dictionary cannot be null.</value>
  </data>
  <data name="ArgumentNull_Key" xml:space="preserve">
    <value>Key cannot be null.</value>
  </data>
  <data name="ArgumentOutOfRange_ArrayListInsert" xml:space="preserve">
    <value>Insertion index was out of range. Must be non-negative and less than or equal to size.</value>
  </data>
  <data name="ArgumentOutOfRange_BiggerThanCollection" xml:space="preserve">
    <value>Larger than collection size.</value>
  </data>
  <data name="ArgumentOutOfRange_Count" xml:space="preserve">
    <value>Count must be positive and count must refer to a location within the string/array/collection.</value>
  </data>
  <data name="ArgumentOutOfRange_HashtableLoadFactor" xml:space="preserve">
    <value>Load factor needs to be between 0.1 and 1.0.</value>
  </data>
  <data name="ArgumentOutOfRange_Index" xml:space="preserve">
    <value>Index was out of range. Must be non-negative and less than the size of the collection.</value>
  </data>
  <data name="ArgumentOutOfRange_MustBeNonNegNum" xml:space="preserve">
    <value>'{0}' must be non-negative.</value>
  </data>
  <data name="ArgumentOutOfRange_NeedNonNegNum" xml:space="preserve">
    <value>Non-negative number required.</value>
  </data>
  <data name="ArgumentOutOfRange_QueueGrowFactor" xml:space="preserve">
    <value>Queue grow factor must be between {0} and {1}.</value>
  </data>
  <data name="ArgumentOutOfRange_SmallCapacity" xml:space="preserve">
    <value>capacity was less than the current size.</value>
  </data>
  <data name="InvalidOperation_EmptyQueue" xml:space="preserve">
    <value>Queue empty.</value>
  </data>
  <data name="InvalidOperation_EmptyStack" xml:space="preserve">
    <value>Stack empty.</value>
  </data>
  <data name="InvalidOperation_EnumEnded" xml:space="preserve">
    <value>Enumeration already finished.</value>
  </data>
  <data name="InvalidOperation_EnumFailedVersion" xml:space="preserve">
    <value>Collection was modified; enumeration operation may not execute.</value>
  </data>
  <data name="InvalidOperation_EnumNotStarted" xml:space="preserve">
    <value>Enumeration has not started. Call MoveNext.</value>
  </data>
  <data name="InvalidOperation_EnumOpCantHappen" xml:space="preserve">
    <value>Enumeration has either not started or has already finished.</value>
  </data>
  <data name="InvalidOperation_HashInsertFailed" xml:space="preserve">
    <value>Hashtable insert failed. Load factor too high. The most common cause is multiple threads writing to the Hashtable simultaneously.</value>
  </data>
  <data name="InvalidOperation_UnderlyingArrayListChanged" xml:space="preserve">
    <value>This range in the underlying list is invalid. A possible cause is that elements were removed.</value>
  </data>
  <data name="NotSupported_FixedSizeCollection" xml:space="preserve">
    <value>Collection was of a fixed size.</value>
  </data>
  <data name="NotSupported_KeyCollectionSet" xml:space="preserve">
    <value>Mutating a key collection derived from a dictionary is not allowed.</value>
  </data>
  <data name="NotSupported_RangeCollection" xml:space="preserve">
    <value>The specified operation is not supported on Ranges.</value>
  </data>
  <data name="NotSupported_ReadOnlyCollection" xml:space="preserve">
    <value>Collection is read-only.</value>
  </data>
  <data name="NotSupported_SortedListNestedWrite" xml:space="preserve">
    <value>This operation is not supported on SortedList nested types because they require modifying the original SortedList.</value>
  </data>
</root>