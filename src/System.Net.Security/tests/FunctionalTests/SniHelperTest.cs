// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System.Collections.Generic;
using System.Linq;
using Xunit;

namespace System.Net.Security.Tests
{
    public class SniHelperTest
    {
        [Fact]
        public void SniHelper_ValidData_Ok()
        {
            InvalidClientHello(s_validClientHello, -1, shouldPass: true);
        }

        [Theory]
        [MemberData(nameof(InvalidClientHelloData))]
        public void SniHelper_InvalidData_Fails(int id, byte[] clientHello)
        {
            InvalidClientHello(clientHello, id, shouldPass: false);
        }

        [Theory]
        [MemberData(nameof(InvalidClientHelloDataTruncatedBytes))]
        public void SniHelper_TruncatedData_Fails(int id, byte[] clientHello)
        {
            InvalidClientHello(clientHello, id, shouldPass: false);
        }

        private void InvalidClientHello(byte[] clientHello, int id, bool shouldPass)
        {
            string ret = SniHelper.GetServerName(clientHello);
            if (shouldPass)
                Assert.NotNull(ret);
            else
                Assert.Null(ret);
        }

        private static IEnumerable<object[]> InvalidClientHelloData()
        {
            int id = 0;
            foreach (byte[] invalidClientHello in InvalidClientHello())
            {
                id++;
                yield return new object[] { id, invalidClientHello };
            }
        }

        private static IEnumerable<object[]> InvalidClientHelloDataTruncatedBytes()
        {
            // converting to base64 first to remove duplicated test cases
            var uniqueInvalidHellos = new HashSet<string>();
            foreach (byte[] invalidClientHello in InvalidClientHello())
            {
                for (int i = 0; i < invalidClientHello.Length - 1; i++)
                {
                    uniqueInvalidHellos.Add(Convert.ToBase64String(invalidClientHello.Take(i).ToArray()));
                }
            }

            for (int i = 0; i < s_validClientHello.Length - 1; i++)
            {
                uniqueInvalidHellos.Add(Convert.ToBase64String(s_validClientHello.Take(i).ToArray()));
            }

            int id = 0;
            foreach (string invalidClientHello in uniqueInvalidHellos)
            {
                id++;
                yield return new object[] { id, Convert.FromBase64String(invalidClientHello) };
            }
        }

        private static byte[] s_validClientHello = new byte[] {
            // SslPlainText.(ContentType+ProtocolVersion)
            0x16, 0x03, 0x03,
            // SslPlainText.length
            0x00, 0xCB,
            // Handshake.msg_type (client hello)
            0x01,
            // Handshake.length
            0x00, 0x00, 0xC7,
            // ClientHello.client_version
            0x03, 0x03,
            // ClientHello.random
            0x0C, 0x3C, 0x85, 0x78, 0xCA,
            0x67, 0x70, 0xAA, 0x38, 0xCB,
            0x28, 0xBC, 0xDC, 0x3E, 0x30,
            0xBF, 0x11, 0x96, 0x95, 0x1A,
            0xB9, 0xF0, 0x99, 0xA4, 0x91,
            0x09, 0x13, 0xB4, 0x89, 0x94,
            0x27, 0x2E,
            // ClientHello.SessionId
            0x00,
            // ClientHello.cipher_suites
            0x00, 0x2A, 0xC0, 0x2C, 0xC0,
            0x2B, 0xC0, 0x30, 0xC0, 0x2F,
            0x00, 0x9F, 0x00, 0x9E, 0xC0,
            0x24, 0xC0, 0x23, 0xC0, 0x28,
            0xC0, 0x27, 0xC0, 0x0A, 0xC0,
            0x09, 0xC0, 0x14, 0xC0, 0x13,
            0x00, 0x9D, 0x00, 0x9C, 0x00,
            0x3D, 0x00, 0x3C, 0x00, 0x35,
            0x00, 0x2F, 0x00, 0x0A,
            // ClientHello.compression_methods
            0x01, 0x01,
            // ClientHello.extension_list_length
            0x00, 0x74,
            // Extension.extension_type (server_name)
            0x00, 0x00,
            // ServerNameListExtension.length
            0x00, 0x39,
            // ServerName.length
            0x00, 0x37,
            // ServerName.type
            0x00,
            // HostName.length
            0x00, 0x34,
            // HostName.bytes
            0x61, 0x61, 0x61, 0x61, 0x61,
            0x61, 0x61, 0x61, 0x61, 0x61,
            0x61, 0x61, 0x61, 0x61, 0x61,
            0x61, 0x61, 0x61, 0x61, 0x61,
            0x61, 0x61, 0x61, 0x61, 0x61,
            0x61, 0x61, 0x61, 0x61, 0x61,
            0x61, 0x61, 0x61, 0x61, 0x61,
            0x61, 0x61, 0x61, 0x61, 0x61,
            0x61, 0x61, 0x61, 0x61, 0x61,
            0x61, 0x61, 0x61, 0x61, 0x61,
            0x61, 0x61,
            // Extension.extension_type (00 0A)
            0x00, 0x0A,
            // Extension 0A
            0x00, 0x08, 0x00, 0x06, 0x00,
            0x1D, 0x00, 0x17, 0x00, 0x18,
            // Extension.extension_type (00 0B)
            0x00, 0x0B,
            // Extension 0B
            0x00, 0x02, 0x01, 0x00,
            // Extension.extension_type (00 0D)
            0x00, 0x0D,
            // Extension 0D
            0x00, 0x14, 0x00, 0x12, 0x04,
            0x01, 0x05, 0x01, 0x02, 0x01,
            0x04, 0x03, 0x05, 0x03, 0x02,
            0x03, 0x02, 0x02, 0x06, 0x01,
            0x06, 0x03,
            // Extension.extension_type (00 23)
            0x00, 0x23,
            // Extension 00 23
            0x00, 0x00,
            // Extension.extension_type (00 17)
            0x00, 0x17,
            // Extension 17
            0x00, 0x00,
            // Extension.extension_type (FF 01)
            0xFF, 0x01,
            // Extension FF01
            0x00, 0x01, 0x00
        };

        private static IEnumerable<byte[]> InvalidClientHello()
        {
            // This test covers following test cases:
            // - Length of structure off by 1 (search for "length off by 1")
            // - Length of structure is max length (search for "max length")
            // - Type is invalid or unknown (i.e. SslPlainText.ClientType is not 0x16 - search for "unknown")
            // - Invalid utf-8 characters
            // in each case sni will be null or will cause parsing error - we only expect some parsing errors,
            // anything else is considered a bug
            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01 - length off by 1
                0x00, 0x02, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01 - max length
                0xFF, 0xFF, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17 - length off by 1
                0x00, 0x01,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17 - max length
                0xFF, 0xFF,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23 - length off by 1
                0x00, 0x01,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23 - max length
                0xFF, 0xFF,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D - length off by 1
                0x00, 0x15, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D - max length
                0xFF, 0xFF, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B - length off by 1
                0x00, 0x03, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B - max length
                0xFF, 0xFF, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A - length off by 1
                0x00, 0x09, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A - max length
                0xFF, 0xFF, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length - length off by 1
                0x00, 0x35,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length - max length
                0xFF, 0xFF,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type - unknown
                0x01,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length - length off by 1
                0x00, 0x38,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length - max length
                0xFF, 0xFF,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length - length off by 1
                0x00, 0x3A,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length - max length
                0xFF, 0xFF,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name) - unknown
                0x01, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length - length off by 1
                0x00, 0x75,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length - max length
                0xFF, 0xFF,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods - length off by 1
                0x02, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods - max length
                0xFF, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites - length off by 1
                0x00, 0x2B, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites - max length
                0xFF, 0xFF, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId - length off by 1
                0x01,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId - max length
                0xFF,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length - length off by 1
                0x00, 0x00, 0xC8,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length - max length
                0xFF, 0xFF, 0xFF,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello) - unknown
                0x00,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length - length off by 1
                0x00, 0xCC,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length - max length
                0xFF, 0xFF,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion) - unknown
                0x01, 0x03, 0x04,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x58, 0xAA, 0x5F, 0xE7, 0x22,
                0xCF, 0x9F, 0x59, 0x8A, 0xC5,
                0x8B, 0x87, 0xC7, 0x62, 0x32,
                0x98, 0xD4, 0xD8, 0xA2, 0xBE,
                0x77, 0xCE, 0xA9, 0xCE, 0x42,
                0x25, 0x5A, 0x8B, 0xEE, 0x16,
                0x80, 0xF1,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };

            yield return new byte[] {
                // SslPlainText.(ContentType+ProtocolVersion)
                0x16, 0x03, 0x03,
                // SslPlainText.length
                0x00, 0xCB,
                // Handshake.msg_type (client hello)
                0x01,
                // Handshake.length
                0x00, 0x00, 0xC7,
                // ClientHello.client_version
                0x03, 0x03,
                // ClientHello.random
                0x0C, 0x3C, 0x85, 0x78, 0xCA,
                0x67, 0x70, 0xAA, 0x38, 0xCB,
                0x28, 0xBC, 0xDC, 0x3E, 0x30,
                0xBF, 0x11, 0x96, 0x95, 0x1A,
                0xB9, 0xF0, 0x99, 0xA4, 0x91,
                0x09, 0x13, 0xB4, 0x89, 0x94,
                0x27, 0x2E,
                // ClientHello.SessionId
                0x00,
                // ClientHello.cipher_suites
                0x00, 0x2A, 0xC0, 0x2C, 0xC0,
                0x2B, 0xC0, 0x30, 0xC0, 0x2F,
                0x00, 0x9F, 0x00, 0x9E, 0xC0,
                0x24, 0xC0, 0x23, 0xC0, 0x28,
                0xC0, 0x27, 0xC0, 0x0A, 0xC0,
                0x09, 0xC0, 0x14, 0xC0, 0x13,
                0x00, 0x9D, 0x00, 0x9C, 0x00,
                0x3D, 0x00, 0x3C, 0x00, 0x35,
                0x00, 0x2F, 0x00, 0x0A,
                // ClientHello.compression_methods
                0x01, 0x01,
                // ClientHello.extension_list_length
                0x00, 0x74,
                // Extension.extension_type (server_name)
                0x00, 0x00,
                // ServerNameListExtension.length
                0x00, 0x39,
                // ServerName.length
                0x00, 0x37,
                // ServerName.type
                0x00,
                // HostName.length
                0x00, 0x34,
                // HostName.bytes
                0x80, 0x80, 0x80, 0x80, 0x61, // 0x80 0x80 0x80 0x80 is a forbidden utf-8 sequence
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61, 0x61, 0x61, 0x61,
                0x61, 0x61,
                // Extension.extension_type (00 0A)
                0x00, 0x0A,
                // Extension 0A
                0x00, 0x08, 0x00, 0x06, 0x00,
                0x1D, 0x00, 0x17, 0x00, 0x18,
                // Extension.extension_type (00 0B)
                0x00, 0x0B,
                // Extension 0B
                0x00, 0x02, 0x01, 0x00,
                // Extension.extension_type (00 0D)
                0x00, 0x0D,
                // Extension 0D
                0x00, 0x14, 0x00, 0x12, 0x04,
                0x01, 0x05, 0x01, 0x02, 0x01,
                0x04, 0x03, 0x05, 0x03, 0x02,
                0x03, 0x02, 0x02, 0x06, 0x01,
                0x06, 0x03,
                // Extension.extension_type (00 23)
                0x00, 0x23,
                // Extension 00 23
                0x00, 0x00,
                // Extension.extension_type (00 17)
                0x00, 0x17,
                // Extension 17
                0x00, 0x00,
                // Extension.extension_type (FF 01)
                0xFF, 0x01,
                // Extension FF01
                0x00, 0x01, 0x00
            };
        }
    }
}
