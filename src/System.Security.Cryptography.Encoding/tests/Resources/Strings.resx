<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Argument_EncodeDestinationTooSmall" xml:space="preserve">
    <value>The destination is too small to hold the encoded value.</value>
  </data>
  <data name="Argument_InvalidOidValue" xml:space="preserve">
    <value>The OID value was invalid.</value>
  </data>
  <data name="Cryptography_Asn_EnumeratedValueRequiresNonFlagsEnum" xml:space="preserve">
    <value>ASN.1 Enumerated values only apply to enum types without the [Flags] attribute.</value>
  </data>
  <data name="Cryptography_Asn_NamedBitListRequiresFlagsEnum" xml:space="preserve">
    <value>Named bit list operations require an enum with the [Flags] attribute.</value>
  </data>
  <data name="Cryptography_Asn_NamedBitListValueTooBig" xml:space="preserve">
    <value>The encoded named bit list value is larger than the value size of the '{0}' enum.</value>
  </data>
  <data name="Cryptography_Asn_UniversalValueIsFixed" xml:space="preserve">
    <value>Tags with TagClass Universal must have the appropriate TagValue value for the data type being read or written.</value>
  </data>
  <data name="Cryptography_Asn_UnusedBitCountRange" xml:space="preserve">
    <value>Unused bit count must be between 0 and 7, inclusive.</value>
  </data>
  <data name="Cryptography_AsnSerializer_AmbiguousFieldType" xml:space="preserve">
    <value>Field '{0}' of type '{1}' has ambiguous type '{2}', an attribute derived from AsnTypeAttribute is required.</value>
  </data>
  <data name="Cryptography_AsnSerializer_Choice_AllowNullNonNullable" xml:space="preserve">
    <value>[Choice].AllowNull=true is not valid because type '{0}' cannot have a null value.</value>
  </data>
  <data name="Cryptography_AsnSerializer_Choice_ConflictingTagMapping" xml:space="preserve">
    <value>The tag ({0} {1}) for field '{2}' on type '{3}' already is associated in this context with field '{4}' on type '{5}'.</value>
  </data>
  <data name="Cryptography_AsnSerializer_Choice_DefaultValueDisallowed" xml:space="preserve">
    <value>Field '{0}' on [Choice] type '{1}' has a default value, which is not permitted.</value>
  </data>
  <data name="Cryptography_AsnSerializer_Choice_NoChoiceWasMade" xml:space="preserve">
    <value>An instance of [Choice] type '{0}' has no non-null fields.</value>
  </data>
  <data name="Cryptography_AsnSerializer_Choice_NonNullableField" xml:space="preserve">
    <value>Field '{0}' on [Choice] type '{1}' can not be assigned a null value.</value>
  </data>
  <data name="Cryptography_AsnSerializer_Choice_TooManyValues" xml:space="preserve">
    <value>Fields '{0}' and '{1}' on type '{2}' are both non-null when only one value is permitted.</value>
  </data>
  <data name="Cryptography_AsnSerializer_Choice_TypeCycle" xml:space="preserve">
    <value>Field '{0}' on [Choice] type '{1}' has introduced a type chain cycle.</value>
  </data>
  <data name="Cryptography_AsnSerializer_MultipleAsnTypeAttributes" xml:space="preserve">
    <value>Field '{0}' on type '{1}' has multiple attributes deriving from '{2}' when at most one is permitted.</value>
  </data>
  <data name="Cryptography_AsnSerializer_NoJaggedArrays" xml:space="preserve">
    <value>Type '{0}' cannot be serialized or deserialized because it is an array of arrays.</value>
  </data>
  <data name="Cryptography_AsnSerializer_NoMultiDimensionalArrays" xml:space="preserve">
    <value>Type '{0}' cannot be serialized or deserialized because it is a multi-dimensional array.</value>
  </data>
  <data name="Cryptography_AsnSerializer_NoOpenTypes" xml:space="preserve">
    <value>Type '{0}' cannot be serialized or deserialized because it is not sealed or has unbound generic parameters.</value>
  </data>
  <data name="Cryptography_AsnSerializer_Optional_NonNullableField" xml:space="preserve">
    <value>Field '{0}' on type '{1}' is declared [OptionalValue], but it can not be assigned a null value.</value>
  </data>
  <data name="Cryptography_AsnSerializer_SetValueException" xml:space="preserve">
    <value>Unable to set field {0} on type {1}.</value>
  </data>
  <data name="Cryptography_AsnSerializer_SpecificTagChoice" xml:space="preserve">
    <value>Field '{0}' on type '{1}' has specified an implicit tag value via [ExpectedTag] for [Choice] type '{2}'. ExplicitTag must be true, or the [ExpectedTag] attribute removed.</value>
  </data>
  <data name="Cryptography_AsnSerializer_UnexpectedTypeForAttribute" xml:space="preserve">
    <value>Field '{0}' of type '{1}' has an effective type of '{2}' when one of ({3}) was expected.</value>
  </data>
  <data name="Cryptography_AsnSerializer_UtcTimeTwoDigitYearMaxTooSmall" xml:space="preserve">
    <value>Field '{0}' on type '{1}' has a [UtcTime] TwoDigitYearMax value ({2}) smaller than the minimum (99).</value>
  </data>
  <data name="Cryptography_AsnSerializer_UnhandledType" xml:space="preserve">
    <value>Could not determine how to serialize or deserialize type '{0}'.</value>
  </data>
  <data name="Cryptography_AsnWriter_EncodeUnbalancedStack" xml:space="preserve">
    <value>Encode cannot be called while a Sequence or SetOf is still open.</value>
  </data>
  <data name="Cryptography_AsnWriter_PopWrongTag" xml:space="preserve">
    <value>Cannot pop the requested tag as it is not currently in progress.</value>
  </data>
  <data name="Cryptography_Der_Invalid_Encoding" xml:space="preserve">
    <value>ASN1 corrupted data.</value>
  </data>
  <data name="Cryptography_Invalid_IA5String" xml:space="preserve">
    <value>The string contains a character not in the 7 bit ASCII character set.</value>
  </data>
  <data name="Cryptography_WriteEncodedValue_OneValueAtATime" xml:space="preserve">
    <value>The input to WriteEncodedValue must represent a single encoded value with no trailing data.</value>
  </data>
</root>
