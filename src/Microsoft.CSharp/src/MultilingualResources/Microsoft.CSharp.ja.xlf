<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="ja" original="MICROSOFT.CSHARP/RESOURCES/STRINGS.RESX" tool-id="MultilingualAppToolkit" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="MultilingualAppToolkit" tool-name="Multilingual App Toolkit" tool-version="4.0.1387.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="MICROSOFT.CSHARP/RESOURCES/STRINGS.RESX" datatype="resx">
        <trans-unit id="InternalCompilerError" translate="yes" xml:space="preserve">
          <source>An unexpected exception occurred while binding a dynamic operation</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">動的な操作をバインド中に、予期しない例外が発生しました</target>
        </trans-unit>
        <trans-unit id="BindRequireArguments" translate="yes" xml:space="preserve">
          <source>Cannot bind call with no calling object</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">呼び出し元オブジェクトのない呼び出しはバインドできません</target>
        </trans-unit>
        <trans-unit id="BindCallFailedOverloadResolution" translate="yes" xml:space="preserve">
          <source>Overload resolution failed</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">オーバーロードの解決に失敗しました</target>
        </trans-unit>
        <trans-unit id="BindBinaryOperatorRequireTwoArguments" translate="yes" xml:space="preserve">
          <source>Binary operators must be invoked with two arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">二項演算子は 2 つの引数を指定して呼び出す必要があります</target>
        </trans-unit>
        <trans-unit id="BindUnaryOperatorRequireOneArgument" translate="yes" xml:space="preserve">
          <source>Unary operators must be invoked with one argument</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">単項演算子は 1 つの引数を指定して呼び出す必要があります</target>
        </trans-unit>
        <trans-unit id="BindPropertyFailedMethodGroup" translate="yes" xml:space="preserve">
          <source>The name '{0}' is bound to a method and cannot be used like a property</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">名前 '{0}' はメソッドにバインドされており、プロパティのように使用することはできません</target>
        </trans-unit>
        <trans-unit id="BindPropertyFailedEvent" translate="yes" xml:space="preserve">
          <source>The event '{0}' can only appear on the left hand side of +</source>
          <target state="needs-review-translation" state-qualifier="mt-suggestion">イベント '{0}' することができますの左側にのみ表示されます +</target>
        </trans-unit>
        <trans-unit id="BindInvokeFailedNonDelegate" translate="yes" xml:space="preserve">
          <source>Cannot invoke a non-delegate type</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">非デリゲート型を呼び出すことはできません</target>
        </trans-unit>
        <trans-unit id="BindImplicitConversionRequireOneArgument" translate="yes" xml:space="preserve">
          <source>Implicit conversion takes exactly one argument</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">暗黙の型変換では 1 つの引数のみ受け取ります</target>
        </trans-unit>
        <trans-unit id="BindExplicitConversionRequireOneArgument" translate="yes" xml:space="preserve">
          <source>Explicit conversion takes exactly one argument</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">明示的な変換では 1 つの引数のみ受け取ります</target>
        </trans-unit>
        <trans-unit id="BindBinaryAssignmentRequireTwoArguments" translate="yes" xml:space="preserve">
          <source>Binary operators cannot be invoked with one argument</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">1 つの引数を指定して二項演算子を呼び出すことはできません</target>
        </trans-unit>
        <trans-unit id="BindBinaryAssignmentFailedNullReference" translate="yes" xml:space="preserve">
          <source>Cannot perform member assignment on a null reference</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">null 参照に対してメンバー割り当てを実行することはできません</target>
        </trans-unit>
        <trans-unit id="NullReferenceOnMemberException" translate="yes" xml:space="preserve">
          <source>Cannot perform runtime binding on a null reference</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">null 参照に対して実行時バインディングを実行することはできません</target>
        </trans-unit>
        <trans-unit id="BindCallToConditionalMethod" translate="yes" xml:space="preserve">
          <source>Cannot dynamically invoke method '{0}' because it has a Conditional attribute</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">条件付き属性があるため、メソッド '{0}' を動的に呼び出すことはできません</target>
        </trans-unit>
        <trans-unit id="BindToVoidMethodButExpectResult" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type 'void' to 'object'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 'void' を 'object' に暗黙的に変換することはできません</target>
        </trans-unit>
        <trans-unit id="BadBinaryOps" translate="yes" xml:space="preserve">
          <source>Operator '{0}' cannot be applied to operands of type '{1}' and '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">演算子 '{0}' を '{1}' と '{2}' 型のオペランドに適用することはできません</target>
        </trans-unit>
        <trans-unit id="IntDivByZero" translate="yes" xml:space="preserve">
          <source>Division by constant zero</source>
          <target state="needs-review-translation" state-qualifier="mt-suggestion">定数 0 で除算</target>
        </trans-unit>
        <trans-unit id="BadIndexLHS" translate="yes" xml:space="preserve">
          <source>Cannot apply indexing with [] to an expression of type '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">角かっこ [] 付きインデックスを '{0}' 型の式に適用することはできません</target>
        </trans-unit>
        <trans-unit id="BadIndexCount" translate="yes" xml:space="preserve">
          <source>Wrong number of indices inside []; expected '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">角かっこ [] 内のインデックス数が正しくありません。正しい数は '{0}' です</target>
        </trans-unit>
        <trans-unit id="BadUnaryOp" translate="yes" xml:space="preserve">
          <source>Operator '{0}' cannot be applied to operand of type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">演算子 '{0}' は '{1}' 型のオペランドに適用できません</target>
        </trans-unit>
        <trans-unit id="NoImplicitConv" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type '{0}' to '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{0}' を '{1}' に暗黙的に変換できません</target>
        </trans-unit>
        <trans-unit id="NoExplicitConv" translate="yes" xml:space="preserve">
          <source>Cannot convert type '{0}' to '{1}'</source>
          <target state="needs-review-translation" state-qualifier="mt-suggestion">型 '{0}' を '{1}' に変換できません。</target>
        </trans-unit>
        <trans-unit id="ConstOutOfRange" translate="yes" xml:space="preserve">
          <source>Constant value '{0}' cannot be converted to a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">定数値 '{0}' を '{1}' に変換できません</target>
        </trans-unit>
        <trans-unit id="AmbigBinaryOps" translate="yes" xml:space="preserve">
          <source>Operator '{0}' is ambiguous on operands of type '{1}' and '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{1}' および '{2}' のオペランドの演算子 '{0}' があいまいです</target>
        </trans-unit>
        <trans-unit id="AmbigUnaryOp" translate="yes" xml:space="preserve">
          <source>Operator '{0}' is ambiguous on an operand of type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">演算子 '{0}' は型 '{1}' のオペランドに対してあいまいです</target>
        </trans-unit>
        <trans-unit id="ValueCantBeNull" translate="yes" xml:space="preserve">
          <source>Cannot convert null to '{0}' because it is a non-nullable value type</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Null 非許容の値型であるため、Null を '{0}' に変換できません</target>
        </trans-unit>
        <trans-unit id="WrongNestedThis" translate="yes" xml:space="preserve">
          <source>Cannot access a non-static member of outer type '{0}' via nested type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">入れ子にされた型 '{1}' を経由して、外の型 '{0}' の静的でないメンバーにアクセスすることはできません</target>
        </trans-unit>
        <trans-unit id="NoSuchMember" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a definition for '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' に '{1}' の定義がありません</target>
        </trans-unit>
        <trans-unit id="ObjectRequired" translate="yes" xml:space="preserve">
          <source>An object reference is required for the non-static field, method, or property '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">静的でないフィールド、メソッド、またはプロパティ '{0}' で、オブジェクト参照が必要です</target>
        </trans-unit>
        <trans-unit id="AmbigCall" translate="yes" xml:space="preserve">
          <source>The call is ambiguous between the following methods or properties: '{0}' and '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">次のメソッドまたはプロパティ間で呼び出しが不適切です: '{0}' と '{1}'</target>
        </trans-unit>
        <trans-unit id="BadAccess" translate="yes" xml:space="preserve">
          <source>'{0}' is inaccessible due to its protection level</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' はアクセスできない保護レベルになっています</target>
        </trans-unit>
        <trans-unit id="MethDelegateMismatch" translate="yes" xml:space="preserve">
          <source>No overload for '{0}' matches delegate '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">デリゲート '{1}' に一致する '{0}' のオーバーロードはありません</target>
        </trans-unit>
        <trans-unit id="AssgLvalueExpected" translate="yes" xml:space="preserve">
          <source>The left-hand side of an assignment must be a variable, property or indexer</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">代入式の左辺には変数、プロパティ、またはインデクサーを指定してください。</target>
        </trans-unit>
        <trans-unit id="NoConstructors" translate="yes" xml:space="preserve">
          <source>The type '{0}' has no constructors defined</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{0}' のコンストラクターが定義されていません</target>
        </trans-unit>
        <trans-unit id="BadDelegateConstructor" translate="yes" xml:space="preserve">
          <source>The delegate '{0}' does not have a valid constructor</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">デリゲート '{0}' には有効なコンストラクターがありません</target>
        </trans-unit>
        <trans-unit id="PropertyLacksGet" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because it lacks the get accessor</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">get アクセサーがないため、プロパティまたはインデクサー '{0}' をこのコンテキストで使用することはできません</target>
        </trans-unit>
        <trans-unit id="ObjectProhibited" translate="yes" xml:space="preserve">
          <source>Member '{0}' cannot be accessed with an instance reference; qualify it with a type name instead</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">インスタンス参照でメンバー '{0}' にアクセスできません。代わりに型名を使用してください</target>
        </trans-unit>
        <trans-unit id="AssgReadonly" translate="yes" xml:space="preserve">
          <source>A readonly field cannot be assigned to (except in a constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">読み取り専用フィールドに割り当てることはできません (コンストラクター、変数初期化子では可 )。</target>
        </trans-unit>
        <trans-unit id="RefReadonly" translate="yes" xml:space="preserve">
          <source>A readonly field cannot be passed ref or out (except in a constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">読み取り専用フィールドに ref または out を渡すことはできません (コンストラクターでは可 )。</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyStatic" translate="yes" xml:space="preserve">
          <source>A static readonly field cannot be assigned to (except in a static constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">静的読み取り専用フィールドへの割り当てはできません (静的コンストラクターまたは変数初期化子では可)。</target>
        </trans-unit>
        <trans-unit id="RefReadonlyStatic" translate="yes" xml:space="preserve">
          <source>A static readonly field cannot be passed ref or out (except in a static constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">読み取り専用フィールドに ref または out を渡すことはできません (静的コンストラクターでは可)。</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyProp" translate="yes" xml:space="preserve">
          <source>Property or indexer '{0}' cannot be assigned to -- it is read only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">プロパティまたはインデクサー '{0}' は読み取り専用であるため、割り当てることはできません</target>
        </trans-unit>
        <trans-unit id="AbstractBaseCall" translate="yes" xml:space="preserve">
          <source>Cannot call an abstract base member: '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">抽象基本メンバーを呼び出すことはできません: '{0}'</target>
        </trans-unit>
        <trans-unit id="RefProperty" translate="yes" xml:space="preserve">
          <source>A property or indexer may not be passed as an out or ref parameter</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">プロパティまたはインデクサーを out か ref のパラメーターとして渡すことはできません。</target>
        </trans-unit>
        <trans-unit id="ManagedAddr" translate="yes" xml:space="preserve">
          <source>Cannot take the address of, get the size of, or declare a pointer to a managed type ('{0}')</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">マネージ型 ('{0}') のアドレスの取得、サイズの取得、またはそのマネージ型へのポインターの宣言が実行できません</target>
        </trans-unit>
        <trans-unit id="FixedNotNeeded" translate="yes" xml:space="preserve">
          <source>You cannot use the fixed statement to take the address of an already fixed expression</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">既に fixed が使用されている式のアドレスを取得するために、fixed ステートメントを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="UnsafeNeeded" translate="yes" xml:space="preserve">
          <source>Dynamic calls cannot be used in conjunction with pointers</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">動的な呼び出しはポインターと共に使用できません</target>
        </trans-unit>
        <trans-unit id="BadBoolOp" translate="yes" xml:space="preserve">
          <source>In order to be applicable as a short circuit operator a user-defined logical operator ('{0}') must have the same return type as the type of its 2 parameters</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">short circuit 演算子として適用するためには、ユーザー定義の論理演算子 ('{0}') がその 2 つのパラメーターと同じ戻り値の型を持つ必要があります</target>
        </trans-unit>
        <trans-unit id="MustHaveOpTF" translate="yes" xml:space="preserve">
          <source>The type ('{0}') must contain declarations of operator true and operator false</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 ('{0}') に演算子 true および演算子 false の宣言が含まれている必要があります</target>
        </trans-unit>
        <trans-unit id="CheckedOverflow" translate="yes" xml:space="preserve">
          <source>The operation overflows at compile time in checked mode</source>
          <target state="needs-review-translation" state-qualifier="mt-suggestion">操作はチェック モードでコンパイル時にオーバーフローします。</target>
        </trans-unit>
        <trans-unit id="ConstOutOfRangeChecked" translate="yes" xml:space="preserve">
          <source>Constant value '{0}' cannot be converted to a '{1}' (use 'unchecked' syntax to override)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">定数値 '{0}' は '{1}' に変換できません (unchecked 構文を使ってオーバーライドしてください)</target>
        </trans-unit>
        <trans-unit id="AmbigMember" translate="yes" xml:space="preserve">
          <source>Ambiguity between '{0}' and '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' と '{1}' 間があいまいです</target>
        </trans-unit>
        <trans-unit id="SizeofUnsafe" translate="yes" xml:space="preserve">
          <source>'{0}' does not have a predefined size, therefore sizeof can only be used in an unsafe context (consider using System.Runtime.InteropServices.Marshal.SizeOf)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' には定義済みのサイズが指定されていないため、sizeof は unsafe コンテキストでのみ使用できます (System.Runtime.InteropServices.Marshal.SizeOf の使用をお勧めします)</target>
        </trans-unit>
        <trans-unit id="FieldInitRefNonstatic" translate="yes" xml:space="preserve">
          <source>A field initializer cannot reference the non-static field, method, or property '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">フィールド初期化子は、静的でないフィールド、メソッド、またはプロパティ '{0}' を参照できません</target>
        </trans-unit>
        <trans-unit id="CallingFinalizeDepracated" translate="yes" xml:space="preserve">
          <source>Destructors and object.Finalize cannot be called directly. Consider calling IDisposable.Dispose if available.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">デストラクター と object.Finalize を直接呼び出すことはできません。使用可能であれば IDisposable.Dispose を呼び出してください。</target>
        </trans-unit>
        <trans-unit id="CallingBaseFinalizeDeprecated" translate="yes" xml:space="preserve">
          <source>Do not directly call your base class Finalize method. It is called automatically from your destructor.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">基本クラスの Finalize メソッドを直接呼び出さないでください。デストラクターから自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="BadCastInFixed" translate="yes" xml:space="preserve">
          <source>The right hand side of a fixed statement assignment may not be a cast expression</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">固定ステートメントの代入式の右辺はキャスト式ではない可能性があります。</target>
        </trans-unit>
        <trans-unit id="NoImplicitConvCast" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type '{0}' to '{1}'. An explicit conversion exists (are you missing a cast?)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{0}' を '{1}' に暗黙的に変換できません。明示的な変換が存在します (cast が不足していないかどうかを確認してください)</target>
        </trans-unit>
        <trans-unit id="InaccessibleGetter" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because the get accessor is inaccessible</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">get アクセサーにアクセスできないため、プロパティまたはインデクサー '{0}' はこのコンテキストでは使用できません。</target>
        </trans-unit>
        <trans-unit id="InaccessibleSetter" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because the set accessor is inaccessible</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">set アクセサーにアクセスできないため、プロパティまたはインデクサー '{0}' はこのコンテキストでは使用できません。</target>
        </trans-unit>
        <trans-unit id="BadArity" translate="yes" xml:space="preserve">
          <source>Using the generic {1} '{0}' requires '{2}' type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">ジェネリック {1} '{0}' の使用には、'{2}' 型の引数が必要です</target>
        </trans-unit>
        <trans-unit id="BadTypeArgument" translate="yes" xml:space="preserve">
          <source>The type '{0}' may not be used as a type argument</source>
          <target state="needs-review-translation" state-qualifier="mt-suggestion">型 '{0}' は型引数としては使えません</target>
        </trans-unit>
        <trans-unit id="TypeArgsNotAllowed" translate="yes" xml:space="preserve">
          <source>The {1} '{0}' cannot be used with type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">{1} '{0}' は型引数と一緒には使用できません</target>
        </trans-unit>
        <trans-unit id="HasNoTypeVars" translate="yes" xml:space="preserve">
          <source>The non-generic {1} '{0}' cannot be used with type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">非ジェネリック {1} '{0}' は型引数と一緒には使用できません。</target>
        </trans-unit>
        <trans-unit id="NewConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>'{2}' must be a non-abstract type with a public parameterless constructor in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{2}' は、ジェネリック型またはメソッド '{0}' 内でパラメーター '{1}' として使用するために、パブリック パラメーターなしのコンストラクターを持つ非抽象型でなければなりません</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedRefType" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no implicit reference conversion from '{3}' to '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{3}' はジェネリック型またはメソッド '{0}' 内で型パラメーター '{2}' として使用できません。'{3}' から '{1}' への暗黙的な参照変換がありません。</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedNullableEnum" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{3}' はジェネリック型またはメソッド '{0}' 内で型パラメーター '{2}' として使用できません。Null 許容型 '{3}' は、'{1}' の制約を満たしていません。</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedNullableInterface" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'. Nullable types can not satisfy any interface constraints.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{3}' はジェネリック型またはメソッド '{0}' 内で型パラメーター '{2}' として使用できません。Null 許容型 '{3}' は、'{1}' の制約を満たしていません。Null 許容型はインターフェイス制約を満たすことはできません。</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedTyVar" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no boxing conversion or type parameter conversion from '{3}' to '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{3}' はジェネリック型またはメソッド '{0}' 内で型パラメーター '{2}' として使用できません。'{3}' から '{1}' へのボックス変換または型パラメーター変換がありません。</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedValType" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no boxing conversion from '{3}' to '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{3}' はジェネリック型またはメソッド '{0}' 内で型パラメーター '{2}' として使用できません。'{3}' から '{1}' へのボックス変換がありません。</target>
        </trans-unit>
        <trans-unit id="TypeVarCantBeNull" translate="yes" xml:space="preserve">
          <source>Cannot convert null to type parameter '{0}' because it could be a non-nullable value type. Consider using 'default({0})' instead.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Null 非許容の値型である可能性があるため、Null を型パラメーター '{0}' に変換できません。'default({0})' を使用してください。</target>
        </trans-unit>
        <trans-unit id="BadRetType" translate="yes" xml:space="preserve">
          <source>'{1} {0}' has the wrong return type</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{1} {0}' には、不適切な戻り値の型が指定されています</target>
        </trans-unit>
        <trans-unit id="CantInferMethTypeArgs" translate="yes" xml:space="preserve">
          <source>The type arguments for method '{0}' cannot be inferred from the usage. Try specifying the type arguments explicitly.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">メソッド '{0}' の型引数を使い方から推論することはできません。型引数を明示的に指定してください。</target>
        </trans-unit>
        <trans-unit id="MethGrpToNonDel" translate="yes" xml:space="preserve">
          <source>Cannot convert method group '{0}' to non-delegate type '{1}'. Did you intend to invoke the method?</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">メソッド グループ '{0}' を非デリゲート型 '{1}' に変換することはできません。このメソッドを呼び出しますか?</target>
        </trans-unit>
        <trans-unit id="RefConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>The type '{2}' must be a reference type in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{2}' は、ジェネリック型のパラメーター '{1}'、またはメソッド '{0}' として使用するために、参照型でなければなりません</target>
        </trans-unit>
        <trans-unit id="ValConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>The type '{2}' must be a non-nullable value type in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 '{2}' は、ジェネリック型のパラメーター '{1}'、またはメソッド '{0}' として使用するために、Null 非許容の値型でなければなりません</target>
        </trans-unit>
        <trans-unit id="CircularConstraint" translate="yes" xml:space="preserve">
          <source>Circular constraint dependency involving '{0}' and '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' と '{1}' を含む、循環制約の依存関係です</target>
        </trans-unit>
        <trans-unit id="BaseConstraintConflict" translate="yes" xml:space="preserve">
          <source>Type parameter '{0}' inherits conflicting constraints '{1}' and '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型パラメーター '{0}' は、競合する制約 '{1}' および '{2}' を継承します</target>
        </trans-unit>
        <trans-unit id="ConWithValCon" translate="yes" xml:space="preserve">
          <source>Type parameter '{1}' has the 'struct' constraint so '{1}' cannot be used as a constraint for '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型パラメーター '{1}' は 'struct' 制約を含むので、'{0}' の制約として '{1}' を使用することはできません</target>
        </trans-unit>
        <trans-unit id="AmbigUDConv" translate="yes" xml:space="preserve">
          <source>Ambiguous user defined conversions '{0}' and '{1}' when converting from '{2}' to '{3}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{2}' から '{3}' へ変換するときの、あいまいなユーザー定義の変換 '{0}' および '{1}' です</target>
        </trans-unit>
        <trans-unit id="PredefinedTypeNotFound" translate="yes" xml:space="preserve">
          <source>Predefined type '{0}' is not defined or imported</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">定義済みの型 '{0}' は定義、またはインポートされていません</target>
        </trans-unit>
        <trans-unit id="PredefinedTypeBadType" translate="yes" xml:space="preserve">
          <source>Predefined type '{0}' is declared incorrectly</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">定義済みの型 '{0}' が不適切に宣言されています</target>
        </trans-unit>
        <trans-unit id="BindToBogus" translate="yes" xml:space="preserve">
          <source>'{0}' is not supported by the language</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' はこの言語でサポートされていません</target>
        </trans-unit>
        <trans-unit id="CantCallSpecialMethod" translate="yes" xml:space="preserve">
          <source>'{0}': cannot explicitly call operator or accessor</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}': 演算子またはアクセサーを明示的に呼び出すことはできません</target>
        </trans-unit>
        <trans-unit id="BogusType" translate="yes" xml:space="preserve">
          <source>'{0}' is a type not supported by the language</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' はこの言語でサポートされていない型です</target>
        </trans-unit>
        <trans-unit id="MissingPredefinedMember" translate="yes" xml:space="preserve">
          <source>Missing compiler required member '{0}.{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">コンパイラが必要とするメンバー '{0}.{1}' がありません</target>
        </trans-unit>
        <trans-unit id="LiteralDoubleCast" translate="yes" xml:space="preserve">
          <source>Literal of type double cannot be implicitly converted to type '{1}'; use an '{0}' suffix to create a literal of this type</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型 double のリテラルを暗黙的に型 '{1}' に変換することはできません。'{0}' サフィックスを使用して、この型のリテラルを作成してください</target>
        </trans-unit>
        <trans-unit id="UnifyingInterfaceInstantiations" translate="yes" xml:space="preserve">
          <source>'{0}' cannot implement both '{1}' and '{2}' because they may unify for some type parameter substitutions</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">型パラメーターの代用に対して統合している可能性があるため、'{0}' は '{1}' と '{2}' の両方を実装することはできません</target>
        </trans-unit>
        <trans-unit id="ConvertToStaticClass" translate="yes" xml:space="preserve">
          <source>Cannot convert to static type '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">スタティック型 '{0}' へ変換できません</target>
        </trans-unit>
        <trans-unit id="GenericArgIsStaticClass" translate="yes" xml:space="preserve">
          <source>'{0}': static types cannot be used as type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}': スタティック型を型引数として使用することはできません</target>
        </trans-unit>
        <trans-unit id="PartialMethodToDelegate" translate="yes" xml:space="preserve">
          <source>Cannot create delegate from method '{0}' because it is a partial method without an implementing declaration</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">メソッド '{0}' は実装宣言がない部分メソッドであるため、このメソッドからデリゲートを作成できません</target>
        </trans-unit>
        <trans-unit id="IncrementLvalueExpected" translate="yes" xml:space="preserve">
          <source>The operand of an increment or decrement operator must be a variable, property or indexer</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">インクリメント演算子またはデクリメント演算子のオペランドには、変数、プロパティ、またはインデクサーを指定してください。</target>
        </trans-unit>
        <trans-unit id="NoSuchMemberOrExtension" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a definition for '{1}' and no extension method '{1}' accepting a first argument of type '{0}' could be found (are you missing a using directive or an assembly reference?)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' に '{1}' の定義が含まれておらず、型 '{0}' の最初の引数を受け付ける拡張メソッド '{1}' が見つかりませんでした。using ディレクティブまたはアセンブリ参照が不足しています</target>
        </trans-unit>
        <trans-unit id="ValueTypeExtDelegate" translate="yes" xml:space="preserve">
          <source>Extension methods '{0}' defined on value type '{1}' cannot be used to create delegates</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">値の型 '{1}' で定義された拡張メソッド '{0}' は、デリゲートを作成するために使用できません</target>
        </trans-unit>
        <trans-unit id="BadArgCount" translate="yes" xml:space="preserve">
          <source>No overload for method '{0}' takes '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">引数を '{1}' 個指定できる、メソッド '{0}' のオーバーロードはありません</target>
        </trans-unit>
        <trans-unit id="BadArgTypes" translate="yes" xml:space="preserve">
          <source>The best overloaded method match for '{0}' has some invalid arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' に最も適しているオーバーロード メソッドには無効な引数がいくつか含まれています</target>
        </trans-unit>
        <trans-unit id="BadArgType" translate="yes" xml:space="preserve">
          <source>Argument '{0}': cannot convert from '{1}' to '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">引数 '{0}': '{1}' から '{2}' へ変換できません</target>
        </trans-unit>
        <trans-unit id="RefLvalueExpected" translate="yes" xml:space="preserve">
          <source>A ref or out argument must be an assignable variable</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">ref または out 引数は、割り当て可能な変数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="BadProtectedAccess" translate="yes" xml:space="preserve">
          <source>Cannot access protected member '{0}' via a qualifier of type '{1}'; the qualifier must be of type '{2}' (or derived from it)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{1}' 型の修飾子をとおしてプロテクト メンバー '{0}' にアクセスすることはできません。修飾子は '{2}' 型、またはそれから派生したものでなければなりません</target>
        </trans-unit>
        <trans-unit id="BindToBogusProp2" translate="yes" xml:space="preserve">
          <source>Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor methods '{1}' or '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">プロパティ、インデクサー、またはイベント '{0}' はこの言語でサポートされていません。アクセサー メソッドの '{1}' または '{2}' を直接呼び出してください</target>
        </trans-unit>
        <trans-unit id="BindToBogusProp1" translate="yes" xml:space="preserve">
          <source>Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor method '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">プロパティ、インデクサー、またはイベント '{0}' はこの言語でサポートされていません。アクセサー メソッドの '{1}' を直接呼び出してください</target>
        </trans-unit>
        <trans-unit id="BadDelArgCount" translate="yes" xml:space="preserve">
          <source>Delegate '{0}' does not take '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">デリゲート '{0}' に '{1}' 個の引数を指定することはできません</target>
        </trans-unit>
        <trans-unit id="BadDelArgTypes" translate="yes" xml:space="preserve">
          <source>Delegate '{0}' has some invalid arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">デリゲート '{0}' に無効な引数があります</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyLocal" translate="yes" xml:space="preserve">
          <source>Cannot assign to '{0}' because it is read-only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">読み取り専用であるため '{0}' に割り当てできません</target>
        </trans-unit>
        <trans-unit id="RefReadonlyLocal" translate="yes" xml:space="preserve">
          <source>Cannot pass '{0}' as a ref or out argument because it is read-only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">読み取り専用なので '{0}' は ref または out 引数として渡せません</target>
        </trans-unit>
        <trans-unit id="ReturnNotLValue" translate="yes" xml:space="preserve">
          <source>Cannot modify the return value of '{0}' because it is not a variable</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">変数ではないため、'{0}' の戻り値を変更できません</target>
        </trans-unit>
        <trans-unit id="BadArgExtraRef" translate="yes" xml:space="preserve">
          <source>Argument '{0}' should not be passed with the '{1}' keyword</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">引数 '{0}' を '{1}' キーワードと共に渡すことはできません</target>
        </trans-unit>
        <trans-unit id="BadArgRef" translate="yes" xml:space="preserve">
          <source>Argument '{0}' must be passed with the '{1}' keyword</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">引数 '{0}' は '{1}' キーワードと共に渡されなければなりません</target>
        </trans-unit>
        <trans-unit id="AssgReadonly2" translate="yes" xml:space="preserve">
          <source>Members of readonly field '{0}' cannot be modified (except in a constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">読み取り専用フィールド '{0}' のメンバーは変更できません (コンストラクターまたは変数初期化子では可)。</target>
        </trans-unit>
        <trans-unit id="RefReadonly2" translate="yes" xml:space="preserve">
          <source>Members of readonly field '{0}' cannot be passed ref or out (except in a constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">読み取り専用フィールド '{0}' のメンバーに ref または out を渡すことはできません (コンストラクターでは可)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyStatic2" translate="yes" xml:space="preserve">
          <source>Fields of static readonly field '{0}' cannot be assigned to (except in a static constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">静的読み取り専用フィールド '{0}' のフィールドへの割り当てはできません (静的コンストラクターまたは変数初期化子では可)</target>
        </trans-unit>
        <trans-unit id="RefReadonlyStatic2" translate="yes" xml:space="preserve">
          <source>Fields of static readonly field '{0}' cannot be passed ref or out (except in a static constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">静的読み取り専用フィールド '{0}' には、静的コンストラクター内を除き、ref または out を渡すことはできません</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyLocalCause" translate="yes" xml:space="preserve">
          <source>Cannot assign to '{0}' because it is a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' は '{1}' であるため、割り当てることはできません</target>
        </trans-unit>
        <trans-unit id="RefReadonlyLocalCause" translate="yes" xml:space="preserve">
          <source>Cannot pass '{0}' as a ref or out argument because it is a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{1}' であるため、'{0}' は ref または out 引数として渡せません</target>
        </trans-unit>
        <trans-unit id="ThisStructNotInAnonMeth" translate="yes" xml:space="preserve">
          <source>Anonymous methods, lambda expressions, and query expressions inside structs cannot access instance members of 'this'. Consider copying 'this' to a local variable outside the anonymous method, lambda expression or query expression and using the local instead.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">構造体内部の匿名メソッド、ラムダ式、またはクエリ式は、'this' のインスタンス メンバーにアクセスできません。'this' を匿名メソッド、ラムダ式、またはクエリ式の外部のローカル変数にコピーして、そのローカルを使用してください。</target>
        </trans-unit>
        <trans-unit id="DelegateOnNullable" translate="yes" xml:space="preserve">
          <source>Cannot bind delegate to '{0}' because it is a member of 'System.Nullable<it id="1" pos="open">&lt;T&gt;</it>'</source>
          <target state="needs-review-translation" state-qualifier="mt-suggestion">'System.Nullable<it id="1" pos="open">&lt;T&gt;</it>' のメンバーであるために、'{0}' のデリゲートをバインドできません。</target>
        </trans-unit>
        <trans-unit id="BadCtorArgCount" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a constructor that takes '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' に、引数を '{1}' 個指定できるコンストラクターがありません</target>
        </trans-unit>
        <trans-unit id="BadExtensionArgTypes" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a definition for '{1}' and the best extension method overload '{2}' has some invalid arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' に '{1}' の定義が含まれておらず、最も適している拡張メソッド オーバーロード '{2}' には無効な引数がいくつか含まれています</target>
        </trans-unit>
        <trans-unit id="BadInstanceArgType" translate="yes" xml:space="preserve">
          <source>Instance argument: cannot convert from '{0}' to '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">インスタンス引数: '{0}' から '{1}' へ変換できません</target>
        </trans-unit>
        <trans-unit id="BadArgTypesForCollectionAdd" translate="yes" xml:space="preserve">
          <source>The best overloaded Add method '{0}' for the collection initializer has some invalid arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">コレクション初期化子に最も適しているオーバーロード Add メソッド '{0}' には無効な引数がいくつか含まれています</target>
        </trans-unit>
        <trans-unit id="InitializerAddHasParamModifiers" translate="yes" xml:space="preserve">
          <source>The best overloaded method match '{0}' for the collection initializer element cannot be used. Collection initializer 'Add' methods cannot have ref or out parameters.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">コレクション初期化子要素の '{0}' に最も適しているオーバーロード メソッドは使用できません。コレクション初期化子 'Add' メソッドには、ref パラメーターまたは out パラメーターを使用できません。</target>
        </trans-unit>
        <trans-unit id="NonInvocableMemberCalled" translate="yes" xml:space="preserve">
          <source>Non-invocable member '{0}' cannot be used like a method.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">実行不可能なメンバー '{0}' をメソッドのように使用することはできません。</target>
        </trans-unit>
        <trans-unit id="NamedArgumentSpecificationBeforeFixedArgument" translate="yes" xml:space="preserve">
          <source>Named argument specifications must appear after all fixed arguments have been specified</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">名前付き引数は、すべての固定引数を指定した後で指定する必要があります</target>
        </trans-unit>
        <trans-unit id="BadNamedArgument" translate="yes" xml:space="preserve">
          <source>The best overload for '{0}' does not have a parameter named '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' に最も適しているオーバーロードには '{1}' という名前のパラメーターがありません</target>
        </trans-unit>
        <trans-unit id="BadNamedArgumentForDelegateInvoke" translate="yes" xml:space="preserve">
          <source>The delegate '{0}' does not have a parameter named '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">デリゲート '{0}' には '{1}' という名前のパラメーターがありません</target>
        </trans-unit>
        <trans-unit id="DuplicateNamedArgument" translate="yes" xml:space="preserve">
          <source>Named argument '{0}' cannot be specified multiple times</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' という名前付き引数が複数指定されました</target>
        </trans-unit>
        <trans-unit id="NamedArgumentUsedInPositional" translate="yes" xml:space="preserve">
          <source>Named argument '{0}' specifies a parameter for which a positional argument has already been given</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">名前付き引数 '{0}' は、場所引数が既に指定されているパラメーターを指定します</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>