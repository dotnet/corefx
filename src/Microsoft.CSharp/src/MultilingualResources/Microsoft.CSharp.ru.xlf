<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="ru" original="MICROSOFT.CSHARP/RESOURCES/STRINGS.RESX" tool-id="MultilingualAppToolkit" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="MultilingualAppToolkit" tool-name="Multilingual App Toolkit" tool-version="4.0.1387.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="MICROSOFT.CSHARP/RESOURCES/STRINGS.RESX" datatype="resx">
        <trans-unit id="InternalCompilerError" translate="yes" xml:space="preserve">
          <source>An unexpected exception occurred while binding a dynamic operation</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Возникло непредвиденное исключение при выполнении привязки динамической операции</target>
        </trans-unit>
        <trans-unit id="BindRequireArguments" translate="yes" xml:space="preserve">
          <source>Cannot bind call with no calling object</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невозможно выполнить привязку вызова к невызывающему объекту</target>
        </trans-unit>
        <trans-unit id="BindCallFailedOverloadResolution" translate="yes" xml:space="preserve">
          <source>Overload resolution failed</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Сбой при разрешении перегрузки</target>
        </trans-unit>
        <trans-unit id="BindBinaryOperatorRequireTwoArguments" translate="yes" xml:space="preserve">
          <source>Binary operators must be invoked with two arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Бинарные операторы должны вызываться с использованием двух аргументов</target>
        </trans-unit>
        <trans-unit id="BindUnaryOperatorRequireOneArgument" translate="yes" xml:space="preserve">
          <source>Unary operators must be invoked with one argument</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Унарные операторы должны быть вызваны с использованием одного аргумента</target>
        </trans-unit>
        <trans-unit id="BindPropertyFailedMethodGroup" translate="yes" xml:space="preserve">
          <source>The name '{0}' is bound to a method and cannot be used like a property</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Для имени "{0}" выполнена привязка к методу. Невозможно использовать его как свойство</target>
        </trans-unit>
        <trans-unit id="BindPropertyFailedEvent" translate="yes" xml:space="preserve">
          <source>The event '{0}' can only appear on the left hand side of +</source>
          <target state="needs-review-translation" state-qualifier="mt-suggestion">Событие «{0}» может появляться только на стороне левой руки +</target>
        </trans-unit>
        <trans-unit id="BindInvokeFailedNonDelegate" translate="yes" xml:space="preserve">
          <source>Cannot invoke a non-delegate type</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удалось вызвать тип, не являющийся делегатом</target>
        </trans-unit>
        <trans-unit id="BindBinaryAssignmentRequireTwoArguments" translate="yes" xml:space="preserve">
          <source>Binary operators cannot be invoked with one argument</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невозможно вызвать бинарные операторы с использованием одного аргумента</target>
        </trans-unit>
        <trans-unit id="BindBinaryAssignmentFailedNullReference" translate="yes" xml:space="preserve">
          <source>Cannot perform member assignment on a null reference</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается выполнить присваивание члена по нулевой ссылке</target>
        </trans-unit>
        <trans-unit id="NullReferenceOnMemberException" translate="yes" xml:space="preserve">
          <source>Cannot perform runtime binding on a null reference</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается выполнить привязки исполняющей среды по нулевой ссылке</target>
        </trans-unit>
        <trans-unit id="BindCallToConditionalMethod" translate="yes" xml:space="preserve">
          <source>Cannot dynamically invoke method '{0}' because it has a Conditional attribute</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается динамически вызвать метод "{0}", так как у него есть условный атрибут</target>
        </trans-unit>
        <trans-unit id="BindToVoidMethodButExpectResult" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type 'void' to 'object'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Нельзя неявно преобразовать тип "void" to "object"</target>
        </trans-unit>
        <trans-unit id="BadBinaryOps" translate="yes" xml:space="preserve">
          <source>Operator '{0}' cannot be applied to operands of type '{1}' and '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается применить оператор "{0}" к операндам типа "{1}" и "{2}"</target>
        </trans-unit>
        <trans-unit id="BadIndexLHS" translate="yes" xml:space="preserve">
          <source>Cannot apply indexing with [] to an expression of type '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невозможно применить индексирование через [] к выражению типа "{0}"</target>
        </trans-unit>
        <trans-unit id="BadIndexCount" translate="yes" xml:space="preserve">
          <source>Wrong number of indices inside []; expected '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Неверное количество индексов внутри []; ожидалось "{0}"</target>
        </trans-unit>
        <trans-unit id="BadUnaryOp" translate="yes" xml:space="preserve">
          <source>Operator '{0}' cannot be applied to operand of type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается применить операнд "{0}" типа "{1}"</target>
        </trans-unit>
        <trans-unit id="NoImplicitConv" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type '{0}' to '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается неявно преобразовать тип "{0}" в "{1}"</target>
        </trans-unit>
        <trans-unit id="NoExplicitConv" translate="yes" xml:space="preserve">
          <source>Cannot convert type '{0}' to '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невозможно преобразовать тип "{0}" в "{1}"</target>
        </trans-unit>
        <trans-unit id="ConstOutOfRange" translate="yes" xml:space="preserve">
          <source>Constant value '{0}' cannot be converted to a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Постоянное значение "{0}" не может быть преобразовано в "{1}"</target>
        </trans-unit>
        <trans-unit id="AmbigBinaryOps" translate="yes" xml:space="preserve">
          <source>Operator '{0}' is ambiguous on operands of type '{1}' and '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Оператор "{0}" является неоднозначным по отношению к операндам типа "{1}" и "{2}"</target>
        </trans-unit>
        <trans-unit id="AmbigUnaryOp" translate="yes" xml:space="preserve">
          <source>Operator '{0}' is ambiguous on an operand of type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Оператор "{0}" является неоднозначным по отношению к операнду типа "{1}"</target>
        </trans-unit>
        <trans-unit id="ValueCantBeNull" translate="yes" xml:space="preserve">
          <source>Cannot convert null to '{0}' because it is a non-nullable value type</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Cannot convert null to "{0}" because it is a non-nullable value type</target>
        </trans-unit>
        <trans-unit id="WrongNestedThis" translate="yes" xml:space="preserve">
          <source>Cannot access a non-static member of outer type '{0}' via nested type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невозможно получить доступ к нестатическому члену внешнего типа "{0}" через вложенный тип "{1}"</target>
        </trans-unit>
        <trans-unit id="NoSuchMember" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a definition for '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">"{0}" не содержит определения для "{1}"</target>
        </trans-unit>
        <trans-unit id="ObjectRequired" translate="yes" xml:space="preserve">
          <source>An object reference is required for the non-static field, method, or property '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Для нестатического поля, метода или свойства "{0}" требуется ссылка на объект</target>
        </trans-unit>
        <trans-unit id="AmbigCall" translate="yes" xml:space="preserve">
          <source>The call is ambiguous between the following methods or properties: '{0}' and '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Понятие "вызов" трактуется неоднозначно в следующих методах или свойствах: "{0}" и "{1}"</target>
        </trans-unit>
        <trans-unit id="BadAccess" translate="yes" xml:space="preserve">
          <source>'{0}' is inaccessible due to its protection level</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">"{0}" недоступен из-за его уровня защиты</target>
        </trans-unit>
        <trans-unit id="MethDelegateMismatch" translate="yes" xml:space="preserve">
          <source>No overload for '{0}' matches delegate '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Нет перегрузки для "{0}", соответствующей делегату "{1}"</target>
        </trans-unit>
        <trans-unit id="AssgLvalueExpected" translate="yes" xml:space="preserve">
          <source>The left-hand side of an assignment must be a variable, property or indexer</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Левая часть выражения присваивания должна быть переменной, свойством или индексатором</target>
        </trans-unit>
        <trans-unit id="NoConstructors" translate="yes" xml:space="preserve">
          <source>The type '{0}' has no constructors defined</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Для типа "{0}" нет определенных конструкторов</target>
        </trans-unit>
        <trans-unit id="PropertyLacksGet" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because it lacks the get accessor</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">The property or indexer "{0}" cannot be used in this context because it lacks the get accessor</target>
        </trans-unit>
        <trans-unit id="ObjectProhibited" translate="yes" xml:space="preserve">
          <source>Member '{0}' cannot be accessed with an instance reference; qualify it with a type name instead</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Доступ к члену "{0}" через ссылку на экземпляр невозможен; вместо этого уточните его, указав имя типа</target>
        </trans-unit>
        <trans-unit id="AssgReadonly" translate="yes" xml:space="preserve">
          <source>A readonly field cannot be assigned to (except in a constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Присваивание значений доступному только для чтения полю допускается только в конструкторе и в инициализаторе переменных</target>
        </trans-unit>
        <trans-unit id="RefReadonly" translate="yes" xml:space="preserve">
          <source>A readonly field cannot be passed ref or out (except in a constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Доступное только для чтения поле может передаваться как параметр с ключевым словом ref или out только в конструкторе</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyStatic" translate="yes" xml:space="preserve">
          <source>A static readonly field cannot be assigned to (except in a static constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Присваивание значений доступному только для чтения статическому полю допускается только в статическом конструкторе и в инициализаторе переменных</target>
        </trans-unit>
        <trans-unit id="RefReadonlyStatic" translate="yes" xml:space="preserve">
          <source>A static readonly field cannot be passed ref or out (except in a static constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Доступное только для чтения статическое поле может передаваться как параметр с ключевым словом ref или out только в статическом конструкторе</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyProp" translate="yes" xml:space="preserve">
          <source>Property or indexer '{0}' cannot be assigned to -- it is read only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невозможно присвоить значение свойству или индексатору "{0}" -- доступ только для чтения</target>
        </trans-unit>
        <trans-unit id="RefProperty" translate="yes" xml:space="preserve">
          <source>A property or indexer may not be passed as an out or ref parameter</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Свойства и индексаторы не могут передаваться как параметры с ключевыми словами out и ref</target>
        </trans-unit>
        <trans-unit id="UnsafeNeeded" translate="yes" xml:space="preserve">
          <source>Dynamic calls cannot be used in conjunction with pointers</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Динамические вызовы нельзя использовать в сопряжении с указателями</target>
        </trans-unit>
        <trans-unit id="BadBoolOp" translate="yes" xml:space="preserve">
          <source>In order to be applicable as a short circuit operator a user-defined logical operator ('{0}') must have the same return type as the type of its 2 parameters</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Для использования в качестве логического оператора краткой записи тип возвращаемого значения пользовательского логического оператора ("{0}") должен быть аналогичен типам двух его параметров</target>
        </trans-unit>
        <trans-unit id="MustHaveOpTF" translate="yes" xml:space="preserve">
          <source>The type ('{0}') must contain declarations of operator true and operator false</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Тип ("{0}") должен содержать объявления оператора true и оператора false</target>
        </trans-unit>
        <trans-unit id="ConstOutOfRangeChecked" translate="yes" xml:space="preserve">
          <source>Constant value '{0}' cannot be converted to a '{1}' (use 'unchecked' syntax to override)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Постоянное значение "{0}" не может быть преобразовано в "{1}" (для обхода используйте синтаксис "unchecked")</target>
        </trans-unit>
        <trans-unit id="AmbigMember" translate="yes" xml:space="preserve">
          <source>Ambiguity between '{0}' and '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Неоднозначность между "{0}" и "{1}"</target>
        </trans-unit>
        <trans-unit id="NoImplicitConvCast" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type '{0}' to '{1}'. An explicit conversion exists (are you missing a cast?)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается неявно преобразовать тип "{0}" в "{1}". Существует явное преобразование (требуется приведение типа?)</target>
        </trans-unit>
        <trans-unit id="InaccessibleGetter" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because the get accessor is inaccessible</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Свойство или индексатор "{0}" невозможно использовать в данном контексте, поскольку метод доступа get недоступен</target>
        </trans-unit>
        <trans-unit id="InaccessibleSetter" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because the set accessor is inaccessible</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Свойство или индексатор "{0}" невозможно использовать в данном контексте, поскольку метод доступа set недоступен</target>
        </trans-unit>
        <trans-unit id="BadArity" translate="yes" xml:space="preserve">
          <source>Using the generic {1} '{0}' requires '{2}' type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Использование универсального {1} "{0}" требует аргументов типа "{2}"</target>
        </trans-unit>
        <trans-unit id="TypeArgsNotAllowed" translate="yes" xml:space="preserve">
          <source>The {1} '{0}' cannot be used with type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">{1} "{0}" не может использоваться с аргументами типа</target>
        </trans-unit>
        <trans-unit id="HasNoTypeVars" translate="yes" xml:space="preserve">
          <source>The non-generic {1} '{0}' cannot be used with type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Неуниверсальный {1} "{0}" не может использоваться с аргументами типа</target>
        </trans-unit>
        <trans-unit id="NewConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>'{2}' must be a non-abstract type with a public parameterless constructor in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">"Для использования в качестве параметра "{1}" в универсальном типе или методе "{0}" тип "{2}" должен быть неабстрактным и иметь открытый конструктор без параметров</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedRefType" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no implicit reference conversion from '{3}' to '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невозможно использовать тип "{3}" в качестве параметра типа "{2}" в универсальном типе или методе "{0}". Нет неявного преобразования ссылки из "{3}" в "{1}".</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedNullableEnum" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невозможно использовать тип "{3}" в качестве параметра типа "{2}" в универсальном типе или методе "{0}". Для типа "{3}", допускающего значение null, не выполняется ограничение "{1}".</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedNullableInterface" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'. Nullable types can not satisfy any interface constraints.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невозможно использовать тип "{3}" в качестве параметра типа "{2}" в универсальном типе или методе "{0}". Для типа "{3}", допускающего значение null, не выполняется ограничение "{1}". Типы, допускающие значение null, не могут удовлетворять ни одному интерфейсному ограничению.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedValType" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no boxing conversion from '{3}' to '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невозможно использовать тип "{3}" в качестве параметра типа "{2}" в универсальном типе или методе "{0}". Нет преобразования-упаковки из "{3}" в "{1}".</target>
        </trans-unit>
        <trans-unit id="CantInferMethTypeArgs" translate="yes" xml:space="preserve">
          <source>The type arguments for method '{0}' cannot be inferred from the usage. Try specifying the type arguments explicitly.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">The type arguments for method "{0}" cannot be inferred from the usage. Попытайтесь явно определить аргументы-типы.</target>
        </trans-unit>
        <trans-unit id="RefConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>The type '{2}' must be a reference type in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Для использования в качестве параметра "{1}" в универсальном типе или методе "{0}" тип "{2}" должен быть ссылочным типом</target>
        </trans-unit>
        <trans-unit id="ValConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>The type '{2}' must be a non-nullable value type in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Для использования в качестве параметра "{1}" в универсальном типе или методе "{0}" тип "{2}" должен быть типом значения, не допускающим значения NULL</target>
        </trans-unit>
        <trans-unit id="AmbigUDConv" translate="yes" xml:space="preserve">
          <source>Ambiguous user defined conversions '{0}' and '{1}' when converting from '{2}' to '{3}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Неоднозначные пользовательские преобразования "{0}" и "{1}" при преобразовании из "{2}" в "{3}"</target>
        </trans-unit>
        <trans-unit id="BindToBogus" translate="yes" xml:space="preserve">
          <source>'{0}' is not supported by the language</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">"{0}" не поддерживается языком</target>
        </trans-unit>
        <trans-unit id="CantCallSpecialMethod" translate="yes" xml:space="preserve">
          <source>'{0}': cannot explicitly call operator or accessor</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">"{0}": явный вызов оператора или метода доступа невозможен</target>
        </trans-unit>
        <trans-unit id="ConvertToStaticClass" translate="yes" xml:space="preserve">
          <source>Cannot convert to static type '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается выполнить преобразование к статическому типу "{0}"</target>
        </trans-unit>
        <trans-unit id="IncrementLvalueExpected" translate="yes" xml:space="preserve">
          <source>The operand of an increment or decrement operator must be a variable, property or indexer</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Операндом оператора инкремента или декремента должна быть переменная, свойство или индексатор</target>
        </trans-unit>
        <trans-unit id="BadArgCount" translate="yes" xml:space="preserve">
          <source>No overload for method '{0}' takes '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Отсутствие перегрузки для метода "{0}" принимает"{1}" аргументы</target>
        </trans-unit>
        <trans-unit id="BadArgTypes" translate="yes" xml:space="preserve">
          <source>The best overloaded method match for '{0}' has some invalid arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Наиболее подходящий перегруженный метод для "{0}" имеет несколько недопустимых аргументов</target>
        </trans-unit>
        <trans-unit id="RefLvalueExpected" translate="yes" xml:space="preserve">
          <source>A ref or out argument must be an assignable variable</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Аргумент с ключевым словом ref или out должен быть переменной, которой можно присвоить значение</target>
        </trans-unit>
        <trans-unit id="BadProtectedAccess" translate="yes" xml:space="preserve">
          <source>Cannot access protected member '{0}' via a qualifier of type '{1}'; the qualifier must be of type '{2}' (or derived from it)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается получить доступ к защищенному члену "{0}" через квалификатор типа "{1}"; квалификатор должен иметь тип "{2}" (или производный от него)</target>
        </trans-unit>
        <trans-unit id="BindToBogusProp2" translate="yes" xml:space="preserve">
          <source>Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor methods '{1}' or '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Свойство, индексатор или событие "{0}" не поддерживается в данном языке; попробуйте вызвать метод доступа "{1}" или "{2}"</target>
        </trans-unit>
        <trans-unit id="BindToBogusProp1" translate="yes" xml:space="preserve">
          <source>Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor method '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Свойство, индексатор или событие "{0}" не поддерживается в данном языке; попробуйте вызвать метод доступа "{1}" или "{2}"</target>
        </trans-unit>
        <trans-unit id="BadDelArgCount" translate="yes" xml:space="preserve">
          <source>Delegate '{0}' does not take '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Делегат "{0}" не принимает аргументы "{1}"</target>
        </trans-unit>
        <trans-unit id="BadDelArgTypes" translate="yes" xml:space="preserve">
          <source>Delegate '{0}' has some invalid arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Делегат "{0}" имеет недопустимые аргументы</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyLocal" translate="yes" xml:space="preserve">
          <source>Cannot assign to '{0}' because it is read-only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается выполнить присвоение параметру "{0}", так как он доступен только для чтения</target>
        </trans-unit>
        <trans-unit id="RefReadonlyLocal" translate="yes" xml:space="preserve">
          <source>Cannot pass '{0}' as a ref or out argument because it is read-only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Cannot pass "{0}" as a ref or out argument because it is read-only</target>
        </trans-unit>
        <trans-unit id="ReturnNotLValue" translate="yes" xml:space="preserve">
          <source>Cannot modify the return value of '{0}' because it is not a variable</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Cannot modify the return value of "{0}" because it is not a variable</target>
        </trans-unit>
        <trans-unit id="AssgReadonly2" translate="yes" xml:space="preserve">
          <source>Members of readonly field '{0}' cannot be modified (except in a constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Члены поля "{0}", предназначенного только для чтения, могут быть изменены только в конструкторе или инициализаторе переменных</target>
        </trans-unit>
        <trans-unit id="RefReadonly2" translate="yes" xml:space="preserve">
          <source>Members of readonly field '{0}' cannot be passed ref or out (except in a constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Members of readonly field "{0}" cannot be passed ref or out (except in a constructor)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyStatic2" translate="yes" xml:space="preserve">
          <source>Fields of static readonly field '{0}' cannot be assigned to (except in a static constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Присваивание значений полям доступного только для чтения статического поля "{0}" допускается только в статическом конструкторе и в инициализаторе переменных</target>
        </trans-unit>
        <trans-unit id="RefReadonlyStatic2" translate="yes" xml:space="preserve">
          <source>Fields of static readonly field '{0}' cannot be passed ref or out (except in a static constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Fields of static readonly field "{0}" cannot be passed ref or out (except in a static constructor)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyLocalCause" translate="yes" xml:space="preserve">
          <source>Cannot assign to '{0}' because it is a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается выполнить присвоение параметру "{0}", так как он является "{1}"</target>
        </trans-unit>
        <trans-unit id="RefReadonlyLocalCause" translate="yes" xml:space="preserve">
          <source>Cannot pass '{0}' as a ref or out argument because it is a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удалось передать "{0}" как ссылку или аргумент out, так как это "{1}"</target>
        </trans-unit>
        <trans-unit id="BadCtorArgCount" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a constructor that takes '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">"{0}" не содержит конструктор, принимающий аргументов: {1}</target>
        </trans-unit>
        <trans-unit id="NonInvocableMemberCalled" translate="yes" xml:space="preserve">
          <source>Non-invocable member '{0}' cannot be used like a method.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Невызываемый член "{0}" не может использоваться как метод.</target>
        </trans-unit>
        <trans-unit id="NamedArgumentSpecificationBeforeFixedArgument" translate="yes" xml:space="preserve">
          <source>Named argument specifications must appear after all fixed arguments have been specified</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Спецификации именованного аргумента должны появляться во всех указанных фиксированных аргументах</target>
        </trans-unit>
        <trans-unit id="BadNamedArgument" translate="yes" xml:space="preserve">
          <source>The best overload for '{0}' does not have a parameter named '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Наиболее подходящий перегруженный метод для "{0}" не имеет параметра "{1}"</target>
        </trans-unit>
        <trans-unit id="BadNamedArgumentForDelegateInvoke" translate="yes" xml:space="preserve">
          <source>The delegate '{0}' does not have a parameter named '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Делегат "{0}" не имеет параметра "{1}"</target>
        </trans-unit>
        <trans-unit id="DuplicateNamedArgument" translate="yes" xml:space="preserve">
          <source>Named argument '{0}' cannot be specified multiple times</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Не удается задать именованный аргумент "{0}" несколько раз</target>
        </trans-unit>
        <trans-unit id="NamedArgumentUsedInPositional" translate="yes" xml:space="preserve">
          <source>Named argument '{0}' specifies a parameter for which a positional argument has already been given</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Именованный аргумент "{0}" задает параметр, для которого уже был установлен позиционный аргумент.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
