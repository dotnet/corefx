<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="fr" original="MICROSOFT.CSHARP/RESOURCES/STRINGS.RESX" tool-id="MultilingualAppToolkit" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="MultilingualAppToolkit" tool-name="Multilingual App Toolkit" tool-version="4.0.1387.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="MICROSOFT.CSHARP/RESOURCES/STRINGS.RESX" datatype="resx">
        <trans-unit id="InternalCompilerError" translate="yes" xml:space="preserve">
          <source>An unexpected exception occurred while binding a dynamic operation</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Une exception inattendue s'est produite lors de la liaison d'une opération dynamique</target>
        </trans-unit>
        <trans-unit id="BindRequireArguments" translate="yes" xml:space="preserve">
          <source>Cannot bind call with no calling object</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de lier l'appel sans objet appelant</target>
        </trans-unit>
        <trans-unit id="BindCallFailedOverloadResolution" translate="yes" xml:space="preserve">
          <source>Overload resolution failed</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Échec de la résolution de surcharge</target>
        </trans-unit>
        <trans-unit id="BindBinaryOperatorRequireTwoArguments" translate="yes" xml:space="preserve">
          <source>Binary operators must be invoked with two arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Les opérateurs binaires doivent être appelés avec deux arguments</target>
        </trans-unit>
        <trans-unit id="BindUnaryOperatorRequireOneArgument" translate="yes" xml:space="preserve">
          <source>Unary operators must be invoked with one argument</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Les opérateurs unaires doivent être appelés à l'aide d'un seul argument</target>
        </trans-unit>
        <trans-unit id="BindPropertyFailedMethodGroup" translate="yes" xml:space="preserve">
          <source>The name '{0}' is bound to a method and cannot be used like a property</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Le nom '{0}' est lié à une méthode et ne peut pas être utilisé comme une propriété</target>
        </trans-unit>
        <trans-unit id="BindPropertyFailedEvent" translate="yes" xml:space="preserve">
          <source>The event '{0}' can only appear on the left hand side of +</source>
          <target state="needs-review-translation" state-qualifier="mt-suggestion">L'événement « {0} » ne peut apparaître sur le côté gauche de +</target>
        </trans-unit>
        <trans-unit id="BindInvokeFailedNonDelegate" translate="yes" xml:space="preserve">
          <source>Cannot invoke a non-delegate type</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'appeler un type non-délégué</target>
        </trans-unit>
        <trans-unit id="BindBinaryAssignmentRequireTwoArguments" translate="yes" xml:space="preserve">
          <source>Binary operators cannot be invoked with one argument</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'appeler les opérateurs binaires avec un argument</target>
        </trans-unit>
        <trans-unit id="BindBinaryAssignmentFailedNullReference" translate="yes" xml:space="preserve">
          <source>Cannot perform member assignment on a null reference</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'effectuer une assignation de membre sur une référence null</target>
        </trans-unit>
        <trans-unit id="NullReferenceOnMemberException" translate="yes" xml:space="preserve">
          <source>Cannot perform runtime binding on a null reference</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'effectuer une liaison au moment de l'exécution sur une référence null</target>
        </trans-unit>
        <trans-unit id="BindCallToConditionalMethod" translate="yes" xml:space="preserve">
          <source>Cannot dynamically invoke method '{0}' because it has a Conditional attribute</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'appeler dynamiquement la méthode '{0}' car elle a un attribut Conditional</target>
        </trans-unit>
        <trans-unit id="BindToVoidMethodButExpectResult" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type 'void' to 'object'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de convertir implicitement le type 'void' en 'object'</target>
        </trans-unit>
        <trans-unit id="BadBinaryOps" translate="yes" xml:space="preserve">
          <source>Operator '{0}' cannot be applied to operands of type '{1}' and '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'appliquer l'opérateur '{0}' aux opérandes de type '{1}' et '{2}'</target>
        </trans-unit>
        <trans-unit id="BadIndexLHS" translate="yes" xml:space="preserve">
          <source>Cannot apply indexing with [] to an expression of type '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'appliquer l'indexation à l'aide de [] à une expression de type '{0}'</target>
        </trans-unit>
        <trans-unit id="BadIndexCount" translate="yes" xml:space="preserve">
          <source>Wrong number of indices inside []; expected '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Nombre d'index incorrects dans [], '{0}' attendu</target>
        </trans-unit>
        <trans-unit id="BadUnaryOp" translate="yes" xml:space="preserve">
          <source>Operator '{0}' cannot be applied to operand of type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'appliquer l'opérateur '{0}' à un opérande de type '{1}'</target>
        </trans-unit>
        <trans-unit id="NoImplicitConv" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type '{0}' to '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de convertir implicitement le type '{0}' en '{1}'</target>
        </trans-unit>
        <trans-unit id="NoExplicitConv" translate="yes" xml:space="preserve">
          <source>Cannot convert type '{0}' to '{1}'</source>
          <target state="needs-review-translation" state-qualifier="mt-suggestion">Impossible de convertir le type « {0} » pour « {1} »</target>
        </trans-unit>
        <trans-unit id="ConstOutOfRange" translate="yes" xml:space="preserve">
          <source>Constant value '{0}' cannot be converted to a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de convertir la valeur de constante '{0}' en '{1}'</target>
        </trans-unit>
        <trans-unit id="AmbigBinaryOps" translate="yes" xml:space="preserve">
          <source>Operator '{0}' is ambiguous on operands of type '{1}' and '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">L'opérateur '{0}' est ambigu pour des opérandes de type '{1}' et '{2}'</target>
        </trans-unit>
        <trans-unit id="AmbigUnaryOp" translate="yes" xml:space="preserve">
          <source>Operator '{0}' is ambiguous on an operand of type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">L'opérateur '{0}' est ambigu pour un opérande de type '{1}'</target>
        </trans-unit>
        <trans-unit id="ValueCantBeNull" translate="yes" xml:space="preserve">
          <source>Cannot convert null to '{0}' because it is a non-nullable value type</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de convertir null en '{0}', car il s'agit d'un type valeur qui n'autorise pas les valeurs null</target>
        </trans-unit>
        <trans-unit id="WrongNestedThis" translate="yes" xml:space="preserve">
          <source>Cannot access a non-static member of outer type '{0}' via nested type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'accéder à un membre non statique de type externe '{0}' par l'intermédiaire du type imbriqué '{1}'</target>
        </trans-unit>
        <trans-unit id="NoSuchMember" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a definition for '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' ne contient pas de définition pour '{1}'</target>
        </trans-unit>
        <trans-unit id="ObjectRequired" translate="yes" xml:space="preserve">
          <source>An object reference is required for the non-static field, method, or property '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Une référence d'objet est requise pour la propriété, la méthode ou le champ non statique '{0}'</target>
        </trans-unit>
        <trans-unit id="AmbigCall" translate="yes" xml:space="preserve">
          <source>The call is ambiguous between the following methods or properties: '{0}' and '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">L'appel est ambigu entre les méthodes ou propriétés suivantes : '{0}' et '{1}'</target>
        </trans-unit>
        <trans-unit id="BadAccess" translate="yes" xml:space="preserve">
          <source>'{0}' is inaccessible due to its protection level</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' est inaccessible en raison de son niveau de protection</target>
        </trans-unit>
        <trans-unit id="MethDelegateMismatch" translate="yes" xml:space="preserve">
          <source>No overload for '{0}' matches delegate '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Aucune surcharge pour '{0}' ne correspond au délégué '{1}'</target>
        </trans-unit>
        <trans-unit id="AssgLvalueExpected" translate="yes" xml:space="preserve">
          <source>The left-hand side of an assignment must be a variable, property or indexer</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">La partie gauche d'une assignation doit être une variable, une propriété ou un indexeur</target>
        </trans-unit>
        <trans-unit id="NoConstructors" translate="yes" xml:space="preserve">
          <source>The type '{0}' has no constructors defined</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Aucun constructeur n'est défini pour le type '{0}'</target>
        </trans-unit>
        <trans-unit id="PropertyLacksGet" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because it lacks the get accessor</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser la propriété ou l'indexeur '{0}' dans ce contexte, car il lui manque l'accesseur get</target>
        </trans-unit>
        <trans-unit id="ObjectProhibited" translate="yes" xml:space="preserve">
          <source>Member '{0}' cannot be accessed with an instance reference; qualify it with a type name instead</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Le membre '{0}' est inaccessible avec une référence d'instance ; qualifiez-le avec un nom de type</target>
        </trans-unit>
        <trans-unit id="AssgReadonly" translate="yes" xml:space="preserve">
          <source>A readonly field cannot be assigned to (except in a constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Un champ readonly ne peut pas être assigné (sauf s'il appartient à un constructeur ou un initialiseur de variable)</target>
        </trans-unit>
        <trans-unit id="RefReadonly" translate="yes" xml:space="preserve">
          <source>A readonly field cannot be passed ref or out (except in a constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Un champ readonly ne peut pas être passé en ref ou out (sauf s'il appartient à un constructeur)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyStatic" translate="yes" xml:space="preserve">
          <source>A static readonly field cannot be assigned to (except in a static constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Un champ readonly statique ne peut pas être assigné (sauf s'il appartient à un constructeur statique ou un initialiseur de variable)</target>
        </trans-unit>
        <trans-unit id="RefReadonlyStatic" translate="yes" xml:space="preserve">
          <source>A static readonly field cannot be passed ref or out (except in a static constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Un champ readonly statique ne peut pas être passé en ref ou out (sauf s'il appartient à un constructeur statique)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyProp" translate="yes" xml:space="preserve">
          <source>Property or indexer '{0}' cannot be assigned to -- it is read only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'assigner la propriété ou l'indexeur '{0}' -- il est en lecture seule</target>
        </trans-unit>
        <trans-unit id="RefProperty" translate="yes" xml:space="preserve">
          <source>A property or indexer may not be passed as an out or ref parameter</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Une propriété ou un indexeur ne peut pas être passé en tant que paramètre de sortie (out) ni de référence (ref)</target>
        </trans-unit>
        <trans-unit id="UnsafeNeeded" translate="yes" xml:space="preserve">
          <source>Dynamic calls cannot be used in conjunction with pointers</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser des appels dynamiques avec des pointeurs</target>
        </trans-unit>
        <trans-unit id="BadBoolOp" translate="yes" xml:space="preserve">
          <source>In order to be applicable as a short circuit operator a user-defined logical operator ('{0}') must have the same return type as the type of its 2 parameters</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Pour être applicable en tant qu'opérateur de court-circuit, un opérateur logique défini par l'utilisateur '{0}') doit avoir le même type de retour que le type de ses 2 paramètres</target>
        </trans-unit>
        <trans-unit id="MustHaveOpTF" translate="yes" xml:space="preserve">
          <source>The type ('{0}') must contain declarations of operator true and operator false</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Le type ('{0}') doit contenir les déclarations de l'opérateur true et de l'opérateur false</target>
        </trans-unit>
        <trans-unit id="ConstOutOfRangeChecked" translate="yes" xml:space="preserve">
          <source>Constant value '{0}' cannot be converted to a '{1}' (use 'unchecked' syntax to override)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de convertir la valeur de constante '{0}' en '{1}' (utilisez la syntaxe 'unchecked)</target>
        </trans-unit>
        <trans-unit id="AmbigMember" translate="yes" xml:space="preserve">
          <source>Ambiguity between '{0}' and '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Ambiguïté entre '{0}' et '{1}'</target>
        </trans-unit>
        <trans-unit id="NoImplicitConvCast" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type '{0}' to '{1}'. An explicit conversion exists (are you missing a cast?)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de convertir implicitement le type '{0}' en '{1}'. Une conversion explicite existe (un cast est-il manquant ?)</target>
        </trans-unit>
        <trans-unit id="InaccessibleGetter" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because the get accessor is inaccessible</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser la propriété ou l'indexeur '{0}' dans ce contexte, car l'accesseur get n'est pas accessible</target>
        </trans-unit>
        <trans-unit id="InaccessibleSetter" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because the set accessor is inaccessible</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser la propriété ou l'indexeur '{0}' dans ce contexte, car l'accesseur set n'est pas accessible</target>
        </trans-unit>
        <trans-unit id="BadArity" translate="yes" xml:space="preserve">
          <source>Using the generic {1} '{0}' requires '{2}' type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">L'utilisation du {1} '{0}' générique requiert les arguments de type '{2}'</target>
        </trans-unit>
        <trans-unit id="TypeArgsNotAllowed" translate="yes" xml:space="preserve">
          <source>The {1} '{0}' cannot be used with type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser le {1} '{0}' avec des arguments de type</target>
        </trans-unit>
        <trans-unit id="HasNoTypeVars" translate="yes" xml:space="preserve">
          <source>The non-generic {1} '{0}' cannot be used with type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser le {1} '{0}' non générique avec des arguments de type</target>
        </trans-unit>
        <trans-unit id="NewConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>'{2}' must be a non-abstract type with a public parameterless constructor in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{2}' doit être un type non abstrait avec un constructeur sans paramètre public afin de l'utiliser comme paramètre '{1}' dans le type ou la méthode générique '{0}'</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedRefType" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no implicit reference conversion from '{3}' to '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser le type '{3}' comme paramètre de type '{2}' dans le type ou la méthode générique '{0}'. Il n'y a pas de conversion de référence implicite de '{3}' en '{1}'.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedNullableEnum" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser le type '{3}' comme paramètre de type '{2}' dans le type ou la méthode générique '{0}'. Le type Nullable '{3}' ne satisfait pas la contrainte de '{1}'.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedNullableInterface" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'. Nullable types can not satisfy any interface constraints.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser le type '{3}' comme paramètre de type '{2}' dans le type ou la méthode générique '{0}'. Le type Nullable '{3}' ne satisfait pas la contrainte de '{1}'. Les types Nullable ne peuvent pas satisfaire les contraintes d'interface.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedValType" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no boxing conversion from '{3}' to '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser le type '{3}' comme paramètre de type '{2}' dans le type ou la méthode générique '{0}'. Il n'y a pas de conversion boxing de '{3}' en '{1}'.</target>
        </trans-unit>
        <trans-unit id="CantInferMethTypeArgs" translate="yes" xml:space="preserve">
          <source>The type arguments for method '{0}' cannot be inferred from the usage. Try specifying the type arguments explicitly.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de déduire les arguments de type pour la méthode '{0}' à partir de l'utilisation. Essayez de spécifier les arguments de type de façon explicite.</target>
        </trans-unit>
        <trans-unit id="RefConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>The type '{2}' must be a reference type in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Le type '{2}' doit être un type référence afin d'être utilisé comme paramètre '{1}' dans le type ou la méthode générique '{0}'</target>
        </trans-unit>
        <trans-unit id="ValConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>The type '{2}' must be a non-nullable value type in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Le type '{2}' doit être un type valeur non Nullable afin d'être utilisé comme paramètre '{1}' dans le type ou la méthode générique '{0}'</target>
        </trans-unit>
        <trans-unit id="AmbigUDConv" translate="yes" xml:space="preserve">
          <source>Ambiguous user defined conversions '{0}' and '{1}' when converting from '{2}' to '{3}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Conversions définies par l'utilisateur ambiguës '{0}' et '{1}' lors de la conversion de '{2}' en '{3}'</target>
        </trans-unit>
        <trans-unit id="BindToBogus" translate="yes" xml:space="preserve">
          <source>'{0}' is not supported by the language</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' n'est pas pris en charge par le langage</target>
        </trans-unit>
        <trans-unit id="CantCallSpecialMethod" translate="yes" xml:space="preserve">
          <source>'{0}': cannot explicitly call operator or accessor</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' : impossible d'appeler explicitement un opérateur ou un accesseur</target>
        </trans-unit>
        <trans-unit id="ConvertToStaticClass" translate="yes" xml:space="preserve">
          <source>Cannot convert to static type '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de convertir en type static '{0}'</target>
        </trans-unit>
        <trans-unit id="IncrementLvalueExpected" translate="yes" xml:space="preserve">
          <source>The operand of an increment or decrement operator must be a variable, property or indexer</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">L'opérande d'un opérateur d'incrémentation ou de décrémentation doit être une variable, une propriété ou un indexeur</target>
        </trans-unit>
        <trans-unit id="BadArgCount" translate="yes" xml:space="preserve">
          <source>No overload for method '{0}' takes '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Aucune surcharge pour la méthode '{0}' ne prend d'arguments '{1}'</target>
        </trans-unit>
        <trans-unit id="BadArgTypes" translate="yes" xml:space="preserve">
          <source>The best overloaded method match for '{0}' has some invalid arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">La méthode surchargée correspondant le mieux à '{0}' a des arguments non valides</target>
        </trans-unit>
        <trans-unit id="RefLvalueExpected" translate="yes" xml:space="preserve">
          <source>A ref or out argument must be an assignable variable</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Un argument ref ou out doit être une variable qui peut être assignée</target>
        </trans-unit>
        <trans-unit id="BadProtectedAccess" translate="yes" xml:space="preserve">
          <source>Cannot access protected member '{0}' via a qualifier of type '{1}'; the qualifier must be of type '{2}' (or derived from it)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'accéder au membre protégé '{0}' par l'intermédiaire d'un qualificateur de type '{1}' ; le qualificateur doit être de type '{2}' (ou dérivé de celui-ci)</target>
        </trans-unit>
        <trans-unit id="BindToBogusProp2" translate="yes" xml:space="preserve">
          <source>Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor methods '{1}' or '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">La propriété, l'indexeur ou l'événement '{0}' n'est pas pris en charge par le langage ; essayez d'appeler directement les méthodes d'accesseur '{1}' ou '{2}'</target>
        </trans-unit>
        <trans-unit id="BindToBogusProp1" translate="yes" xml:space="preserve">
          <source>Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor method '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">La propriété, l'indexeur ou l'événement '{0}' n'est pas pris en charge par le langage ; essayez d'appeler directement la méthode d'accesseur '{1}'</target>
        </trans-unit>
        <trans-unit id="BadDelArgCount" translate="yes" xml:space="preserve">
          <source>Delegate '{0}' does not take '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Le délégué '{0}' ne prend pas les arguments '{1}'</target>
        </trans-unit>
        <trans-unit id="BadDelArgTypes" translate="yes" xml:space="preserve">
          <source>Delegate '{0}' has some invalid arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Le délégué '{0}' utilise des arguments non valides</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyLocal" translate="yes" xml:space="preserve">
          <source>Cannot assign to '{0}' because it is read-only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'assigner à '{0}', car il est en lecture seule</target>
        </trans-unit>
        <trans-unit id="RefReadonlyLocal" translate="yes" xml:space="preserve">
          <source>Cannot pass '{0}' as a ref or out argument because it is read-only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de passer '{0}' comme argument ref ou out, car il est en lecture seule</target>
        </trans-unit>
        <trans-unit id="ReturnNotLValue" translate="yes" xml:space="preserve">
          <source>Cannot modify the return value of '{0}' because it is not a variable</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de modifier la valeur de retour de '{0}' car il ne s'agit pas d'une variable</target>
        </trans-unit>
        <trans-unit id="AssgReadonly2" translate="yes" xml:space="preserve">
          <source>Members of readonly field '{0}' cannot be modified (except in a constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de modifier les membres d'un champ readonly '{0}' (sauf s'ils appartiennent à un constructeur ou un initialiseur de variable)</target>
        </trans-unit>
        <trans-unit id="RefReadonly2" translate="yes" xml:space="preserve">
          <source>Members of readonly field '{0}' cannot be passed ref or out (except in a constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de passer les membres d'un champ readonly '{0}' en ref ou out (sauf s'ils appartiennent à un constructeur)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyStatic2" translate="yes" xml:space="preserve">
          <source>Fields of static readonly field '{0}' cannot be assigned to (except in a static constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'assigner les champs du champ readonly statique '{0}' (sauf s'ils appartiennent à un constructeur statique ou un initialiseur de variable)</target>
        </trans-unit>
        <trans-unit id="RefReadonlyStatic2" translate="yes" xml:space="preserve">
          <source>Fields of static readonly field '{0}' cannot be passed ref or out (except in a static constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de passer les champs d'un champ readonly statique '{0}' en ref ou out (sauf s'ils appartiennent à un constructeur statique)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyLocalCause" translate="yes" xml:space="preserve">
          <source>Cannot assign to '{0}' because it is a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'assigner à '{0}', car il s'agit d'un '{1}'</target>
        </trans-unit>
        <trans-unit id="RefReadonlyLocalCause" translate="yes" xml:space="preserve">
          <source>Cannot pass '{0}' as a ref or out argument because it is a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de passer '{0}' en tant qu'argument ref ou out, car il s'agit d'un '{1}'</target>
        </trans-unit>
        <trans-unit id="BadCtorArgCount" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a constructor that takes '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' ne contient pas de constructeur qui accepte des arguments '{1}'</target>
        </trans-unit>
        <trans-unit id="NonInvocableMemberCalled" translate="yes" xml:space="preserve">
          <source>Non-invocable member '{0}' cannot be used like a method.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible d'utiliser un membre '{0}' ne pouvant pas être appelé comme une méthode.</target>
        </trans-unit>
        <trans-unit id="NamedArgumentSpecificationBeforeFixedArgument" translate="yes" xml:space="preserve">
          <source>Named argument specifications must appear after all fixed arguments have been specified</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Les spécifications d'argument nommé doivent s'afficher après la spécification de tous les arguments fixes</target>
        </trans-unit>
        <trans-unit id="BadNamedArgument" translate="yes" xml:space="preserve">
          <source>The best overload for '{0}' does not have a parameter named '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">La meilleure surcharge pour '{0}' n'a pas de paramètre nommé '{1}'</target>
        </trans-unit>
        <trans-unit id="BadNamedArgumentForDelegateInvoke" translate="yes" xml:space="preserve">
          <source>The delegate '{0}' does not have a parameter named '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Le délégué '{0}' n'a pas de paramètre nommé '{1}'</target>
        </trans-unit>
        <trans-unit id="DuplicateNamedArgument" translate="yes" xml:space="preserve">
          <source>Named argument '{0}' cannot be specified multiple times</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">Impossible de spécifier plusieurs fois l'argument nommé '{0}'</target>
        </trans-unit>
        <trans-unit id="NamedArgumentUsedInPositional" translate="yes" xml:space="preserve">
          <source>Named argument '{0}' specifies a parameter for which a positional argument has already been given</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">L'argument nommé '{0}' spécifie un paramètre pour lequel un paramètre positionnel a déjà été donné</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
