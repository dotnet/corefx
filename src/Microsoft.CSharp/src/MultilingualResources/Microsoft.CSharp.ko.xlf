<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="ko" original="MICROSOFT.CSHARP/RESOURCES/STRINGS.RESX" tool-id="MultilingualAppToolkit" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="MultilingualAppToolkit" tool-name="Multilingual App Toolkit" tool-version="4.0.1387.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="MICROSOFT.CSHARP/RESOURCES/STRINGS.RESX" datatype="resx">
        <trans-unit id="InternalCompilerError" translate="yes" xml:space="preserve">
          <source>An unexpected exception occurred while binding a dynamic operation</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">동적 작업을 바인딩하는 동안 예기치 않은 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="BindRequireArguments" translate="yes" xml:space="preserve">
          <source>Cannot bind call with no calling object</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">호출 개체가 없으면 호출을 바인딩할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BindCallFailedOverloadResolution" translate="yes" xml:space="preserve">
          <source>Overload resolution failed</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">오버로드 확인에 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="BindBinaryOperatorRequireTwoArguments" translate="yes" xml:space="preserve">
          <source>Binary operators must be invoked with two arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">이항 연산자를 호출하려면 인수 두 개를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="BindUnaryOperatorRequireOneArgument" translate="yes" xml:space="preserve">
          <source>Unary operators must be invoked with one argument</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">단항 연산자를 호출하려면 인수 한 개를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="BindPropertyFailedMethodGroup" translate="yes" xml:space="preserve">
          <source>The name '{0}' is bound to a method and cannot be used like a property</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">이름 '{0}'은(는) 메서드에 바인딩되어 있으며 속성처럼 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BindPropertyFailedEvent" translate="yes" xml:space="preserve">
          <source>The event '{0}' can only appear on the left hand side of +</source>
          <target state="needs-review-translation" state-qualifier="mt-suggestion">이벤트 ' (0) '의 왼쪽에만 나타날 수 있습니다 +</target>
        </trans-unit>
        <trans-unit id="BindInvokeFailedNonDelegate" translate="yes" xml:space="preserve">
          <source>Cannot invoke a non-delegate type</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">비대리자 형식을 호출할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BindBinaryAssignmentRequireTwoArguments" translate="yes" xml:space="preserve">
          <source>Binary operators cannot be invoked with one argument</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">하나의 인수를 사용하여 이항 연산자를 호출할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BindBinaryAssignmentFailedNullReference" translate="yes" xml:space="preserve">
          <source>Cannot perform member assignment on a null reference</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">null 참조에 대해 멤버 할당을 수행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="NullReferenceOnMemberException" translate="yes" xml:space="preserve">
          <source>Cannot perform runtime binding on a null reference</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">null 참조에 대해 런타임 바인딩을 수행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BindCallToConditionalMethod" translate="yes" xml:space="preserve">
          <source>Cannot dynamically invoke method '{0}' because it has a Conditional attribute</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 메서드는 Conditional 특성이 있으므로 동적으로 호출할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BindToVoidMethodButExpectResult" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type 'void' to 'object'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">암시적으로 'void' 형식을 'object' 형식으로 변환할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BadBinaryOps" translate="yes" xml:space="preserve">
          <source>Operator '{0}' cannot be applied to operands of type '{1}' and '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 연산자는 '{1}' 및 '{2}' 형식의 피연산자에 적용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BadIndexLHS" translate="yes" xml:space="preserve">
          <source>Cannot apply indexing with [] to an expression of type '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">[]을 사용하는 인덱싱을 '{0}' 형식의 식에 적용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BadIndexCount" translate="yes" xml:space="preserve">
          <source>Wrong number of indices inside []; expected '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">[] 내부의 인덱스 수가 잘못되었습니다. '{0}'개가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="BadUnaryOp" translate="yes" xml:space="preserve">
          <source>Operator '{0}' cannot be applied to operand of type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 연산자는 '{1}' 형식의 피연산자에 적용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="NoImplicitConv" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type '{0}' to '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">암시적으로 '{0}' 형식을 '{1}' 형식으로 변환할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="NoExplicitConv" translate="yes" xml:space="preserve">
          <source>Cannot convert type '{0}' to '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 형식을 '{1}' 형식으로 변환할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ConstOutOfRange" translate="yes" xml:space="preserve">
          <source>Constant value '{0}' cannot be converted to a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">상수 값 '{0}'을(를) '{1}'(으)로 변환할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="AmbigBinaryOps" translate="yes" xml:space="preserve">
          <source>Operator '{0}' is ambiguous on operands of type '{1}' and '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 연산자가 모호하여 '{1}' 및 '{2}' 형식의 피연산자에 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="AmbigUnaryOp" translate="yes" xml:space="preserve">
          <source>Operator '{0}' is ambiguous on an operand of type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 연산자가 모호하여 '{1}' 형식의 피연산자에 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ValueCantBeNull" translate="yes" xml:space="preserve">
          <source>Cannot convert null to '{0}' because it is a non-nullable value type</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}'은(는) null을 허용하지 않는 값 형식이므로 null을 이 형식으로 변환할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="WrongNestedThis" translate="yes" xml:space="preserve">
          <source>Cannot access a non-static member of outer type '{0}' via nested type '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">중첩 형식 '{1}'을(를) 통해 외부 형식 '{0}'의 static이 아닌 멤버에 액세스할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="NoSuchMember" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a definition for '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}'에 '{1}'에 대한 정의가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ObjectRequired" translate="yes" xml:space="preserve">
          <source>An object reference is required for the non-static field, method, or property '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">static이 아닌 필드, 메서드 또는 속성 '{0}'에 개체 참조가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="AmbigCall" translate="yes" xml:space="preserve">
          <source>The call is ambiguous between the following methods or properties: '{0}' and '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">다음 메서드 또는 속성 사이의 호출이 모호합니다. '{0}'과(와) '{1}'</target>
        </trans-unit>
        <trans-unit id="BadAccess" translate="yes" xml:space="preserve">
          <source>'{0}' is inaccessible due to its protection level</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">보호 수준 때문에 '{0}'에 액세스할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="MethDelegateMismatch" translate="yes" xml:space="preserve">
          <source>No overload for '{0}' matches delegate '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{1}' 대리자와 일치하는 '{0}'에 대한 오버로드가 없습니다.</target>
        </trans-unit>
        <trans-unit id="AssgLvalueExpected" translate="yes" xml:space="preserve">
          <source>The left-hand side of an assignment must be a variable, property or indexer</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">할당식의 왼쪽은 변수, 속성 또는 인덱서여야 합니다.</target>
        </trans-unit>
        <trans-unit id="NoConstructors" translate="yes" xml:space="preserve">
          <source>The type '{0}' has no constructors defined</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 형식에 정의된 생성자가 없습니다.</target>
        </trans-unit>
        <trans-unit id="PropertyLacksGet" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because it lacks the get accessor</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 속성 또는 인덱서는 get 접근자가 없으므로 이 컨텍스트에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ObjectProhibited" translate="yes" xml:space="preserve">
          <source>Member '{0}' cannot be accessed with an instance reference; qualify it with a type name instead</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 멤버는 인스턴스 참조를 사용하여 액세스할 수 없습니다. 대신 형식 이름을 사용하여 한정하십시오.</target>
        </trans-unit>
        <trans-unit id="AssgReadonly" translate="yes" xml:space="preserve">
          <source>A readonly field cannot be assigned to (except in a constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">읽기 전용 필드에는 할당할 수 없습니다. 단 생성자 또는 변수 이니셜라이저에서는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="RefReadonly" translate="yes" xml:space="preserve">
          <source>A readonly field cannot be passed ref or out (except in a constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">읽기 전용 필드는 ref 또는 out으로 전달할 수 없습니다. 단 생성자에서는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyStatic" translate="yes" xml:space="preserve">
          <source>A static readonly field cannot be assigned to (except in a static constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">정적 읽기 전용 필드에는 할당할 수 없습니다. 단 정적 생성자 또는 변수 이니셜라이저에서는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="RefReadonlyStatic" translate="yes" xml:space="preserve">
          <source>A static readonly field cannot be passed ref or out (except in a static constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">정적 읽기 전용 필드는 ref 또는 out으로 전달할 수 없습니다. 단 정적 생성자에서는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyProp" translate="yes" xml:space="preserve">
          <source>Property or indexer '{0}' cannot be assigned to -- it is read only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 속성 또는 인덱서는 읽기 전용이므로 할당할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="RefProperty" translate="yes" xml:space="preserve">
          <source>A property or indexer may not be passed as an out or ref parameter</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">속성 또는 인덱서는 out 또는 ref 매개 변수로 전달할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="UnsafeNeeded" translate="yes" xml:space="preserve">
          <source>Dynamic calls cannot be used in conjunction with pointers</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">동적 호출을 포인터와 함께 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BadBoolOp" translate="yes" xml:space="preserve">
          <source>In order to be applicable as a short circuit operator a user-defined logical operator ('{0}') must have the same return type as the type of its 2 parameters</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">사용자 정의 논리 연산자('{0}')를 단락(short circuit) 연산자로 사용하려면 연산자의 두 매개 변수와 같은 형식을 반환해야 합니다.</target>
        </trans-unit>
        <trans-unit id="MustHaveOpTF" translate="yes" xml:space="preserve">
          <source>The type ('{0}') must contain declarations of operator true and operator false</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 형식에는 true 및 false 연산자 선언이 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="ConstOutOfRangeChecked" translate="yes" xml:space="preserve">
          <source>Constant value '{0}' cannot be converted to a '{1}' (use 'unchecked' syntax to override)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">상수 값 '{0}'을(를) '{1}'(으)로 변환할 수 없습니다. 재정의하려면 'unchecked' 구문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="AmbigMember" translate="yes" xml:space="preserve">
          <source>Ambiguity between '{0}' and '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}'과(와) '{1}' 사이에 모호성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="NoImplicitConvCast" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type '{0}' to '{1}'. An explicit conversion exists (are you missing a cast?)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">암시적으로 '{0}' 형식을 '{1}' 형식으로 변환할 수 없습니다. 명시적 변환이 있습니다. 캐스트가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="InaccessibleGetter" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because the get accessor is inaccessible</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">get 접근자에 액세스할 수 없으므로 '{0}' 속성 또는 인덱서는 이 컨텍스트에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="InaccessibleSetter" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because the set accessor is inaccessible</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">set 접근자에 액세스할 수 없으므로 '{0}' 속성 또는 인덱서는 이 컨텍스트에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BadArity" translate="yes" xml:space="preserve">
          <source>Using the generic {1} '{0}' requires '{2}' type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">제네릭 {1} '{0}'을(를) 사용하려면 '{2}' 형식 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="TypeArgsNotAllowed" translate="yes" xml:space="preserve">
          <source>The {1} '{0}' cannot be used with type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">{1} '{0}'은(는) 형식 인수와 함께 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="HasNoTypeVars" translate="yes" xml:space="preserve">
          <source>The non-generic {1} '{0}' cannot be used with type arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">제네릭이 아닌 {1} '{0}'은(는) 형식 인수와 함께 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="NewConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>'{2}' must be a non-abstract type with a public parameterless constructor in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">제네릭 형식 또는 메서드 '{0}'에서 '{1}' 매개 변수로 사용하려면 '{2}'이(가) 매개 변수가 없는 public 생성자를 사용하는 비추상 형식이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedRefType" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no implicit reference conversion from '{3}' to '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{3}' 형식은 제네릭 형식 또는 메서드 '{0}'에서 형식 매개 변수 '{2}'(으)로 사용할 수 없습니다. '{3}'에서 '{1}'(으)로의 암시적 참조 변환이 없습니다.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedNullableEnum" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{3}' 형식은 제네릭 형식 또는 메서드 '{0}'에서 형식 매개 변수 '{2}'(으)로 사용할 수 없습니다. nullable 형식 '{3}'이(가) '{1}' 제약 조건을 충족하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedNullableInterface" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'. Nullable types can not satisfy any interface constraints.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{3}' 형식은 제네릭 형식 또는 메서드 '{0}'에서 형식 매개 변수 '{2}'(으)로 사용할 수 없습니다. nullable 형식 '{3}'이(가) '{1}' 제약 조건을 충족하지 않습니다. nullable 형식은 어떠한 인터페이스 제약 조건도 만족할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedValType" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no boxing conversion from '{3}' to '{1}'.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{3}' 형식은 제네릭 형식 또는 메서드 '{0}'에서 형식 매개 변수 '{2}'(으)로 사용할 수 없습니다. '{3}'에서 '{1}'(으)로의 boxing 변환이 없습니다.</target>
        </trans-unit>
        <trans-unit id="CantInferMethTypeArgs" translate="yes" xml:space="preserve">
          <source>The type arguments for method '{0}' cannot be inferred from the usage. Try specifying the type arguments explicitly.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 메서드의 형식 인수를 유추할 수 없습니다. 형식 인수를 명시적으로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="RefConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>The type '{2}' must be a reference type in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">제네릭 형식 또는 메서드 '{0}'에서 '{2}' 형식을 '{1}' 매개 변수로 사용하려면 해당 형식이 참조 형식이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="ValConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>The type '{2}' must be a non-nullable value type in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">제네릭 형식 또는 메서드 '{0}'에서 '{2}' 형식을 '{1}' 매개 변수로 사용하려면 해당 형식이 null을 허용하지 않는 값 형식이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="AmbigUDConv" translate="yes" xml:space="preserve">
          <source>Ambiguous user defined conversions '{0}' and '{1}' when converting from '{2}' to '{3}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{2}'에서 '{3}(으)로 변환하는 동안 모호한 사용자 정의 변환 '{0}' 및 '{1}'이(가) 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="BindToBogus" translate="yes" xml:space="preserve">
          <source>'{0}' is not supported by the language</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}'은(는) 언어에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="CantCallSpecialMethod" translate="yes" xml:space="preserve">
          <source>'{0}': cannot explicitly call operator or accessor</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}': 연산자나 접근자를 명시적으로 호출할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ConvertToStaticClass" translate="yes" xml:space="preserve">
          <source>Cannot convert to static type '{0}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 정적 형식으로 변환할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="IncrementLvalueExpected" translate="yes" xml:space="preserve">
          <source>The operand of an increment or decrement operator must be a variable, property or indexer</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">증가 연산자 또는 감소 연산자의 피연산자는 변수, 속성 또는 인덱서여야 합니다.</target>
        </trans-unit>
        <trans-unit id="BadArgCount" translate="yes" xml:space="preserve">
          <source>No overload for method '{0}' takes '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{1}'개의 인수를 사용하는 '{0}' 메서드에 대한 오버로드가 없습니다.</target>
        </trans-unit>
        <trans-unit id="BadArgTypes" translate="yes" xml:space="preserve">
          <source>The best overloaded method match for '{0}' has some invalid arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}'에 가장 일치하는 오버로드된 메서드에 잘못된 인수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="RefLvalueExpected" translate="yes" xml:space="preserve">
          <source>A ref or out argument must be an assignable variable</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">ref 또는 out 인수는 할당 가능한 변수여야 합니다.</target>
        </trans-unit>
        <trans-unit id="BadProtectedAccess" translate="yes" xml:space="preserve">
          <source>Cannot access protected member '{0}' via a qualifier of type '{1}'; the qualifier must be of type '{2}' (or derived from it)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{1}' 형식의 한정자를 통해 보호된 멤버 '{0}'에 액세스할 수 없습니다. 한정자는 '{2}' 형식이거나 여기에서 파생된 형식이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="BindToBogusProp2" translate="yes" xml:space="preserve">
          <source>Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor methods '{1}' or '{2}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 속성, 인덱서 또는 이벤트는 이 언어에서 지원되지 않습니다. '{1}' 또는 '{2}' 접근자 메서드를 직접 호출해 보십시오.</target>
        </trans-unit>
        <trans-unit id="BindToBogusProp1" translate="yes" xml:space="preserve">
          <source>Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor method '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 속성, 인덱서 또는 이벤트는 이 언어에서 지원되지 않습니다. '{1}' 접근자 메서드를 직접 호출해 보십시오.</target>
        </trans-unit>
        <trans-unit id="BadDelArgCount" translate="yes" xml:space="preserve">
          <source>Delegate '{0}' does not take '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 대리자에는 '{1}'개의 인수를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BadDelArgTypes" translate="yes" xml:space="preserve">
          <source>Delegate '{0}' has some invalid arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 대리자에 잘못된 인수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyLocal" translate="yes" xml:space="preserve">
          <source>Cannot assign to '{0}' because it is read-only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">읽기 전용인 '{0}'에는 할당할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="RefReadonlyLocal" translate="yes" xml:space="preserve">
          <source>Cannot pass '{0}' as a ref or out argument because it is read-only</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}'은(는) 읽기 전용이므로 ref 또는 out 인수로 전달할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ReturnNotLValue" translate="yes" xml:space="preserve">
          <source>Cannot modify the return value of '{0}' because it is not a variable</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}'은(는) 변수가 아니므로 해당 반환 값을 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="AssgReadonly2" translate="yes" xml:space="preserve">
          <source>Members of readonly field '{0}' cannot be modified (except in a constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">읽기 전용 필드 '{0}'의 멤버는 수정할 수 없습니다. 단 생성자 또는 변수 이니셜라이저에서는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="RefReadonly2" translate="yes" xml:space="preserve">
          <source>Members of readonly field '{0}' cannot be passed ref or out (except in a constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">읽기 전용 필드 '{0}'의 멤버는 ref 또는 out으로 전달할 수 없습니다. 단 생성자에서는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyStatic2" translate="yes" xml:space="preserve">
          <source>Fields of static readonly field '{0}' cannot be assigned to (except in a static constructor or a variable initializer)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">static 읽기 전용 필드 '{0}'의 필드에는 할당할 수 없습니다. 단 static 생성자 또는 변수 이니셜라이저에서는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="RefReadonlyStatic2" translate="yes" xml:space="preserve">
          <source>Fields of static readonly field '{0}' cannot be passed ref or out (except in a static constructor)</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">static 읽기 전용 필드 '{0}'의 필드는 ref 또는 out으로 전달할 수 없습니다. 단 static 생성자에서는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyLocalCause" translate="yes" xml:space="preserve">
          <source>Cannot assign to '{0}' because it is a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{1}'인 '{0}'에는 할당할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="RefReadonlyLocalCause" translate="yes" xml:space="preserve">
          <source>Cannot pass '{0}' as a ref or out argument because it is a '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}'은(는) '{1}'이므로 ref 또는 out 인수로 전달할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="BadCtorArgCount" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a constructor that takes '{1}' arguments</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}'에 '{1}'개의 인수를 사용하는 생성자가 없습니다.</target>
        </trans-unit>
        <trans-unit id="NonInvocableMemberCalled" translate="yes" xml:space="preserve">
          <source>Non-invocable member '{0}' cannot be used like a method.</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">호출할 수 없는 멤버인 '{0}'은(는) 메서드처럼 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="NamedArgumentSpecificationBeforeFixedArgument" translate="yes" xml:space="preserve">
          <source>Named argument specifications must appear after all fixed arguments have been specified</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">명명된 인수 사양은 모든 고정 인수를 지정한 다음에 와야 합니다.</target>
        </trans-unit>
        <trans-unit id="BadNamedArgument" translate="yes" xml:space="preserve">
          <source>The best overload for '{0}' does not have a parameter named '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}'에 가장 적합한 오버로드에 '{1}' 매개 변수가 없습니다.</target>
        </trans-unit>
        <trans-unit id="BadNamedArgumentForDelegateInvoke" translate="yes" xml:space="preserve">
          <source>The delegate '{0}' does not have a parameter named '{1}'</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">'{0}' 대리자에 '{1}' 매개 변수가 없습니다.</target>
        </trans-unit>
        <trans-unit id="DuplicateNamedArgument" translate="yes" xml:space="preserve">
          <source>Named argument '{0}' cannot be specified multiple times</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">명명된 인수 '{0}'을(를) 여러 번 지정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="NamedArgumentUsedInPositional" translate="yes" xml:space="preserve">
          <source>Named argument '{0}' specifies a parameter for which a positional argument has already been given</source>
          <target state="needs-review-translation" state-qualifier="tm-suggestion">명명된 인수 '{0}'은(는) 위치 인수가 이미 지정된 매개 변수를 지정합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
