// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.CSharp.Resources.Strings", typeof(Strings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot call an abstract base member: &apos;{0}&apos;.
        /// </summary>
        internal static string AbstractBaseCall {
            get {
                return ResourceManager.GetString("AbstractBaseCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; is ambiguous on operands of type &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string AmbigBinaryOps {
            get {
                return ResourceManager.GetString("AmbigBinaryOps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The call is ambiguous between the following methods or properties: &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        internal static string AmbigCall {
            get {
                return ResourceManager.GetString("AmbigCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguity between &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        internal static string AmbigMember {
            get {
                return ResourceManager.GetString("AmbigMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous user defined conversions &apos;{0}&apos; and &apos;{1}&apos; when converting from &apos;{2}&apos; to &apos;{3}&apos;.
        /// </summary>
        internal static string AmbigUDConv {
            get {
                return ResourceManager.GetString("AmbigUDConv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; is ambiguous on an operand of type &apos;{1}&apos;.
        /// </summary>
        internal static string AmbigUnaryOp {
            get {
                return ResourceManager.GetString("AmbigUnaryOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The left-hand side of an assignment must be a variable, property or indexer.
        /// </summary>
        internal static string AssgLvalueExpected {
            get {
                return ResourceManager.GetString("AssgLvalueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A readonly field cannot be assigned to (except in a constructor or a variable initializer).
        /// </summary>
        internal static string AssgReadonly {
            get {
                return ResourceManager.GetString("AssgReadonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of readonly field &apos;{0}&apos; cannot be modified (except in a constructor or a variable initializer).
        /// </summary>
        internal static string AssgReadonly2 {
            get {
                return ResourceManager.GetString("AssgReadonly2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign to &apos;{0}&apos; because it is read-only.
        /// </summary>
        internal static string AssgReadonlyLocal {
            get {
                return ResourceManager.GetString("AssgReadonlyLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign to &apos;{0}&apos; because it is a &apos;{1}&apos;.
        /// </summary>
        internal static string AssgReadonlyLocalCause {
            get {
                return ResourceManager.GetString("AssgReadonlyLocalCause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property or indexer &apos;{0}&apos; cannot be assigned to -- it is read only.
        /// </summary>
        internal static string AssgReadonlyProp {
            get {
                return ResourceManager.GetString("AssgReadonlyProp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A static readonly field cannot be assigned to (except in a static constructor or a variable initializer).
        /// </summary>
        internal static string AssgReadonlyStatic {
            get {
                return ResourceManager.GetString("AssgReadonlyStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of static readonly field &apos;{0}&apos; cannot be assigned to (except in a static constructor or a variable initializer).
        /// </summary>
        internal static string AssgReadonlyStatic2 {
            get {
                return ResourceManager.GetString("AssgReadonlyStatic2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is inaccessible due to its protection level.
        /// </summary>
        internal static string BadAccess {
            get {
                return ResourceManager.GetString("BadAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No overload for method &apos;{0}&apos; takes &apos;{1}&apos; arguments.
        /// </summary>
        internal static string BadArgCount {
            get {
                return ResourceManager.GetString("BadArgCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; should not be passed with the &apos;{1}&apos; keyword.
        /// </summary>
        internal static string BadArgExtraRef {
            get {
                return ResourceManager.GetString("BadArgExtraRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; must be passed with the &apos;{1}&apos; keyword.
        /// </summary>
        internal static string BadArgRef {
            get {
                return ResourceManager.GetString("BadArgRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos;: cannot convert from &apos;{1}&apos; to &apos;{2}&apos;.
        /// </summary>
        internal static string BadArgType {
            get {
                return ResourceManager.GetString("BadArgType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded method match for &apos;{0}&apos; has some invalid arguments.
        /// </summary>
        internal static string BadArgTypes {
            get {
                return ResourceManager.GetString("BadArgTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded Add method &apos;{0}&apos; for the collection initializer has some invalid arguments.
        /// </summary>
        internal static string BadArgTypesForCollectionAdd {
            get {
                return ResourceManager.GetString("BadArgTypesForCollectionAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using the generic {1} &apos;{0}&apos; requires &apos;{2}&apos; type arguments.
        /// </summary>
        internal static string BadArity {
            get {
                return ResourceManager.GetString("BadArity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; cannot be applied to operands of type &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string BadBinaryOps {
            get {
                return ResourceManager.GetString("BadBinaryOps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to be applicable as a short circuit operator a user-defined logical operator (&apos;{0}&apos;) must have the same return type as the type of its 2 parameters.
        /// </summary>
        internal static string BadBoolOp {
            get {
                return ResourceManager.GetString("BadBoolOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The right hand side of a fixed statement assignment may not be a cast expression.
        /// </summary>
        internal static string BadCastInFixed {
            get {
                return ResourceManager.GetString("BadCastInFixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not contain a constructor that takes &apos;{1}&apos; arguments.
        /// </summary>
        internal static string BadCtorArgCount {
            get {
                return ResourceManager.GetString("BadCtorArgCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delegate &apos;{0}&apos; does not take &apos;{1}&apos; arguments.
        /// </summary>
        internal static string BadDelArgCount {
            get {
                return ResourceManager.GetString("BadDelArgCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delegate &apos;{0}&apos; has some invalid arguments.
        /// </summary>
        internal static string BadDelArgTypes {
            get {
                return ResourceManager.GetString("BadDelArgTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The delegate &apos;{0}&apos; does not have a valid constructor.
        /// </summary>
        internal static string BadDelegateConstructor {
            get {
                return ResourceManager.GetString("BadDelegateConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not contain a definition for &apos;{1}&apos; and the best extension method overload &apos;{2}&apos; has some invalid arguments.
        /// </summary>
        internal static string BadExtensionArgTypes {
            get {
                return ResourceManager.GetString("BadExtensionArgTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong number of indices inside []; expected &apos;{0}&apos;.
        /// </summary>
        internal static string BadIndexCount {
            get {
                return ResourceManager.GetString("BadIndexCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot apply indexing with [] to an expression of type &apos;{0}&apos;.
        /// </summary>
        internal static string BadIndexLHS {
            get {
                return ResourceManager.GetString("BadIndexLHS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance argument: cannot convert from &apos;{0}&apos; to &apos;{1}&apos;.
        /// </summary>
        internal static string BadInstanceArgType {
            get {
                return ResourceManager.GetString("BadInstanceArgType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overload for &apos;{0}&apos; does not have a parameter named &apos;{1}&apos;.
        /// </summary>
        internal static string BadNamedArgument {
            get {
                return ResourceManager.GetString("BadNamedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The delegate &apos;{0}&apos; does not have a parameter named &apos;{1}&apos;.
        /// </summary>
        internal static string BadNamedArgumentForDelegateInvoke {
            get {
                return ResourceManager.GetString("BadNamedArgumentForDelegateInvoke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access protected member &apos;{0}&apos; via a qualifier of type &apos;{1}&apos;; the qualifier must be of type &apos;{2}&apos; (or derived from it).
        /// </summary>
        internal static string BadProtectedAccess {
            get {
                return ResourceManager.GetString("BadProtectedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{1} {0}&apos; has the wrong return type.
        /// </summary>
        internal static string BadRetType {
            get {
                return ResourceManager.GetString("BadRetType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; may not be used as a type argument.
        /// </summary>
        internal static string BadTypeArgument {
            get {
                return ResourceManager.GetString("BadTypeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; cannot be applied to operand of type &apos;{1}&apos;.
        /// </summary>
        internal static string BadUnaryOp {
            get {
                return ResourceManager.GetString("BadUnaryOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter &apos;{0}&apos; inherits conflicting constraints &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string BaseConstraintConflict {
            get {
                return ResourceManager.GetString("BaseConstraintConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot perform member assignment on a null reference.
        /// </summary>
        internal static string BindBinaryAssignmentFailedNullReference {
            get {
                return ResourceManager.GetString("BindBinaryAssignmentFailedNullReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary operators cannot be invoked with one argument.
        /// </summary>
        internal static string BindBinaryAssignmentRequireTwoArguments {
            get {
                return ResourceManager.GetString("BindBinaryAssignmentRequireTwoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary operators must be invoked with two arguments.
        /// </summary>
        internal static string BindBinaryOperatorRequireTwoArguments {
            get {
                return ResourceManager.GetString("BindBinaryOperatorRequireTwoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overload resolution failed.
        /// </summary>
        internal static string BindCallFailedOverloadResolution {
            get {
                return ResourceManager.GetString("BindCallFailedOverloadResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot dynamically invoke method &apos;{0}&apos; because it has a Conditional attribute.
        /// </summary>
        internal static string BindCallToConditionalMethod {
            get {
                return ResourceManager.GetString("BindCallToConditionalMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Explicit conversion takes exactly one argument.
        /// </summary>
        internal static string BindExplicitConversionRequireOneArgument {
            get {
                return ResourceManager.GetString("BindExplicitConversionRequireOneArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicit conversion takes exactly one argument.
        /// </summary>
        internal static string BindImplicitConversionRequireOneArgument {
            get {
                return ResourceManager.GetString("BindImplicitConversionRequireOneArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot invoke a non-delegate type.
        /// </summary>
        internal static string BindInvokeFailedNonDelegate {
            get {
                return ResourceManager.GetString("BindInvokeFailedNonDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event &apos;{0}&apos; can only appear on the left hand side of +.
        /// </summary>
        internal static string BindPropertyFailedEvent {
            get {
                return ResourceManager.GetString("BindPropertyFailedEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; is bound to a method and cannot be used like a property.
        /// </summary>
        internal static string BindPropertyFailedMethodGroup {
            get {
                return ResourceManager.GetString("BindPropertyFailedMethodGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot bind call with no calling object.
        /// </summary>
        internal static string BindRequireArguments {
            get {
                return ResourceManager.GetString("BindRequireArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not supported by the language.
        /// </summary>
        internal static string BindToBogus {
            get {
                return ResourceManager.GetString("BindToBogus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property, indexer, or event &apos;{0}&apos; is not supported by the language; try directly calling accessor method &apos;{1}&apos;.
        /// </summary>
        internal static string BindToBogusProp1 {
            get {
                return ResourceManager.GetString("BindToBogusProp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property, indexer, or event &apos;{0}&apos; is not supported by the language; try directly calling accessor methods &apos;{1}&apos; or &apos;{2}&apos;.
        /// </summary>
        internal static string BindToBogusProp2 {
            get {
                return ResourceManager.GetString("BindToBogusProp2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot implicitly convert type &apos;void&apos; to &apos;object&apos;.
        /// </summary>
        internal static string BindToVoidMethodButExpectResult {
            get {
                return ResourceManager.GetString("BindToVoidMethodButExpectResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unary operators must be invoked with one argument.
        /// </summary>
        internal static string BindUnaryOperatorRequireOneArgument {
            get {
                return ResourceManager.GetString("BindUnaryOperatorRequireOneArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is a type not supported by the language.
        /// </summary>
        internal static string BogusType {
            get {
                return ResourceManager.GetString("BogusType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not directly call your base class Finalize method. It is called automatically from your destructor..
        /// </summary>
        internal static string CallingBaseFinalizeDeprecated {
            get {
                return ResourceManager.GetString("CallingBaseFinalizeDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destructors and object.Finalize cannot be called directly. Consider calling IDisposable.Dispose if available..
        /// </summary>
        internal static string CallingFinalizeDepracated {
            get {
                return ResourceManager.GetString("CallingFinalizeDepracated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot explicitly call operator or accessor.
        /// </summary>
        internal static string CantCallSpecialMethod {
            get {
                return ResourceManager.GetString("CantCallSpecialMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type arguments for method &apos;{0}&apos; cannot be inferred from the usage. Try specifying the type arguments explicitly..
        /// </summary>
        internal static string CantInferMethTypeArgs {
            get {
                return ResourceManager.GetString("CantInferMethTypeArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation overflows at compile time in checked mode.
        /// </summary>
        internal static string CheckedOverflow {
            get {
                return ResourceManager.GetString("CheckedOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular constraint dependency involving &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        internal static string CircularConstraint {
            get {
                return ResourceManager.GetString("CircularConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constant value &apos;{0}&apos; cannot be converted to a &apos;{1}&apos;.
        /// </summary>
        internal static string ConstOutOfRange {
            get {
                return ResourceManager.GetString("ConstOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constant value &apos;{0}&apos; cannot be converted to a &apos;{1}&apos; (use &apos;unchecked&apos; syntax to override).
        /// </summary>
        internal static string ConstOutOfRangeChecked {
            get {
                return ResourceManager.GetString("ConstOutOfRangeChecked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert to static type &apos;{0}&apos;.
        /// </summary>
        internal static string ConvertToStaticClass {
            get {
                return ResourceManager.GetString("ConvertToStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter &apos;{1}&apos; has the &apos;struct&apos; constraint so &apos;{1}&apos; cannot be used as a constraint for &apos;{0}&apos;.
        /// </summary>
        internal static string ConWithValCon {
            get {
                return ResourceManager.GetString("ConWithValCon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot bind delegate to &apos;{0}&apos; because it is a member of &apos;System.Nullable&lt;T&gt;&apos;.
        /// </summary>
        internal static string DelegateOnNullable {
            get {
                return ResourceManager.GetString("DelegateOnNullable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named argument &apos;{0}&apos; cannot be specified multiple times.
        /// </summary>
        internal static string DuplicateNamedArgument {
            get {
                return ResourceManager.GetString("DuplicateNamedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A field initializer cannot reference the non-static field, method, or property &apos;{0}&apos;.
        /// </summary>
        internal static string FieldInitRefNonstatic {
            get {
                return ResourceManager.GetString("FieldInitRefNonstatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot use the fixed statement to take the address of an already fixed expression.
        /// </summary>
        internal static string FixedNotNeeded {
            get {
                return ResourceManager.GetString("FixedNotNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: static types cannot be used as type arguments.
        /// </summary>
        internal static string GenericArgIsStaticClass {
            get {
                return ResourceManager.GetString("GenericArgIsStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{3}&apos; cannot be used as type parameter &apos;{2}&apos; in the generic type or method &apos;{0}&apos;. The nullable type &apos;{3}&apos; does not satisfy the constraint of &apos;{1}&apos;..
        /// </summary>
        internal static string GenericConstraintNotSatisfiedNullableEnum {
            get {
                return ResourceManager.GetString("GenericConstraintNotSatisfiedNullableEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{3}&apos; cannot be used as type parameter &apos;{2}&apos; in the generic type or method &apos;{0}&apos;. The nullable type &apos;{3}&apos; does not satisfy the constraint of &apos;{1}&apos;. Nullable types can not satisfy any interface constraints..
        /// </summary>
        internal static string GenericConstraintNotSatisfiedNullableInterface {
            get {
                return ResourceManager.GetString("GenericConstraintNotSatisfiedNullableInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{3}&apos; cannot be used as type parameter &apos;{2}&apos; in the generic type or method &apos;{0}&apos;. There is no implicit reference conversion from &apos;{3}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string GenericConstraintNotSatisfiedRefType {
            get {
                return ResourceManager.GetString("GenericConstraintNotSatisfiedRefType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{3}&apos; cannot be used as type parameter &apos;{2}&apos; in the generic type or method &apos;{0}&apos;. There is no boxing conversion or type parameter conversion from &apos;{3}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string GenericConstraintNotSatisfiedTyVar {
            get {
                return ResourceManager.GetString("GenericConstraintNotSatisfiedTyVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{3}&apos; cannot be used as type parameter &apos;{2}&apos; in the generic type or method &apos;{0}&apos;. There is no boxing conversion from &apos;{3}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string GenericConstraintNotSatisfiedValType {
            get {
                return ResourceManager.GetString("GenericConstraintNotSatisfiedValType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The non-generic {1} &apos;{0}&apos; cannot be used with type arguments.
        /// </summary>
        internal static string HasNoTypeVars {
            get {
                return ResourceManager.GetString("HasNoTypeVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property or indexer &apos;{0}&apos; cannot be used in this context because the get accessor is inaccessible.
        /// </summary>
        internal static string InaccessibleGetter {
            get {
                return ResourceManager.GetString("InaccessibleGetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property or indexer &apos;{0}&apos; cannot be used in this context because the set accessor is inaccessible.
        /// </summary>
        internal static string InaccessibleSetter {
            get {
                return ResourceManager.GetString("InaccessibleSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operand of an increment or decrement operator must be a variable, property or indexer.
        /// </summary>
        internal static string IncrementLvalueExpected {
            get {
                return ResourceManager.GetString("IncrementLvalueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded method match &apos;{0}&apos; for the collection initializer element cannot be used. Collection initializer &apos;Add&apos; methods cannot have ref or out parameters..
        /// </summary>
        internal static string InitializerAddHasParamModifiers {
            get {
                return ResourceManager.GetString("InitializerAddHasParamModifiers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Division by constant zero.
        /// </summary>
        internal static string IntDivByZero {
            get {
                return ResourceManager.GetString("IntDivByZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected exception occurred while binding a dynamic operation.
        /// </summary>
        internal static string InternalCompilerError {
            get {
                return ResourceManager.GetString("InternalCompilerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Literal of type double cannot be implicitly converted to type &apos;{1}&apos;; use an &apos;{0}&apos; suffix to create a literal of this type.
        /// </summary>
        internal static string LiteralDoubleCast {
            get {
                return ResourceManager.GetString("LiteralDoubleCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot take the address of, get the size of, or declare a pointer to a managed type (&apos;{0}&apos;).
        /// </summary>
        internal static string ManagedAddr {
            get {
                return ResourceManager.GetString("ManagedAddr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No overload for &apos;{0}&apos; matches delegate &apos;{1}&apos;.
        /// </summary>
        internal static string MethDelegateMismatch {
            get {
                return ResourceManager.GetString("MethDelegateMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert method group &apos;{0}&apos; to non-delegate type &apos;{1}&apos;. Did you intend to invoke the method?.
        /// </summary>
        internal static string MethGrpToNonDel {
            get {
                return ResourceManager.GetString("MethGrpToNonDel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing compiler required member &apos;{0}.{1}&apos;.
        /// </summary>
        internal static string MissingPredefinedMember {
            get {
                return ResourceManager.GetString("MissingPredefinedMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type (&apos;{0}&apos;) must contain declarations of operator true and operator false.
        /// </summary>
        internal static string MustHaveOpTF {
            get {
                return ResourceManager.GetString("MustHaveOpTF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named argument specifications must appear after all fixed arguments have been specified.
        /// </summary>
        internal static string NamedArgumentSpecificationBeforeFixedArgument {
            get {
                return ResourceManager.GetString("NamedArgumentSpecificationBeforeFixedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named argument &apos;{0}&apos; specifies a parameter for which a positional argument has already been given.
        /// </summary>
        internal static string NamedArgumentUsedInPositional {
            get {
                return ResourceManager.GetString("NamedArgumentUsedInPositional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{2}&apos; must be a non-abstract type with a public parameterless constructor in order to use it as parameter &apos;{1}&apos; in the generic type or method &apos;{0}&apos;.
        /// </summary>
        internal static string NewConstraintNotSatisfied {
            get {
                return ResourceManager.GetString("NewConstraintNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; has no constructors defined.
        /// </summary>
        internal static string NoConstructors {
            get {
                return ResourceManager.GetString("NoConstructors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert type &apos;{0}&apos; to &apos;{1}&apos;.
        /// </summary>
        internal static string NoExplicitConv {
            get {
                return ResourceManager.GetString("NoExplicitConv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot implicitly convert type &apos;{0}&apos; to &apos;{1}&apos;.
        /// </summary>
        internal static string NoImplicitConv {
            get {
                return ResourceManager.GetString("NoImplicitConv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot implicitly convert type &apos;{0}&apos; to &apos;{1}&apos;. An explicit conversion exists (are you missing a cast?).
        /// </summary>
        internal static string NoImplicitConvCast {
            get {
                return ResourceManager.GetString("NoImplicitConvCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-invocable member &apos;{0}&apos; cannot be used like a method..
        /// </summary>
        internal static string NonInvocableMemberCalled {
            get {
                return ResourceManager.GetString("NonInvocableMemberCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not contain a definition for &apos;{1}&apos;.
        /// </summary>
        internal static string NoSuchMember {
            get {
                return ResourceManager.GetString("NoSuchMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not contain a definition for &apos;{1}&apos; and no extension method &apos;{1}&apos; accepting a first argument of type &apos;{0}&apos; could be found (are you missing a using directive or an assembly reference?).
        /// </summary>
        internal static string NoSuchMemberOrExtension {
            get {
                return ResourceManager.GetString("NoSuchMemberOrExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot perform runtime binding on a null reference.
        /// </summary>
        internal static string NullReferenceOnMemberException {
            get {
                return ResourceManager.GetString("NullReferenceOnMemberException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &apos;{0}&apos; cannot be accessed with an instance reference; qualify it with a type name instead.
        /// </summary>
        internal static string ObjectProhibited {
            get {
                return ResourceManager.GetString("ObjectProhibited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object reference is required for the non-static field, method, or property &apos;{0}&apos;.
        /// </summary>
        internal static string ObjectRequired {
            get {
                return ResourceManager.GetString("ObjectRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create delegate from method &apos;{0}&apos; because it is a partial method without an implementing declaration.
        /// </summary>
        internal static string PartialMethodToDelegate {
            get {
                return ResourceManager.GetString("PartialMethodToDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Predefined type &apos;{0}&apos; is declared incorrectly.
        /// </summary>
        internal static string PredefinedTypeBadType {
            get {
                return ResourceManager.GetString("PredefinedTypeBadType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Predefined type &apos;{0}&apos; is not defined or imported.
        /// </summary>
        internal static string PredefinedTypeNotFound {
            get {
                return ResourceManager.GetString("PredefinedTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property or indexer &apos;{0}&apos; cannot be used in this context because it lacks the get accessor.
        /// </summary>
        internal static string PropertyLacksGet {
            get {
                return ResourceManager.GetString("PropertyLacksGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{2}&apos; must be a reference type in order to use it as parameter &apos;{1}&apos; in the generic type or method &apos;{0}&apos;.
        /// </summary>
        internal static string RefConstraintNotSatisfied {
            get {
                return ResourceManager.GetString("RefConstraintNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A ref or out argument must be an assignable variable.
        /// </summary>
        internal static string RefLvalueExpected {
            get {
                return ResourceManager.GetString("RefLvalueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A property or indexer may not be passed as an out or ref parameter.
        /// </summary>
        internal static string RefProperty {
            get {
                return ResourceManager.GetString("RefProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A readonly field cannot be passed ref or out (except in a constructor).
        /// </summary>
        internal static string RefReadonly {
            get {
                return ResourceManager.GetString("RefReadonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of readonly field &apos;{0}&apos; cannot be passed ref or out (except in a constructor).
        /// </summary>
        internal static string RefReadonly2 {
            get {
                return ResourceManager.GetString("RefReadonly2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot pass &apos;{0}&apos; as a ref or out argument because it is read-only.
        /// </summary>
        internal static string RefReadonlyLocal {
            get {
                return ResourceManager.GetString("RefReadonlyLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot pass &apos;{0}&apos; as a ref or out argument because it is a &apos;{1}&apos;.
        /// </summary>
        internal static string RefReadonlyLocalCause {
            get {
                return ResourceManager.GetString("RefReadonlyLocalCause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A static readonly field cannot be passed ref or out (except in a static constructor).
        /// </summary>
        internal static string RefReadonlyStatic {
            get {
                return ResourceManager.GetString("RefReadonlyStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of static readonly field &apos;{0}&apos; cannot be passed ref or out (except in a static constructor).
        /// </summary>
        internal static string RefReadonlyStatic2 {
            get {
                return ResourceManager.GetString("RefReadonlyStatic2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot modify the return value of &apos;{0}&apos; because it is not a variable.
        /// </summary>
        internal static string ReturnNotLValue {
            get {
                return ResourceManager.GetString("ReturnNotLValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not have a predefined size, therefore sizeof can only be used in an unsafe context (consider using System.Runtime.InteropServices.Marshal.SizeOf).
        /// </summary>
        internal static string SizeofUnsafe {
            get {
                return ResourceManager.GetString("SizeofUnsafe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anonymous methods, lambda expressions, and query expressions inside structs cannot access instance members of &apos;this&apos;. Consider copying &apos;this&apos; to a local variable outside the anonymous method, lambda expression or query expression and using the local instead..
        /// </summary>
        internal static string ThisStructNotInAnonMeth {
            get {
                return ResourceManager.GetString("ThisStructNotInAnonMeth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {1} &apos;{0}&apos; cannot be used with type arguments.
        /// </summary>
        internal static string TypeArgsNotAllowed {
            get {
                return ResourceManager.GetString("TypeArgsNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert null to type parameter &apos;{0}&apos; because it could be a non-nullable value type. Consider using &apos;default({0})&apos; instead..
        /// </summary>
        internal static string TypeVarCantBeNull {
            get {
                return ResourceManager.GetString("TypeVarCantBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot implement both &apos;{1}&apos; and &apos;{2}&apos; because they may unify for some type parameter substitutions.
        /// </summary>
        internal static string UnifyingInterfaceInstantiations {
            get {
                return ResourceManager.GetString("UnifyingInterfaceInstantiations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dynamic calls cannot be used in conjunction with pointers.
        /// </summary>
        internal static string UnsafeNeeded {
            get {
                return ResourceManager.GetString("UnsafeNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{2}&apos; must be a non-nullable value type in order to use it as parameter &apos;{1}&apos; in the generic type or method &apos;{0}&apos;.
        /// </summary>
        internal static string ValConstraintNotSatisfied {
            get {
                return ResourceManager.GetString("ValConstraintNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert null to &apos;{0}&apos; because it is a non-nullable value type.
        /// </summary>
        internal static string ValueCantBeNull {
            get {
                return ResourceManager.GetString("ValueCantBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension methods &apos;{0}&apos; defined on value type &apos;{1}&apos; cannot be used to create delegates.
        /// </summary>
        internal static string ValueTypeExtDelegate {
            get {
                return ResourceManager.GetString("ValueTypeExtDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access a non-static member of outer type &apos;{0}&apos; via nested type &apos;{1}&apos;.
        /// </summary>
        internal static string WrongNestedThis {
            get {
                return ResourceManager.GetString("WrongNestedThis", resourceCulture);
            }
        }
    }
}
