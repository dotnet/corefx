<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arg_EmptyOrNullArray" xml:space="preserve">
    <value>Array may not be empty or null.</value>
  </data>
  <data name="Arg_EmptyOrNullString" xml:space="preserve">
    <value>String cannot be empty or null.</value>
  </data>
  <data name="Arg_EnumIllegalVal" xml:space="preserve">
    <value>Illegal enum value: {0}.</value>
  </data>
  <data name="Arg_InvalidHandle" xml:space="preserve">
    <value>Invalid handle.</value>
  </data>
  <data name="Arg_OutOfRange_NeedNonNegNum" xml:space="preserve">
    <value>Non-negative number required.</value>
  </data>
  <data name="Arg_RankMultiDimNotSupported" xml:space="preserve">
    <value>Only single dimensional arrays are supported for the requested action.</value>
  </data>
  <data name="Arg_RemoveArgNotFound" xml:space="preserve">
    <value>Cannot remove the specified item because it was not found in the specified Collection.</value>
  </data>
  <data name="Argument_InvalidFlag" xml:space="preserve">
    <value>Value of flags is invalid.</value>
  </data>
  <data name="Argument_InvalidNameType" xml:space="preserve">
    <value>The value of 'nameType' is invalid.</value>
  </data>
  <data name="Argument_InvalidOffLen" xml:space="preserve">
    <value>Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.</value>
  </data>
  <data name="Argument_InvalidOidValue" xml:space="preserve">
    <value>The OID value was invalid.</value>
  </data>
  <data name="ArgumentOutOfRange_Index" xml:space="preserve">
    <value>Index was out of range. Must be non-negative and less than the size of the collection.</value>
  </data>
  <data name="Chain_NoPolicyMatch" xml:space="preserve">
    <value>The certificate has invalid policy.</value>
  </data>
  <data name="Cryptography_InvalidContextHandle" xml:space="preserve">
    <value>The chain context handle is invalid.</value>
  </data>
  <data name="Cryptography_InvalidHandle" xml:space="preserve">
    <value>{0} is an invalid handle.</value>
  </data>
  <data name="Cryptography_InvalidOID" xml:space="preserve">
    <value>Object identifier (OID) is unknown.</value>
  </data>
  <data name="Cryptography_InvalidStoreHandle" xml:space="preserve">
    <value>The store handle is invalid.</value>
  </data>
  <data name="Cryptography_Unix_X509_MachineStoresReadOnly" xml:space="preserve">
    <value>Unix LocalMachine X509Stores are read-only for all users.</value>
  </data>
  <data name="Cryptography_Unix_X509_MachineStoresRootOnly" xml:space="preserve">
    <value>Unix LocalMachine X509Store is limited to the Root and CertificateAuthority stores.</value>
  </data>
  <data name="Cryptography_Unix_X509_PropertyNotSettable" xml:space="preserve">
      <value>The {0} value cannot be set on Unix.</value>
  </data>
  <data name="Cryptography_Unix_X509_SerializedExport" xml:space="preserve">
    <value>X509ContentType.SerializedCert and X509ContentType.SerializedStore are not supported on Unix.</value>
  </data>
  <data name="Cryptography_X509_ExportFailed" xml:space="preserve">
    <value>The certificate export operation failed.</value>
  </data>
  <data name="Cryptography_X509_ExtensionMismatch" xml:space="preserve">
    <value>The parameter should be an X509Extension.</value>
  </data>
  <data name="Cryptography_X509_InvalidContentType" xml:space="preserve">
    <value>Invalid content type.</value>
  </data>
  <data name="Cryptography_X509_InvalidFindType" xml:space="preserve">
    <value>Invalid find type.</value>
  </data>
  <data name="Cryptography_X509_InvalidFindValue" xml:space="preserve">
    <value>Invalid find value.</value>
  </data>
  <data name="Cryptography_X509_KeyMismatch" xml:space="preserve">
    <value>The public key of the certificate does not match the value specified.</value>
  </data>
  <data name="Cryptography_X509_PKCS7_NoSigner" xml:space="preserve">
    <value>Cannot find the original signer.</value>
  </data>
  <data name="Cryptography_X509_StoreNoFileAvailable" xml:space="preserve">
    <value>The X509 certificate could not be added to the store because all candidate file names were in use.</value>
  </data>
  <data name="Cryptography_X509_StoreNotFound" xml:space="preserve">
    <value>The specified X509 certificate store does not exist.</value>
  </data>
  <data name="Cryptography_X509_StoreNotOpen" xml:space="preserve">
    <value>The X509 certificate store has not been opened.</value>
  </data>
  <data name="Cryptography_X509_StoreReadOnly" xml:space="preserve">
    <value>The X509 certificate store is read-only.</value>
  </data>
  <data name="InvalidOperation_EnumNotStarted" xml:space="preserve">
    <value>Enumeration has not started.  Call MoveNext.</value>
  </data>
  <data name="InvalidPublicKeyInX509" xml:space="preserve">
    <value>Cannot obtain public key from X509Certificate. Public Key ASN.1 is in an unexpected format.</value>
  </data>
  <data name="NotSupported_ECDsa_Csp" xml:space="preserve">
    <value>CryptoApi ECDsa keys are not supported.</value>
  </data>
  <data name="NotSupported_Export_MultiplePrivateCerts" xml:space="preserve">
    <value>Only one certificate with a private key can be exported in a single PFX.</value>
  </data>
  <data name="NotSupported_InvalidKeyImpl" xml:space="preserve">
    <value>Only asymmetric keys that implement ICspAsymmetricAlgorithm are supported.</value>
  </data>
  <data name="NotSupported_KeyAlgorithm" xml:space="preserve">
    <value>The certificate key algorithm is not supported.</value>
  </data>
  <data name="NotSupported_LegacyBasicConstraints" xml:space="preserve">
    <value>The X509 Basic Constraints extension with OID 2.5.29.10 is not supported.</value>
  </data>
  <data name="PersistedFiles_NoHomeDirectory" xml:space="preserve">
    <value>The home directory of the current user could not be determined.</value>
  </data>
  <data name="Security_InvalidValue" xml:space="preserve">
    <value>The {0} value was invalid.</value>
  </data>
  <data name="Unknown_Error" xml:space="preserve">
    <value>Unknown error.</value>
  </data>
  <data name="Cryptography_FileStatusError" xml:space="preserve">
    <value>Unable to get file status.</value>
  </data>
  <data name="Cryptography_InvalidDirectoryPermissions" xml:space="preserve">
    <value>Invalid directory permissions. The directory '{0}' must be readable, writable and executable by the owner. It must not be readable, writable or executable by anyone other than the owner.</value>
  </data>
  <data name="Cryptography_OwnerNotCurrentUser" xml:space="preserve">
    <value>The owner of '{0}' is not the current user.</value>
  </data>
  <data name="Cryptography_InvalidFilePermissions" xml:space="preserve">
    <value>Invalid file permissions. The file '{0}' must readable and writable by the current owner and by no one else, and the permissions could not be changed to meet that criteria.</value>
  </data>
  <data name="Cryptography_Invalid_X500Name" xml:space="preserve">
    <value>The string contains an invalid X500 name attribute key, oid, value or delimiter.</value>
  </data>
  <data name="Cryptography_Invalid_IA5String" xml:space="preserve">
    <value>The string contains a character not in the 7 bit ASCII character set.</value>
  </data>
</root>
