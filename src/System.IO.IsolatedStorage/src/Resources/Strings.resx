<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IsolatedStorage_StoreNotOpen" xml:space="preserve">
    <value>Store must be open for this operation.</value>
  </data>
  <data name="IsolatedStorage_OldQuotaLarger" xml:space="preserve">
    <value>The new quota must be larger than the old quota.</value>
  </data>
  <data name="IsolatedStorage_Operation_ISFS" xml:space="preserve">
    <value>Operation not permitted on IsolatedStorageFileStream.</value>
  </data>
  <data name="IsolatedStorage_Path" xml:space="preserve">
    <value>Path must be a valid file name.</value>
  </data>
  <data name="IsolatedStorage_FileOpenMode" xml:space="preserve">
    <value>Invalid mode, see System.IO.FileMode.</value>
  </data>
  <data name="IsolatedStorage_Operation" xml:space="preserve">
    <value>Operation not permitted.</value>
  </data>
  <data name="IsolatedStorage_SeekOrigin" xml:space="preserve">
    <value>Invalid origin, see System.IO.SeekOrigin.</value>
  </data>
  <data name="IsolatedStorage_DeleteFile" xml:space="preserve">
    <value>Unable to delete file.</value>
  </data>
  <data name="IsolatedStorage_CreateDirectory" xml:space="preserve">
    <value>Unable to create directory.</value>
  </data>
  <data name="IsolatedStorage_DeleteDirectory" xml:space="preserve">
    <value>Unable to delete, directory not empty or does not exist.</value>
  </data>
  <data name="IsolatedStorage_Exception" xml:space="preserve">
    <value>An error occurred while accessing IsolatedStorage.</value>
  </data>
  <data name="IsolatedStorage_Init" xml:space="preserve">
    <value>Initialization failed.</value>
  </data>
  <data name="IsolatedStorage_QuotaIsUndefined" xml:space="preserve">
    <value>{0} is not defined for this store. An operation was performed that requires access to {0}. Stores obtained using enumeration APIs do not have a well-defined {0}, since partial evidence is used to open the store.</value>
  </data>
  <data name="IsolatedStorage_NotValidOnDesktop" xml:space="preserve">
    <value>The Site scope is currently not supported.</value>
  </data>
  <data name="Argument_EmptyPath" xml:space="preserve">
    <value>Empty path name is not legal.</value>
  </data>
  <data name="ArgumentNull_Path" xml:space="preserve">
    <value>Path cannot be null.</value>
  </data>
  <data name="ArgumentOutOfRange_NeedNonNegNum" xml:space="preserve">
    <value>Non-negative number required.</value>
  </data>
  <data name="Argument_AbsolutePathRequired" xml:space="preserve">
    <value>Absolute path information is required.</value>
  </data>
  <data name="Argument_PathFormatNotSupported" xml:space="preserve">
    <value>The given path's format is not supported.</value>
  </data>
  <data name="PathNotFound_Path" xml:space="preserve">
    <value>Could not find a part of the path '{0}'.</value>
  </data>
  <data name="PathNotFound_NoPathName" xml:space="preserve">
    <value>Could not find a part of the path.</value>
  </data>
  <data name="PathTooLong" xml:space="preserve">
    <value>The specified path, file name, or both are too long. The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>Unable to find the specified file.</value>
  </data>
  <data name="FileNotFound_FileName" xml:space="preserve">
    <value>Could not find file '{0}'.</value>
  </data>
  <data name="IO_NoPermissionToDirectoryName" xml:space="preserve">
    <value>&lt;Path discovery permission to the specified directory was denied.&gt;</value>
  </data>
  <data name="IO_AlreadyExists_Name" xml:space="preserve">
    <value>Cannot create '{0}' because a file or directory with the same name already exists.</value>
  </data>
  <data name="IO_SharingViolation_File" xml:space="preserve">
    <value>The process cannot access the file '{0}' because it is being used by another process.</value>
  </data>
  <data name="IO_SharingViolation_NoFileName" xml:space="preserve">
    <value>The process cannot access the file because it is being used by another process.</value>
  </data>
  <data name="IO_FileExists_Name" xml:space="preserve">
    <value>The file '{0}' already exists.</value>
  </data>
  <data name="UnauthorizedAccess_IODenied_Path" xml:space="preserve">
    <value>Access to the path '{0}' is denied.</value>
  </data>
  <data name="UnauthorizedAccess_IODenied_NoPathName" xml:space="preserve">
    <value>Access to the path is denied.</value>
  </data>
  <data name="DriveNotFound_Drive" xml:space="preserve">
    <value>Could not find the drive '{0}'. The drive might not be ready or might not be mapped.</value>
  </data>
  <data name="UnknownError_Num" xml:space="preserve">
    <value>Unknown error '{0}'.</value>
  </data>
  <data name="IsolatedStorage_ApplicationMissingIdentity" xml:space="preserve">
    <value>Unable to determine application identity of the caller.</value>
  </data>
  <data name="IsolatedStorage_ApplicationNoEvidence" xml:space="preserve">
    <value>Unable to determine identity of application.</value>
  </data>
  <data name="IsolatedStorage_ApplicationUndefined" xml:space="preserve">
    <value>Application cannot be determined on an Assembly or Domain store.</value>
  </data>
  <data name="IsolatedStorage_AssemblyMissingIdentity" xml:space="preserve">
    <value>Unable to determine assembly of the caller.</value>
  </data>
  <data name="IsolatedStorage_AssemblyNoEvidence" xml:space="preserve">
    <value>Unable to determine identity of assembly.</value>
  </data>
  <data name="IsolatedStorage_AssemblyUndefined" xml:space="preserve">
    <value>Assembly cannot be determined for an Application store.</value>
  </data>
  <data name="IsolatedStorage_CurrentSizeUndefined" xml:space="preserve">
    <value>Current size cannot be determined for this store.</value>
  </data>
  <data name="IsolatedStorage_DeleteDirectories" xml:space="preserve">
    <value>Unable to delete; directory or files in the directory could be in use.</value>
  </data>
  <data name="IsolatedStorage_DomainMissingIdentity" xml:space="preserve">
    <value>Unable to determine domain of the caller.</value>
  </data>
  <data name="IsolatedStorage_DomainNoEvidence" xml:space="preserve">
    <value>Unable to determine the identity of domain.</value>
  </data>
  <data name="IsolatedStorage_DomainUndefined" xml:space="preserve">
    <value>Domain cannot be determined on an Assembly or Application store.</value>
  </data>
  <data name="IsolatedStorage_OnlyIncreaseUserApplicationStore" xml:space="preserve">
    <value>Increasing the quota of this scope is not supported.  Only the user application scope’s quota can be increased.</value>
  </data>
  <data name="IsolatedStorage_Scope_Invalid" xml:space="preserve">
    <value>Invalid scope.</value>
  </data>
  <data name="IsolatedStorage_Scope_U_R_M" xml:space="preserve">
    <value>Invalid scope, expected User, User|Roaming or Machine.</value>
  </data>
</root>