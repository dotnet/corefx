<Project DefaultTargets="Build">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
  <ItemGroup>
    <ProjectReference Include="..\ref\System.Runtime.WindowsRuntime.UI.Xaml.csproj">
      <SupportedFramework>net461;netcoreapp2.0;uap10.0.16299;$(AllXamarinFrameworks)</SupportedFramework>
    </ProjectReference>
    <ProjectReference Include="..\src\System.Runtime.WindowsRuntime.UI.Xaml.csproj"/>

    <HarvestIncludePaths Include="ref/netcore50" />
    <HarvestIncludePaths Include="ref/netstandard1.1">
      <SupportedFramework>net45;netcore45;wpa81;netcoreapp1.0</SupportedFramework>
    </HarvestIncludePaths>

    <!-- we've previously shipped higer netstandard reference assembly version,
     this is OK since both of these frameworks will unify down to the inbox version -->
    <ValidatePackageSuppression Include="PermitInboxRevsion">
      <Value>.NETCore,Version=v4.5.1;WindowsPhoneApp,Version=v8.1</Value>
    </ValidatePackageSuppression>

    <!-- We can't harvest an asset from more than one path -->
     <!-- Disable support for netcoreapp1.0 - netcoreapp2.0 for now.  To support these we need to build the src project for the old TFMs 
    <File Include="$(PackagesDir)\System.Runtime.WindowsRuntime.UI.Xaml\4.3.0\runtimes\win8\lib\netstandard1.3\System.Runtime.WindowsRuntime.UI.Xaml.dll">
      <TargetPath>runtimes/win/lib/netcoreapp1.0</TargetPath>
      <TargetFramework>netcoreapp1.0</TargetFramework>
    </File>-->

    <HarvestIncludePaths Include="runtimes/win8/lib/netstandard1.3">
      <TargetPath>runtimes/win/lib/netcore50</TargetPath>
    </HarvestIncludePaths>

    <File Include="$(PlaceHolderFile)">
      <TargetPath>runtimes/win-aot/lib/uap10.0.16299</TargetPath>
    </File>
    <File Include="$(PlaceHolderFile)">
      <TargetPath>runtimes/win/lib/uap10.0.16299</TargetPath>
    </File>

    <InboxOnTargetFramework Include="net45" />
    <InboxOnTargetFramework Include="uap10.0.16299" />
    <InboxOnTargetFramework Include="portable-win8+wpa81" />
    <InboxOnTargetFramework Include="win8" />
    <InboxOnTargetFramework Include="wpa81" />

    <!-- 
        ResolveAssemblyReference was attempting to write binding redirects
        for these assemblies (even though they are in the unification list).  
        The included build targets explicitly reference System.Runtime
        and add the facade references to the compiler.
    -->
    <PackageFile Include=".\build\net45\System.Runtime.WindowsRuntime.UI.Xaml.targets">
      <TargetPath>\build\net45\</TargetPath>
    </PackageFile>
    <PackageFile Include=".\build\net461\System.Runtime.WindowsRuntime.UI.Xaml.targets">
      <TargetPath>\build\net461\</TargetPath>
    </PackageFile>
    <!-- We need to manually ref S.R.WinRT since it is treated as inbox, but requires a package for reference -->
    <ProjectReference Include="..\..\System.Runtime.WindowsRuntime\pkg\System.Runtime.WindowsRuntime.pkgproj" TargetFramework="net45" />

  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
</Project> 