<Project>
  <Import Sdk="Microsoft.NET.Sdk" Project="Sdk.props" />

  <PropertyGroup>
    <!-- Enable GenerateTestSharedFrameworkDepsFile from CoreFxTesting package -->
    <GenerateTestSharedFrameworkDepsFile Condition="'$(BinplaceTestSharedFramework)' == 'true'">true</GenerateTestSharedFrameworkDepsFile>
  </PropertyGroup>

  <ItemGroup>
    <!-- This is necessary as inside VS project references that aren't part of the sln aren't built. -->
    <Project Include="$(CommonTestPath)\CoreFx.Private.TestUtilities\CoreFx.Private.TestUtilities.csproj" />
  </ItemGroup>

  <!-- Generate launch settings support files to enable VS debugging. -->
  <Target Name="GenerateLaunchSettingsFiles" Condition="'$(EnableLaunchSettings)' == 'true'">
    <PropertyGroup>
      <_TestProjectRootDir>$(SourceDir)</_TestProjectRootDir>
      <_TestProjectRootDir Condition="'$(DirectoryToBuild)'!=''">$(DirectoryToBuild)</_TestProjectRootDir>
    </PropertyGroup>
    <ItemGroup>
      <!-- Keep in sync with pattern for test projects in tests.proj -->
      <TestProjects Include="$(_TestProjectRootDir)*\tests\**\*.Tests.csproj" />
    </ItemGroup>

    <MSBuild Projects="@(TestProjects)"
             Targets="GenerateLaunchSettingsFile"
             ContinueOnError="ErrorAndContinue" />
  </Target>

  <Import Sdk="Microsoft.NET.Sdk" Project="Sdk.targets" />

  <Target Name="Build"
          Condition="'$(SkipPrepareTest)' != 'true'"
          DependsOnTargets="FilterProjects;GenerateTestSharedFrameworkDepsFile;GenerateLaunchSettingsFiles">

    <MSBuild Targets="Build"
             Projects="@(Project)"
             Properties="BuildConfiguration=$(BuildConfiguration);%(Project.AdditionalProperties)"
             BuildInParallel="true"
             ContinueOnError="ErrorAndStop" />

    <!-- Given we ErrorAndContinue we need to propagate the error if the overall task failed -->
    <Error Condition="'$(MSBuildLastTaskResult)' == 'false'" />

  </Target>
</Project>
