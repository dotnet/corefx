<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <OSGroup Condition="'$(OSGroup)' == ''">Windows_NT</OSGroup>
  </PropertyGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)'==''">Windows_NT_Debug</Configuration>
    <ProjectGuid>{3B7F91D7-0677-40CA-B4E7-D4E09D89A74E}</ProjectGuid>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <IsPartialFacadeAssembly Condition="'$(TargetGroup)' == 'net463'">true</IsPartialFacadeAssembly>
    <ResourcesSourceOutputDirectory Condition="'$(TargetGroup)' == 'net463'">None</ResourcesSourceOutputDirectory>
    <GeneratePlatformNotSupportedAssembly Condition="'$(TargetsUnix)' == 'true'">true</GeneratePlatformNotSupportedAssembly>
    <NuGetTargetMoniker Condition="'$(TargetGroup)' == ''">.NETStandard,Version=v1.7</NuGetTargetMoniker>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Windows_NT_Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Windows_NT_Release|AnyCPU'" />
  <ItemGroup Condition="'$(TargetGroup)' != 'net463' AND '$(TargetsWindows)' == 'true'">
    <Compile Include="System\Security\Cryptography\AesCryptoServiceProvider.cs" />
    <Compile Include="System\Security\Cryptography\CspProviderFlags.cs" />
    <Compile Include="System\Security\Cryptography\ICspAsymmetricAlgorithm.cs" />
    <Compile Include="System\Security\Cryptography\KeyNumber.cs" />
    <Compile Include="System\Security\Cryptography\CapiHelper.cs" />
    <Compile Include="System\Security\Cryptography\CapiHelper.DSA.cs" />
    <Compile Include="System\Security\Cryptography\CapiHelper.SymmetricKey.cs" />
    <Compile Include="System\Security\Cryptography\CspKeyContainerInfo.cs" />
    <Compile Include="System\Security\Cryptography\CspParameters.cs" />
    <Compile Include="System\Security\Cryptography\DESCryptoServiceProvider.cs" />
    <Compile Include="System\Security\Cryptography\DSACryptoServiceProvider.cs" />
    <Compile Include="System\Security\Cryptography\MD5CryptoServiceProvider.cs" />
    <Compile Include="System\Security\Cryptography\RC2CryptoServiceProvider.cs" />
    <Compile Include="System\Security\Cryptography\RNGCryptoServiceProvider.cs" />
    <Compile Include="System\Security\Cryptography\RSACryptoServiceProvider.cs" />
    <Compile Include="System\Security\Cryptography\SHA1CryptoServiceProvider.cs" />
    <Compile Include="System\Security\Cryptography\SafeCryptoHandles.cs" />
    <Compile Include="System\Security\Cryptography\TripleDESCryptoServiceProvider.cs" />
    <Compile Include="System\Security\Cryptography\Utils.cs" />
    <Compile Include="Internal\Cryptography\BasicSymmetricCipherCsp.cs" />
    <Compile Include="Internal\Cryptography\Helpers.cs" />
    <Compile Include="$(CommonPath)\Internal\Cryptography\BasicSymmetricCipher.cs">
      <Link>Internal\Cryptography\BasicSymmetricCipher.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Internal\Cryptography\UniversalCryptoTransform.cs">
      <Link>Internal\Cryptography\UniversalCryptoTransform.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Internal\Cryptography\UniversalCryptoEncryptor.cs">
      <Link>Internal\Cryptography\UniversalCryptoEncryptor.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Internal\Cryptography\UniversalCryptoDecryptor.cs">
      <Link>Internal\Cryptography\UniversalCryptoDecryptor.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Internal\Cryptography\Windows\CryptoThrowHelper.cs">
      <Link>Internal\Cryptography\Windows\CryptoThrowHelper.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\Crypt32\Interop.FindOidInfo.cs">
      <Link>Common\Interop\Windows\Crypt32\Interop.FindOidInfo.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\kernel32\Interop.FormatMessage.cs">
      <Link>Common\Interop\Windows\kernel32\Interop.FormatMessage.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\Interop.Libraries.cs">
      <Link>Common\Interop\Windows\Interop.Libraries.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Microsoft\Win32\SafeHandles\SafeHandleCache.cs">
      <Link>Common\Microsoft\Win32\SafeHandles\SafeHandleCache.cs</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup Condition="'$(TargetGroup)' != 'net463'">
    <ProjectReference Include="../../System.Security.Cryptography.Primitives/src/System.Security.Cryptography.Primitives.csproj" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetGroup)' == 'net463'">
    <TargetingPackReference Include="mscorlib" />
    <TargetingPackReference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <None Include="project.json" />
  </ItemGroup>
  <ItemGroup>
    <!-- ToDo: Remove once prerelease gets updated again -->
    <ProjectReference Include="..\..\System.Security.Cryptography.Algorithms\pkg\System.Security.Cryptography.Algorithms.pkgproj">
      <Name>System.Security.Cryptography.Algorithms</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\System.Security.Cryptography.Primitives\pkg\System.Security.Cryptography.Primitives.pkgproj">
      <Name>System.Security.Cryptography.Primitives</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
</Project>
