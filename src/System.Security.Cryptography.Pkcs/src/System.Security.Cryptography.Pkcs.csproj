<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <ProjectGuid>{03D84CBD-896D-4B2F-9A22-07034F51E73D}</ProjectGuid>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <IsPartialFacadeAssembly Condition="'$(TargetGroup)' == 'netfx'">true</IsPartialFacadeAssembly>
    <ResourcesSourceOutputDirectory Condition="'$(IsPartialFacadeAssembly)' == 'true'">None</ResourcesSourceOutputDirectory>
    <GeneratePlatformNotSupportedAssemblyMessage Condition="'$(TargetGroup)' == 'netstandard' AND '$(TargetsWindows)' != 'true'">SR.PlatformNotSupported_CryptographyPkcs</GeneratePlatformNotSupportedAssemblyMessage>
    <UsePackageTargetRuntimeDefaults Condition="'$(IsPartialFacadeAssembly)' != 'true'">true</UsePackageTargetRuntimeDefaults>
    <IncludeDllSafeSearchPathAttribute>true</IncludeDllSafeSearchPathAttribute>
  </PropertyGroup>
  <!-- Don't delete these clauses even if they look useless. They tell the VS IDE that "Windows_Debug", etc., are
       valid configuration for this project and stop it from trying to "fix up" the .sln file -->
  <!-- API types (platform independent) -->
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netfx-Windows_NT-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netfx-Windows_NT-Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netstandard-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netstandard-Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netstandard-Windows_NT-Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netstandard-Windows_NT-Release|AnyCPU'" />
  <ItemGroup Condition="'$(IsPartialFacadeAssembly)' != 'true' AND ('$(TargetGroup)' != 'netstandard' OR '$(TargetsWindows)' == 'true')">
    <Compile Include="System\Security\Cryptography\CryptographicAttributeObject.cs" />
    <Compile Include="System\Security\Cryptography\CryptographicAttributeObjectCollection.cs" />
    <Compile Include="System\Security\Cryptography\CryptographicAttributeObjectEnumerator.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\AlgorithmIdentifier.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\CmsRecipient.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\CmsRecipientCollection.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\CmsRecipientEnumerator.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\ContentInfo.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\EnvelopedCms.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\KeyAgreeRecipientInfo.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\KeyTransRecipientInfo.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\Pkcs9AttributeObject.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\Pkcs9ContentType.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\Pkcs9DocumentDescription.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\Pkcs9DocumentName.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\Pkcs9MessageDigest.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\Pkcs9SigningTime.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\PublicKeyInfo.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\RecipientInfo.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\RecipientInfoCollection.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\RecipientInfoEnumerator.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\RecipientInfoType.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\SubjectIdentifier.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\SubjectIdentifierOrKey.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\SubjectIdentifierOrKeyType.cs" />
    <Compile Include="System\Security\Cryptography\Pkcs\SubjectIdentifierType.cs" />
    <Compile Include="System\Security\Cryptography\Xml\X509IssuerSerial.cs" />
  </ItemGroup>
  <!-- Internal types (platform independent) -->
  <ItemGroup Condition="'$(IsPartialFacadeAssembly)' != 'true' AND ('$(TargetGroup)' != 'netstandard' OR '$(TargetsWindows)' == 'true')">
    <Compile Include="Internal\Cryptography\DecryptorPal.cs" />
    <Compile Include="Internal\Cryptography\KeyAgreeRecipientInfoPal.cs" />
    <Compile Include="Internal\Cryptography\KeyLengths.cs" />
    <Compile Include="Internal\Cryptography\KeyTransRecipientInfoPal.cs" />
    <Compile Include="Internal\Cryptography\Oids.cs" />
    <Compile Include="Internal\Cryptography\Helpers.cs" />
    <Compile Include="Internal\Cryptography\PkcsPal.cs" />
    <Compile Include="Internal\Cryptography\RecipientInfoPal.cs" />
  </ItemGroup>
  <!-- Internal types (platform: Windows) -->
  <ItemGroup Condition="'$(TargetsWindows)' == 'true' AND '$(IsPartialFacadeAssembly)' != 'true'">
    <Compile Include="Internal\Cryptography\Pal\Windows\AlgId.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\DecryptorPalWindows.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\DecryptorPalWindows.Decode.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\DecryptorPalWindows.DecodeRecipients.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\DecryptorPalWindows.Decrypt.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\HeapBlockRetainer.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\HelpersWindows.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\KeyAgreeRecipientInfoPalWindows.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\KeyTransRecipientInfoPalWindows.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\PkcsPal.Windows.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\PkcsPalWindows.cs" />
    <Compile Include="Internal\Cryptography\Pal\Windows\PkcsPalWindows.Encrypt.cs" />
    <Compile Include="Microsoft\Win32\SafeHandles\SafeCertContextHandle.cs" />
    <Compile Include="Microsoft\Win32\SafeHandles\SafeCryptMsgHandle.cs" />
    <Compile Include="Microsoft\Win32\SafeHandles\SafeHeapAllocHandle.cs" />
    <Compile Include="Microsoft\Win32\SafeHandles\SafeProvOrNCryptKeyHandle.cs" />
    <Compile Include="Microsoft\Win32\SafeHandles\SafeProvOrNCryptKeyHandleUwp.cs" />
  </ItemGroup>
  <!-- Interop types (platform: Windows) -->
  <ItemGroup Condition="'$(TargetsWindows)' == 'true' AND '$(IsPartialFacadeAssembly)' != 'true'">
    <Compile Include="Interop\Windows\Crypt32\Interop.CERT_CONTEXT.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CERT_ID.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CERT_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CERT_ISSUER_SERIAL_NUMBER.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CERT_PUBLIC_KEY_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CertContextPropId.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CertCreateCertificateContext.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CertDuplicateCertificateContext.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CertFreeCertificateContext.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CertGetCertificateContextProperty.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CertGetPublicKeyLength.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CertIdChoice.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CertNameStrTypeAndFlags.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CertNameToStr.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_CMS_RECIPIENT_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_CTRL_DECRYPT_PARA.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_CTRL_KEY_AGREE_DECRYPT_PARA.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_ENVELOPED_ENCODE_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_KEY_AGREE_RECIPIENT_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_KEY_TRANS_RECIPIENT_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_RC2_AUX_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_RECIPIENT_ENCODE_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMSG_RECIPIENT_ENCRYPTED_KEY_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMsgCmsRecipientChoice.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CMsgKeyAgreeOriginatorChoice.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CmsKeyAgreeKeyChoice.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CRYPT_ALGORITHM_IDENTIFIER.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CRYPT_ATTRIBUTE.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CRYPT_ATTRIBUTE_TYPE_VALUE.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CRYPT_ATTRIBUTES.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CRYPT_BIT_BLOB.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CRYPT_KEY_PROV_INFO.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CRYPT_RC2_CBC_PARAMETERS.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.Crypt32.ErrorCode.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptAcquireCertificatePrivateKey.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptAcquireCertificatePrivateKeyFlags.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptDecodeObject.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptDecodeObjectStructType.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptEncodeDecodeWrappers.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptEncodeObject.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptKeySpec.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptMsgClose.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptMsgControl.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptMsgGetParam.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptMsgOpenToDecode.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptMsgOpenToEncode.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptMsgParamType.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptMsgType.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptMsgUpdate.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptRc2Version.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.CryptReleaseContext.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.MsgControlType.cs" />
    <Compile Include="Interop\Windows\Crypt32\Interop.MsgEncodingType.cs" />
    <Compile Include="Interop\Windows\Heap\Interop.Heap.cs" />
  </ItemGroup>
  <!-- Common types (platform: Windows) -->
  <ItemGroup Condition="'$(TargetsWindows)' == 'true' AND '$(IsPartialFacadeAssembly)' != 'true'">
    <Compile Include="$(CommonPath)\Internal\Cryptography\Windows\CryptoThrowHelper.cs">
      <Link>Common\Internal\Cryptography\Windows\CryptoThrowHelper.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\Crypt32\Interop.DATA_BLOB.cs">
      <Link>Common\Interop\Windows\Crypt32\Interop.DATA_BLOB.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\Crypt32\Interop.FindOidInfo.cs">
      <Link>Common\Interop\Windows\Crypt32\Interop.FindOidInfo.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\Interop.Libraries.cs">
      <Link>Common\Interop\Windows\Interop.Libraries.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\kernel32\Interop.FormatMessage.cs">
      <Link>Common\Interop\Windows\kernel32\Interop.FormatMessage.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\NCrypt\Interop.ErrorCode.cs">
      <Link>Common\Interop\Windows\NCrypt\Interop.ErrorCode.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\NCrypt\Interop.NCryptFreeObject.cs">
      <Link>Common\Interop\Windows\NCrypt\Interop.NCryptFreeObject.cs</Link>
    </Compile>
  </ItemGroup>
  <!-- Internal types (platform: Unix) -->
  <ItemGroup Condition="'$(TargetsUnix)' == 'true' AND '$(IsPartialFacadeAssembly)' != 'true' AND '$(TargetGroup)' != 'netstandard'">
    <Compile Include="Internal\Cryptography\Pal\Unix\PkcsPal.Unix.cs" />
  </ItemGroup>
  <ItemGroup Condition="'$(IsPartialFacadeAssembly)' == 'true'">
    <Reference Include="mscorlib" />
    <Reference Include="System.Security" />
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
</Project>