<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
  <Import Project="..\Directory.Build.targets" />
  <Import Project="$(ToolsDir)PublishContent.targets" />
  <Import Project="$(PackagesDir)/$(FeedTasksPackage.ToLower())/$(FeedTasksPackageVersion)/build/$(FeedTasksPackage).targets" />
  <Import Project="$(PackagesDir)/$(PublishSymbolsPackage.ToLower())/$(PublishSymbolsPackageVersion)/build/PublishSymbols.targets" />

  <ItemGroup>
    <_PackagesToPublish Include="$(PublishPattern)" />
  </ItemGroup>

  <Target Name="CreateContainerName"
          DependsOnTargets="CreateVersionFileDuringBuild"
          Condition="'$(ContainerName)' == ''">
    <PropertyGroup>
      <ContainerName>corefx-$(PreReleaseLabel)-$(BuildNumberMajor)-$(BuildNumberMinor)</ContainerName>
    </PropertyGroup>
  </Target>

  <Target Name="Build" DependsOnTargets="CreateContainerName">
    <!-- skip uploadToAzure when there are no nupkgs -->
    <CallTarget Targets="UploadToAzure" Condition="'@(_PackagesToPublish)' != ''" />
  </Target>

  <PropertyGroup>
    <DownloadDirectory Condition="'$(DownloadDirectory)' == ''">$(BinDir)AzureTransfer</DownloadDirectory>
    <PackageDownloadDirectory>$(DownloadDirectory)\$(ConfigurationGroup)</PackageDownloadDirectory>
    <FinalPublishPattern>$(PackageDownloadDirectory)\**\*.nupkg</FinalPublishPattern>
    <FinalPublishPrivatePattern>$(PackageDownloadDirectory)\**\*Private*.nupkg</FinalPublishPrivatePattern>
    <FinalPublishExperimentalPattern>$(PackageDownloadDirectory)\**\*Experimental*.nupkg</FinalPublishExperimentalPattern>
    <FinalSymbolsPackagesPattern>$(PackageDownloadDirectory)\**\*.symbols.nupkg</FinalSymbolsPackagesPattern>
    <!-- The SignFiles target needs OutDir to be defined -->
    <OutDir>$(PackageDownloadDirectory)</OutDir>
  </PropertyGroup>

  <Target Name="GetPackagesToSign">
    <ItemGroup>
      <FilesToSign Include="$(FinalPublishPattern)" Exclude="$(FinalPublishPrivatePattern);$(FinalSymbolsPackagesPattern)">
        <Authenticode>NuGet</Authenticode>
      </FilesToSign>
    </ItemGroup>
    <Error Condition="'@(FilesToSign)' == ''" Text="There are no package files to sign please check $(FinalPublishPattern) to see if the packages are setup there" />
    <Message Importance="High" Text="Attempting to sign package '%(FilesToSign.Identity)'" />
  </Target>

  <Target Name="SignPackages"
          Condition="'$(SkipSigning)' != 'true' and '$(SignType)' != 'public'"
          DependsOnTargets="GetPackagesToSign;SignFiles">
  </Target>

  <Target Name="PublishToAzureBlobFeed">
    <ItemGroup>
      <ItemsToPush Include="$(FinalPublishPrivatePattern);$(FinalPublishExperimentalPattern)" Exclude="$(FinalSymbolsPackagesPattern)">
        <ManifestArtifactData>NonShipping=true</ManifestArtifactData>
      </ItemsToPush>
      <ItemsToPush Include="$(FinalPublishPattern)" Exclude="@(ItemsToPush);$(FinalSymbolsPackagesPattern)" />
    </ItemGroup>
    <Error Condition="'@(ItemsToPush)'==''" Text="ItemsToPush for packages is empty." />
    <PushToBlobFeed ExpectedFeedUrl="$(ExpectedFeedUrl)"
                    AccountKey="$(AccountKey)"
                    ItemsToPush="@(ItemsToPush)"
                    Overwrite="$(PublishOverwrite)"
                    ManifestName="$(GitHubRepositoryName)"
                    ManifestBuildId="$(ManifestBuildId)"
                    ManifestBranch="$(ManifestBranch)"
                    ManifestCommit="$(ManifestCommit)" />
  </Target>

  <Target Name="PublishSymbolsToAzureBlobFeed" Condition="'$(PublishSymbols)' == 'true'" >
    <ItemGroup>
      <ItemsToPush Include="$(FinalSymbolsPackagesPattern)" />
    </ItemGroup>
    <Error Condition="'@(ItemsToPush)'==''" Text="ItemsToPush for symbols is empty." />
    <PushToBlobFeed ExpectedFeedUrl="$(ExpectedFeedUrl)"
                    AccountKey="$(AccountKey)"
                    ItemsToPush="@(ItemsToPush)"
                    Overwrite="$(PublishOverwrite)"
                    ManifestName="$(GitHubRepositoryName)"
                    ManifestBuildId="$(ManifestBuildId)"
                    ManifestBranch="$(ManifestBranch)"
                    ManifestCommit="$(ManifestCommit)" />
  </Target>


  <Target Name="PublishAllSymbols"
          DependsOnTargets="SetupPublishSymbols;PublishSymbols"/>

  <Target Name="SetupPublishSymbols">
    <PropertyGroup>
      <ConvertPortablePdbsToWindowsPdbs Condition="'$(ConvertPortablePdbsToWindowsPdbs)'==''">true</ConvertPortablePdbsToWindowsPdbs>
    </PropertyGroup>
    <ItemGroup>
      <SymbolPackagesToPublish Include="$(FinalSymbolsPackagesPattern)" />
    </ItemGroup>
    <Error Condition="'$(SymbolServerPath)'==''" Text="Missing property SymbolServerPath" />
    <Error Condition="'$(SymbolServerPAT)'==''" Text="Missing property SymbolServerPAT" />
    <Message Importance="High" Text="Publishing @(SymbolPackagesToPublish) to $(SymbolServerPath)"/>
  </Target>
</Project>
