[{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":1,"Title":"Keynote: Welcome to the Machine","Abstract":"Information is everywhere and for many people, especially in the connected world, it is accessible freely or at a minimal cost. News outlets rely on social media to broadcast breaking news. Social media in turn relies on us to feed it with information, be it of our surroundings or our personal information. It\u2019s become somewhat of a self-sustaining self-serving machine in which we\u2019re all part of. It\u2019s big data and we\u2019re a cog in the wheel. For now of course, because with big data and cheap yet powerful hardware, AI also wants to play the game.\r\n\r\nAnd if information and knowledge is the key to success, surely this means we\u2019re on the right path. The question is, will we notice some of the warning signs before it\u2019s too late\u2026","StartTime":"2019-01-30T09:00:00-08:00","EndTime":"2019-01-30T10:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":2,"Title":"What You Need to Know About Open Source\u2014Trust Me, I\u0027m a Lawyer","Abstract":"Open source tools. We all use them. Whether an entire framework, a focused toolkit, or a simple custom component from GitHub, npm, or NuGet, the opportunity to improve our development speed while learning new things from open source projects is enticing.\r\n\r\nBut what does \u201copen source\u201d truly mean? What are our rights and limitations as open source consumers to use, modify, and redistribute these tools in a professional environment? The answer depends upon the OSS author\u0027s own decisions regarding project licensing. Come investigate the core principles of open source development and consumption while comparing and contrasting some of the more popular licenses in use today. Learn to make better decisions for your organization by becoming informed of how best to leverage the open source works of others and also how to properly license your own.","StartTime":"2019-01-30T10:20:00-08:00","EndTime":"2019-01-30T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":3,"Title":"Distributed Tracing and Monitoring with OpenCensus","Abstract":"OpenCensus is an emerging standard for tracing and metrics of cloud services. You can use it to gain observability into applications that span multiple clouds and technological stacks.\r\nIn this talk, we will use open source and vendor agnostic client libraries for OpenCensus and export telemetry to common distributed tracing systems such as Zipkin and others.\r\nAlong the way. we will discuss core concepts such as tags, metrics, exporters, zPages and trace context propagation. ","StartTime":"2019-02-01T16:20:00-08:00","EndTime":"2019-02-01T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":4,"Title":"Megahertz, Gigahertz, Registers and Instructions: How does a CPU actually work?","Abstract":"For decades, we\u2019ve been creating ever higher abstractions between ourselves and the computing hardware we\u2019re programming, but in the end whether you\u2019re writing JavaScript, Haskell, or Python it all comes down to 1\u2019s and 0\u2019s running through hardware patterns that were well understood twenty years ago.\r\n\r\nWe\u2019ll walk through the fundamentals of how CPU\u2019s \u201cthink\u201d in an accessible way (no engineering degree required!) so you can appreciate the marvel that is the modern CPU be it in a server data center or your fridge at home.  You\u2019ll learn how a CPU turns the code we feed it into actions, what\u2019s the big difference between an ARM and an Intel processor, how CPU\u2019s constantly optimize work for us, and where is it all going for the next few years.\r\n\r\nFinally, we\u0027ll show how Meltdown and Spectre take advantage of CPU internals to expose data and why this class of security problems are going to be a challenge to the next generation of CPU\u0027s.\r\n","StartTime":"2019-02-01T15:00:00-08:00","EndTime":"2019-02-01T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":5,"Title":"\u0022Hey Mycroft\u0022: Getting Started with the OSS Home Assistant","Abstract":"Home virtual assistants, like Alexa, Google Now, Siri, and Cortana, are gaining a lot of popularity. They\u2019re now incorporated into our phones, our laptops, and even available as separate devices in our homes. Some people haven\u2019t adopted them out of privacy concerns. A new system called Mycroft has come onto the scene, and it\u2019s built on open source hardware and software. You can install it on a Raspberry Pi, an old Linux box, or buy their own Mycroft device.\r\n\r\nIn this session, we\u2019ll go over the basics of what Mycroft is, and how you can quickly install it yourself. From there, we\u2019ll talk about some of the underlying software and see a short demo. Finally, we\u2019ll see how to build a new skill into it and contribute it back to the community. You\u2019ll leave with your own virtual assistant and the knowledge on how make it do what you want but keep your privacy in check.","StartTime":"2019-02-01T13:40:00-08:00","EndTime":"2019-02-01T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":6,"Title":"A Developer\u0027s Guide to Advertising","Abstract":"Love it or hate it, advertising is currently a main source of revenue for many websites. But digital advertising is a complicated space that not many developers understand. If you\u0027d like to understand the ad code on your site better, if your ad ops team has been talking about header bidding, or if you\u0027re just curious about how ads work, this is the talk for you. I\u0027ll give an overview of how programmatic advertising works, what header bidding is, explain some common tools and libraries, and address some common misconceptions and complaints about ads.","StartTime":"2019-02-01T11:40:00-08:00","EndTime":"2019-02-01T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":7,"Title":"Making Accessibility Testing Suck Less: An Intro to Pa11y.","Abstract":"Often the hardest part of any problem is simply how to get started. On the ever-evolving web accessibility is a matter of ongoing importance: the brilliance of your code or sleekness of your UI is inconsequential if your app or website is unusable to some of your users. With a million other issues already on your plate how do you find a way to get started on accessibility testing? Pa11y to the rescue! Pa11y is a lightweight command-line accessibility testing tool with enough flexibility to integrate results into your current testing process. This talk will explain what pa11y does and does not cover, review examples of both command line and scripted usage, dive into the pa11y web service and show how to modify output to work in your current testing setup. Bonus content: how to convince the rest of your team and business why accessibility is worth prioritizing and how getting started with low-hanging fruit can vastly improve your product.","StartTime":"2019-02-01T10:20:00-08:00","EndTime":"2019-02-01T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":8,"Title":"Data on the Inside, Data on the Outside","Abstract":"When we move from a monolith to microservices we abandon integrating via a shared database, as each service must own its own data to allow them it to be autonomous. But now we have a new problem, our data is distributed. What happens if I need one service needs to talk to another about a shared concept such as a product, a hotel room, or an order? Does every service need to have a list of all our users? Who knows what users have permissions to the entities within the micro service? What happens if my REST endpoint needs to include data from a graph that includes other services to make it responsive? And I am not breaking the boundary of my service when all of this data leaves my service boundary in response to a request?\r\n\r\nNaive solutions result in chatty calls as each service engages with multiple other services to fulfil a request, or in large message payloads as services add all the data required to process a message to each message. Neither scale well.\r\n\r\nIn 2005, Pat Helland wrote a paper \u2018Data on the Inside vs. Data on the Outside\u2019 which answers the question by distinguishing between data a service owns and reference data that it can use. In this presentation we will explain reference data, how it is classified, and how it should be implemented. We will include a discussion of using reference data from ATOM feeds, discrete messaging and event streams. We\u2019ll provide examples in C#, Python and Go as well as using RMQ and Kafka.","StartTime":"2019-01-31T17:40:00-08:00","EndTime":"2019-01-31T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":9,"Title":"Reverse Engineering a Bluetooth Lightbulb","Abstract":"I recently made build lights for the company I work for and my home office. They integrate with TeamCity and indicate when a build is running and success\u002ffailure of all the tests. In this session, we will reverse engineer a bluetooth light bulb\u2019s protocol, learn how to have an Raspberry Pi communicate with the bulb, and by the end you too will know how to make your own build lights! Please note that this talk will be highly technical. We will be discussing low level details of bluetooth communication, protocol analysis with Wireshark, sniffing bluetooth packets, etc.","StartTime":"2019-01-31T16:20:00-08:00","EndTime":"2019-01-31T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":10,"Title":"ML.NET for developers without any AI experience","Abstract":"AI talk is everywhere but where do you start as a .NET developer?  During this session, we will explore how you can use AI in the applications your creating today. How to start building \u0026 training your ML models with your .NET skills through ML.NET. \r\n\r\nWant to detect laughter in a phone conversation?  Detect the mood of Jira tickets or predict if\u002fwhere your code has bugs. This session will get you started with AI and ML.NET.","StartTime":"2019-01-31T15:00:00-08:00","EndTime":"2019-01-31T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":11,"Title":"Build Nodejs APIs using Serverless on Azure","Abstract":"Serverless lets you focus on coding and testing instead of provisioning infrastructure, configuring web servers, debugging your configuration, managing security settings, and all the drudgery normally associated with getting an app up and running. In this session with, you\u2019ll discover how to migrate an API of an existing app to Azure Functions. You\u2019ll learn how to use Visual Studio Code and the Azure Functions extension to speed up your work. After this session, you\u2019ll join the ranks of serverless developers.","StartTime":"2019-01-31T13:40:00-08:00","EndTime":"2019-01-31T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":12,"Title":"Augmented Reality - The State of Play","Abstract":"Augmented Reality is far more than a Pok\u00e9mon Go thing now. The hype is real, and many big players (Google, Microsoft, Apple, Facebook, you name it) are pushing AR to become ubiquitous. Hence the abundance of different approaches to AR, a significant need for content creators and creative ways of tackling problems using new techniques.\r\n\r\nIs mobile AR superior to HMDs? What\u0027s AR Cloud and why it\u0027s important?  What are real-world cases solved with AR? Is this all still sci-fi or should you start caring? This session presents the current state of AR, showcases its real capabilities, and demonstrates that we are on the verge of a revolution in how humans interact with digital content.","StartTime":"2019-01-31T11:40:00-08:00","EndTime":"2019-01-31T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":13,"Title":"Hacking with Go","Abstract":"Learning Go programming is easy. Go is popular and becomes even more also in security experts world. Wanted to feel a bit as a hacker? Learn a new language? Or do both at the same time? This session is about it. \r\nSo let\u0027s jump into hands-on session and explore how security tools can be written in Go. How to enumerate network resources, extract an information, sniff packets and do port scanning, brute force and more all with Go. \r\nBy the end, you will have more ideas what else can be written or re-written in Go. ","StartTime":"2019-01-31T10:20:00-08:00","EndTime":"2019-01-31T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":14,"Title":"A Practical Guide to Dashboarding.","Abstract":"Monitoring is difficult. First, there is a vast choice of tooling and setup. Then, figuring out what information should be displayed, where and why can be confusing. Finally what should be alerted upon and how to avoid fatigue.\r\n\r\nTogether we will journey through a practical tour of dashboarding. Focusing on metrics, we will cover how to get information out of your applications using telemetry. I will show you how you might set up your monitoring infrastructure with a demo and talk through some hardened baselines. Finally, I\u2019ll talk through a productionised setup including some gotchas to look out for.\r\n\r\nThis will be a whirlwind tour from start to finish of a practical guide to development dashboarding. ","StartTime":"2019-01-31T09:00:00-08:00","EndTime":"2019-01-31T10:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":15,"Title":"A lap around Azure Devops","Abstract":"Azure DevOps (previously known as Visual Studio Team Services) is a broad product suite with tools that assists small and large software development teams that want to deliver high quality software at a rapid speed. \r\n\r\nIn session we will walk through all major features in Azure DevOps, such as Azure Boards, Azure Pipelines and Azure Repos, and look at how we can continuously deliver value to or end users and implement DevOps practices such as Infrastructure as Code and testing in production using Azure.","StartTime":"2019-01-30T17:40:00-08:00","EndTime":"2019-01-30T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":16,"Title":"CSS Grid - What is this Magic?!","Abstract":"We\u2019ve all heard a lot in the last year about a new advancement in the world of CSS, called CSS Grid. Starting off at whispers, we\u2019re now starting to hear it as a deafening roar as more and more developers write about it, talk about it, share it and start using it. In the world of front end, I see it everywhere I turn and am excited as I start to use it in my own projects.\r\n\r\nBut what does this new CSS specification mean for software developers, and why should you care about it? In the world of tech today, we can do so many amazing things and use whatever language we choose across a wide range of devices and platforms. Whether it\u2019s the advent of React and React Native, or frameworks like Electron, it\u2019s easier than ever to build one app that works on multiple platforms with the language we know and work with best. The ability to do this also expands to styling apps on any platform using CSS, and therefore being able to utilise the magical thing that is\r\nCSS Grid.\r\n\r\nThe reason CSS Grid is gaining so much attention, is because it\u2019s a game changer for front end and layouts. With a few simple lines of code, we can now create imaginative, dynamic, responsive layouts (yep, I know that\u2019s a lot of buzz words). While a lot of people are calling this the new \u2018table layout\u2019, grid gives us so much more, with the ability to spread cells across columns and rows to whatever size you choose, dictate which direction new items flow, allow cells to move around to fit in place and even tell certain cells exactly where they need to sit.\r\n\r\nWhile there is so much to worry about when developing an app, CSS Grid means that you can worry less about building the layout on the front end, and more about making sure the back end works well. Let me show you how the magic works.","StartTime":"2019-01-30T16:20:00-08:00","EndTime":"2019-01-30T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":17,"Title":"Pragmatic Performance: When to care about perf, and what to do about it.","Abstract":"As a developer you often here both that performance is important, but also that you shouldn\u0027t worry about performance up front, so when is the right time to think about it? And if the time is right, what are you actually supposed to do?\r\n\r\nIf you\u0027re interested to hear about a pragmatic approach to performance, this talk will explain when is the right time to think about benchmarking, but more importantly will run through how to correctly benchmark .NET code so any decisions made will be based on information about your code that is trustworthy.\r\n\r\nAdditionally you\u0027ll also find out about some of the common, and some of the unknown, performance pitfalls of the .NET Framework and we\u0027ll discuss the true meaning behind the phrase \u0022premature optimization is the root of all evil\u0022.","StartTime":"2019-01-30T15:00:00-08:00","EndTime":"2019-01-30T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":18,"Title":"Dynamic Runtime Code with Roslyn","Abstract":"A possibly overlooked feature of the Roslyn compiler is the ability to generate, compile, and load new types at runtime. Sure, we\u0027ve always had *some* ability to use dynamic code in .Net, but the existing techniques were either slow (Reflection) or daunting to use (IL generation or Expressions). Now though, we can just use C# in a way that\u0027s both more approachable for more developers and lends itself to more ambitious levels of dynamic behavior. In this talk I\u0027ll show some of the ways I\u0027ve been using this technique to create more efficient, low allocation application frameworks. We\u0027ll also dive into the Utf8Json library already uses this approach today in its support for very highly efficient Json parsing.","StartTime":"2019-01-30T13:40:00-08:00","EndTime":"2019-01-30T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":1,"Name":"Room 4"},"Speakers":[],"Id":19,"Title":"GraphQL Will Do To REST What JSON Did To XML","Abstract":"Why GraphQL will become the new standard for accessing external data in your application. I will show how using GraphQL instead of REST services the development process becomes even more declarative as GraphQL will take away the (imperative) hassle of tying data from multiple endpoints together. This will increase the level of complexity in frontend development, while also increasing the performance of the application.\r\n","StartTime":"2019-01-30T11:40:00-08:00","EndTime":"2019-01-30T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":1},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":20,"Title":"Deep Learning in the world of little ponies","Abstract":"In this talk, we will discuss computer vision, one of the most common real-world applications of machine learning. We will deep dive into various state-of-the-art concepts around building custom image classifiers - application of deep neural networks, specifically convolutional neural networks and transfer learning. We will demonstrate how those approaches could be used to create your own image classifier to recognise the characters of \u0022My Little Pony\u0022 TV Series [or Pokemon, or Superheroes, or your custom images].","StartTime":"2019-02-01T16:20:00-08:00","EndTime":"2019-02-01T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":21,"Title":"Unity 101 for C# Developers","Abstract":"If you are interested in mixed or virtual reality development then Unity is a tool you\u2019ll want to learn. Go to Microsoft\u2019s [Hololens development page](https:\u002f\u002fdeveloper.microsoft.com\u002fen-us\u002fwindows\u002fmixed-reality\u002finstall_the_tools) and you\u2019ll find the installation of Unity recommended in the first paragraph.\r\n\r\nOne surprise to developers getting started with Unity is the level of integration with Visual Studio and how easy it is to add C# to manipulate your 3D world.\r\n\r\nIn this demo led session we\u2019ll go back to basics with Unity, easily creating a simple 3D experience with realistic physics. We\u2019ll look at the fantastic Visual Studio integration and how easily the two editors work together.\r\n\r\nFinally we\u2019ll look at the ways in which we can give our 3D experience some polish by adding textures, animations and some explosions!\r\n\r\nKeeping the best news for last: Unity is royalty free until you\u2019re earning $100,000 \u2013 so if you like the idea of becoming wildly rich from making immersive 3D experiences this is the talk for you.","StartTime":"2019-02-01T15:00:00-08:00","EndTime":"2019-02-01T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":22,"Title":"Architectural patterns for the cloud","Abstract":"As more and more people are starting to deploy their application to the cloud, new architectural patterns have emerged, and some old ones have resurfaced or become more prominent.\r\n\r\nIn this session, Mahesh Krishnan, will run through a large catalogue of cloud patterns that will cover categories such as availability, resiliency, data management, performance, scalability, design and implementation. You will learn about what problem each and every pattern addresses, how to implement them and what considerations you need to take into account while implementing them.","StartTime":"2019-02-01T13:40:00-08:00","EndTime":"2019-02-01T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":23,"Title":"Teaching New Tricks \u2013 How to enhance the skills of experienced developers","Abstract":"It\u2019s easy to forget what it felt like when you were a beginner. This lively dog-based* talk is about the rewards and pitfalls involved in introducing pair programming, TDD and an agile development approach to experienced developers who are used to working in a different way. It includes several practical suggestions of how to help and convince less agile-experienced colleagues.\r\nBased on my experience as a consultant technical lead, the aim is to help you to move your team members to a state of childlike fearlessness where learning is fun; is embedded in everything you do; and applies to all team members regardless of experience. \r\n*It turns out that images of dogs can be used to illustrate an astonishing variety of concepts!","StartTime":"2019-01-30T11:40:00-08:00","EndTime":"2019-01-30T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":24,"Title":"APIs Exposed!","Abstract":"More and more developers are building APIs, whether that be for consumption by client-side applications, exposing endpoints directly to customers so they can use an alternative front-end or wrapping up services in containers.\r\n\r\nNow that we have all these exposed endpoints, what are we doing to secure them?  Previously, our monolith was self-contained with limited points of access making authentication and authorisation more straightforward - that\u2019s no longer the case.\r\n\r\nWe\u2019ll cover the potential risks we may face such as cross-site scripting and BruteForce attacks as well as a look at the possible options for securing API endpoints including OAuth, Access Tokens, JSON web tokens, IP whitelisting, rate limiting to name but a few.\r\n\r\n","StartTime":"2019-02-01T11:40:00-08:00","EndTime":"2019-02-01T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":25,"Title":"Reading other peoples code","Abstract":"Someone else\u0027s code. Even worse, thousands of lines, maybe hundreds of files of other peoples code. Is there a way to methodically read and understand other peoples work, build their mental models? In this talk I will go through techniques I have developed throughout 18 years of programming. Hopefully you will walk away with a plan on how to approach a new code base. But even more I hope you walk away with a feeling of curiosity, wanting to get to know your fellow programmers through their code.","StartTime":"2019-01-30T13:40:00-08:00","EndTime":"2019-01-30T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":26,"Title":"Build vs Buy: Software Systems at Jurassic Park","Abstract":"We were so preoccupied with whether we could, we didn\u2019t stop to think if we should. Nowhere at Jurassic Park was this more true than how we developed software. Having the wrong software and support structures was a key factor in the failures of our first park. We were entrepreneurs launching something new and architects integrating an enterprise. And our decisions had lasting consequences. Deciding which problems were worth our time was foundational to our failure.\r\n\r\nJoin us for a retrospective of software systems at Jurassic Park. We\u2019ll dig into case studies and explore our successes and failures. We\u2019ll uncover the options, costs, and risks inherent in deciding what software to build, what to buy, and alternatives in between. We\u2019ll explore the opportunity cost of building systems, the sustainability of open-source, and the risks of vendor lock-in. You\u2019ll leave equipped to make better decisions and avoid the pitfalls we made at Jurassic Park.","StartTime":"2019-01-30T17:40:00-08:00","EndTime":"2019-01-30T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":27,"Title":"Lessons learned building ASP.NET Core MVC","Abstract":"Join Ryan Nowak from the ASP.NET Core team as he shares learnings from building the framework, improving performance, and helping customers. We\u2019ll talk about design details of Razor Pages and Controllers for Web and APIs, as well as hidden gems and power user features. Come learn how MVC works and get some useful tips from one of the core developers.","StartTime":"2019-02-01T10:20:00-08:00","EndTime":"2019-02-01T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":28,"Title":"Clean Architecture with ASP.NET Core 2.2","Abstract":"The explosive growth of web frameworks and the demands of users have changed the approach to building web applications. Many challenges exist, and getting started can be a daunting prospect. Let\u0027s change that now.\r\n\r\nThis talk provides practical guidance and recommendations. We will cover architecture, technologies, tools, and frameworks. We will examine strategies for organizing your projects, folders and files. We will design a system that is simple to build and maintain - all the way from development to production. You leave this talk inspired and prepared to take your enterprise application development to the next level.","StartTime":"2019-01-31T17:40:00-08:00","EndTime":"2019-01-31T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":29,"Title":"System Stable : Robust connected applications with Polly, the .NET Resilience Framework","Abstract":"Short Description\r\n\r\nJoin me for this session and I will show you how with just a few lines of code, you can make your applications much more resilient and reliable. With Polly, the .NET resilience framework, your application can easily tolerate transient faults and longer outages in remote systems or infrastructure. \r\n\r\nAt the end of this hour you will know how to use all the features of Polly to make your application a rock solid piece of work. We\u2019ll cover the reactive and proactive resilience strategies, starting with simple but very powerful retries and finishing with bulkhead isolation.\r\nOh, and did I mention Polly is a .NET Standard library so it will work on any application you can think of! Join me for an hour, and your applications will never be the same.\r\n\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n\r\nFull Description\r\n\r\nJoin me for this session and I will show you how with just a few lines of code, you can make your applications much more resilient and reliable. Let me tell you more\u2026 \r\n\r\nAlmost all applications now depend on connectivity, but what do you do when the infrastructure is unreliable or the remote system is down or returns an error? Does your application grind to a halt or just drop that single request? What if you could recover from these kinds of error, maybe even so quickly it won\u2019t be noticed? \r\n \r\nWith Polly your application can easily tolerate transient faults and longer outages in remote systems or infrastructure.  \r\n\r\nAt the end of this hour you will know how to use all the features of Polly to make your application a rock solid piece of work. \r\n\r\nWe\u2019ll start with the simple but very powerful Retry Policy which lets you retry a failed request. If simple retries are not good enough for you, there is a Wait and Retry policy which introduces a delay between retries, giving the remote service time to recover before being hit again. Then I show you how to use the circuit breaker for when things have really gone wrong and a remote system is struggling under too much load or has failed. If all these attempts are unsuccessful and you are still not getting through to the remote system, you can return a default response or execute arbitrary code to call for human help (or restart the cloud) with the fallback policy. \r\n\r\nThat takes care of what you can do when things go wrong, but Polly also lets you take proactive steps to keep your application and the services it depends on healthy.  \r\n\r\nTo get you started with proactive strategies, you will learn how caching can be used to store and return responses from an in-memory or distributed cache without having to hit the remote server every time. Or you can use bulkhead isolation to marshal resources within your application so that no one struggling part can take down the whole. Finally, I\u2019ll show you how to fail quickly when your application is in danger of being overloaded or the remote systems is not responding in a timely fashion, this is done with the bulkhead isolation and the timeout polices.   \r\n\r\nOh, and did I mention Polly is a .NET Standard library so it will work on any application you can think of! Join me for an hour, and your applications will never be the same. ","StartTime":"2019-01-31T16:20:00-08:00","EndTime":"2019-01-31T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":30,"Title":"Accessible App Design","Abstract":"Want to start building apps for people with disabilities but doesn\u2019t no where to start? In this session we cover everything to start right now! There are many people with learning disabilities around the world. There are also people with autism, psychological disabilities\u2026 Many of them are also entering the era of mobile and internet. We talk about design guidelines that can reach them. \r\n\r\nWe talk about apps, but do not focus on a specific technology in this talk. Which apps are needed? Which steps of design helps them to catch the frontiers of mobile and internet right now? Microsoft and other big tech companies are working more and more about inclusive design and digital inclusion for people with disabilities. ","StartTime":"2019-01-31T15:00:00-08:00","EndTime":"2019-01-31T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":31,"Title":"Skip the first three months of development for your next app","Abstract":"Five amazing ways using the emerging cloud ecosystem can save you time. The true power of serverless comes from using not just the execution service, but the whole platform around it. This talk\u002fdemo shows how teams can use AWS Lambda with Cognito, IOT, Kinesis and S3 to achieve in a few hours what usually takes the the first three months of application development.","StartTime":"2019-01-31T11:40:00-08:00","EndTime":"2019-01-31T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":32,"Title":"Deep Learning with PyTorch","Abstract":"Deep Learning is fast becoming an indispensable approach to getting the most from your data. In this session attendees will learn both how Deep Learning fits into the Artificial Intelligence landscape as well as how to get started using PyTorch. The session will start with the basic intuitions behind the problem setup, models, and optimization methods used to solve computer vision problems.\r\n\r\nAttendees should come away with a strong foundation of how to both create deep learning models as well as how to consume them in their applications. Prior exposure to PyTorch is definitely not expected.","StartTime":"2019-01-31T10:20:00-08:00","EndTime":"2019-01-31T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":33,"Title":"Workshop: Embedding Power BI Analytics - Part 1\u002f2","Abstract":"This instructor-led workshop focuses on development practices for embedding Power BI reports, dashboards and the Q\u0026A experience, and working with the Power BI JavaScript API.\r\n\r\nThis workshop is designed for web developers experienced with ASP.NET, Visual C#, HTML and JavaScript. You are required to bring your own PC, with Visual Studio 2015 (or later) with web tools installed.","StartTime":"2019-01-30T16:20:00-08:00","EndTime":"2019-01-30T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":34,"Title":"Getting Started with Cosmos DB \u002b EF Core","Abstract":"Cosmos DB is great and awesomely fast. Wouldn\u0027t be even more amazing if we could use our beloved entity framework to manage it? Let see how we can wire it up and get started","StartTime":"2019-01-30T15:00:00-08:00","EndTime":"2019-01-30T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":35,"Title":"Workshop: An introduction to Kubernetes on Google Cloud with Docker - Part 1\u002f2","Abstract":"Do you want to deploy your own application in the cloud, but don\u0027t know where you should start? This workshop is for you!\r\n\r\nIn this workshop you will create your first Kubernetes cluster with Docker images in Google Cloud. By using Docker images, you can build and deploy your application without worrying about the environment on the server. We will create a cluster containing a frontend web application and a backend.\r\n\r\n This workshop does not require knowledge about Docker, Kubernetes or Google Cloud.\r\n\r\nYou will need to bring your own computer to attend the workshop.","StartTime":"2019-01-30T10:20:00-08:00","EndTime":"2019-01-30T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":36,"Title":"Kotlin for C# Developers","Abstract":"Dive into the latest craze in languages and platforms - Kotlin. This time we will be looking at it from the perspective of a .NET C# developer, draw comparisons between the languages, and bridge the gap between these 2 amazing languages.\r\n\r\nWe\u0027ll look at:\r\n- Kotlin as a language\r\n- Platforms Kotlin is great for\r\n- Object Oriented Implementations in Kotlin\r\n- Extended Features\r\n- Features Kotlin has that C# doesn\u0027t\r\n- A demo Android application in Kotlin vs a Xamarin.Android app in C#\r\n\r\nIn the end you will leave with a foundational knowledge of Kotlin and its capabilities to build awesome apps with less code. You should feel comfortable comparing C# applications to Kotlin applications and know where to find resources to learn even more!","StartTime":"2019-02-01T16:20:00-08:00","EndTime":"2019-02-01T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":37,"Title":"3D printed Bionic Hand a little IOT and a Xamarin Mobile App","Abstract":"Kayden a local 13yr Old was born with no left forearm and hand, being continually let down by very poor and expensive NHS prosthetics.  Being a close friend of the family, I started looking around the web after seeing news reports of home-made devices.  I stumbled across the OpenBionics team and the great work they do and set to building a version for Kayden.  \r\nAfter 3D printing the parts I moved onto the electronics but this requires building a bespoke board that often needs software changes to set-up and configure.  So my version uses off the shelf IOT parts and connects via Bluetooth to a Xamarin .Net application for changing the settings and configuring on Kayden\u2019s phone. Still a work in progress but I will talk about the process used to get this far and how I have hopefully reduced the costs even more from a few hundred to around \u00a380 for future hands and plan to give back to the opensource project.","StartTime":"2019-02-01T15:00:00-08:00","EndTime":"2019-02-01T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":38,"Title":"Kubernetes - going beyond the basics","Abstract":"In this talk and with demos we\u0027ll cover some more advanced topics within Kubernetes such as:-\r\nInfluencing the scheduling of pods\r\nControlling applications being scheduled using admission controllers\r\nAuto-scaling of applications and clusters\r\nOptions for extending\u002fcustomising Kubernetes using Custom Resources\r\nAdding a service mesh to improve traffic shaping\r\n \r\nAfter this talk attendees should have a much clearer understanding of the additional capability in Kubernetes and associated platforms that they can to use to improve their application platform.\r\n \r\nAttendees should have a good understanding of the basic Kubernetes concepts and constructs.","StartTime":"2019-02-01T13:40:00-08:00","EndTime":"2019-02-01T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":39,"Title":"Just what is a \u0022service mesh\u0022, and if I get one will it make everything OK?","Abstract":"Communication is the backbone of distributed applications. Imagine you could control that backbone independently of all the components, so your application code just makes simple calls to other services, and your communication backbone does all the complex non-functional work. Load balancing, traffic management, fault tolerance, end-to-end monitoring, dynamic routing and secure communication could all be applied and controlled centrally. That\u0027s a service mesh.\r\n\r\nIn this session I\u0027ll cover the major features of a service mesh using Istio - which is the most popular technology in this space. I\u0027ll show you what you can do with a service mesh, how it simplifies application design and also where it adds complexity. My examples will range from new microservices designs to legacy monoliths, and you\u0027ll see what a service mesh can bring to different types of application.","StartTime":"2019-02-01T11:40:00-08:00","EndTime":"2019-02-01T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":40,"Title":"Fallacies of Doom - Lessons learned from porting Doom 3 to Java","Abstract":"\r\nWhile Java has grown enormously over the years, the fundamentals have stagnated.\r\n\r\nThe motivation for this talk and underlying project, was the following question: why is Java, with it\u2019s 20 years of age, and (at least)6 billion running JVM\u2019s not a major player in the video-game development universe?\r\n\r\n#####TL;DR;\r\nSo everybody knows the Doom games, right? Every new installment brought brand new ideas, and groundbreaking graphics. But more importantly, they brought the source code of the prior installment to the public eye.\r\n\r\nNaturally people have played and hacked the code to oblivion, as much as they played the games themselves. And I have the honor to be one of those people.\r\n\r\nI (naively) endeavored to port the Doom 3 C\u002b\u002b code to the fantabulous Java. In doing so, I hoped to learn, among other things, more about 3D graphics.\r\n...what I didn\u0027t expect though, was for djoom3(cool name huh!) to teach me more about Java!?\r\n\r\nAside from the basic game development intro, this talk focuses on the following:\r\n- Some areas where Java should learn from it\u0027s nemesis, C\u002b\u002b\r\n- Other areas where the student(Java) becomes the master(C\u002b\u002b)\r\n- And some promises that were made, but never keptWhile Ja","StartTime":"2019-02-01T10:20:00-08:00","EndTime":"2019-02-01T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":41,"Title":"Scaling Frontend Development","Abstract":"Abstract\r\nLarge frontend projects suffer from all of the same problems of other software projects with the same characteristics:\r\nCommunication and coordination overhead\r\nSpeed of delivery\r\nLarge quantum size\r\nLow productivity \r\n\r\nThese factors are growing concerns for companies as productivity and speed of delivery is nowadays crucial for success in this competitive landscape\r\n\r\nA common way of solving many of these issues in software projects is the microservices approach.\r\n\r\nToday a similar approach of applying this same pattern to the frontend is being popularized and is commonly nominated as micro-frontends.\r\n\r\nHowever this approach has many fallacies because of frontend specific characteristics:\r\n- The performance cost of loading many independent applications\r\n- The need for a common visual language and experience\r\n- The browser is a monolithic runtime \r\n\r\nDescription\r\nThis talk will be about the problems of large frontend projects and how to scale them in a way that balances team autonomy with performance and productivity\r\n\r\nI\u2019ll talk about how at farfetch we\u2019re progressively refactoring our frontend to multiple independent applications, and the strategies we\u2019re using to make sure that despite having many applications made by different independent and geographically distributed teams we still can deliver a performant and consistent product to the end user.\r\n","StartTime":"2019-01-31T17:40:00-08:00","EndTime":"2019-01-31T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":42,"Title":"An Introduction to WebAssembly","Abstract":"Want to write a web application? Better get familiar with JavaScript JavaScript has long been the king of front-end. While there have been various attempts to dethrone it, they have typically involved treating JavaScript as an assembly-language analog that you transpile your code to. This has lead to complex build pipelines that result in JavaScript which the browser has to parse and *you* still have to debug. But what if there were an actual byte-code language you could compile your non-JavaScript code to instead? That is what WebAssembly is.\r\n\r\nI\u0027m going to explain how WebAssembly works and how to use it in this talk. I\u0027ll cover what it is, how it fits into your application, and how to build and use your own WebAssembly modules. And, I\u0027ll demo how to build and use those modules with both Rust and the WebAssembly Text Format. That\u0027s right, I\u0027ll be live coding in an assembly language. I\u0027ll also go over some online resources for other languages and tools that make use of WebAssembly.\r\n\r\nWhen we\u0027re done, you\u0027ll have the footing you need to start building applications featuring WebAssembly. So grab a non-JavaScript language, a modern browser, and let\u0027s and get started!","StartTime":"2019-01-31T16:20:00-08:00","EndTime":"2019-01-31T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":43,"Title":"(WPF \u002b WinForms) * .NET Core = Modern Desktop","Abstract":"Learn how .NET Core 3 brings WPF and Windows Forms into the future with a modern runtime. See what\u2019s new for WPF and Windows Forms, learn how to easily retarget your .NET Framework application over to .NET Core, and how to get these modern desktop apps to your users.\r\n","StartTime":"2019-01-31T15:00:00-08:00","EndTime":"2019-01-31T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":44,"Title":"Think Like a Trainer: Improving Your Communication Skills","Abstract":"Think back to a time when you were in a conversation that could have gone better. Perhaps you said something the wrong way, or you walked away from the conversation not fully knowing if the other person even understood what you were trying to convey.\r\n\r\nTechnical trainers rely on effective communication as the foundation of everything that we do. We help end users to learn how to use software and adjust to new workflows, through the process of constantly adapting to different backgrounds, skill levels, and learning styles.\r\n\r\nIn this session, you\u2019ll learn actionable strategies to begin thinking like a trainer, including:\r\n\r\n- Using active listening techniques to communicate with empathy.\r\n\r\n- Best practices for explaining technical concepts in non-technical terms.\r\n\r\n- Adjusting your communication approach for different communication styles.\r\n\r\n- Using problem solving skills to help you get unstuck during difficult conversations.","StartTime":"2019-01-31T13:40:00-08:00","EndTime":"2019-01-31T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":45,"Title":"Keeping it DRYer with Templates","Abstract":"One common practice to write maintainable code is to minimise repetition, often referred to as DRY or Don\u0027t Repeat Yourself.\r\n\r\nHowever, have you ever considered how much you repeat yourself when you create a new .NET application? \r\n\r\nYou\u0027ve found your ideal architecture and folder structure and now every time you create a new project you have to create the file structure then add all the different project types you need.\r\n\r\nDon\u0027t forget all those NuGet dependencies too and the boilerplate code from other projects you\r\ncontinually copy in. \r\n\r\nIn this talk you\u0027ll learn the different ways you can create custom templates for .NET projects using the dotnet CLI, Visual Studio templates and Yeoman, helping to reduce repetition, write better applications, apply incremental improvements, all whilst saving you time and effort. ","StartTime":"2019-01-31T11:40:00-08:00","EndTime":"2019-01-31T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":46,"Title":"Why should you care about edge computing?","Abstract":"Recent technologies are enabling a host of new scenarios for doing data collection and analytics much closer to the source, at the \u0022edge\u0022 so to speak. \r\n\r\nHow can using Artificial Intelligence in a cheap device the size of a matchbox change the way you do things? What kind of scenarios does this open up for business owners, enabling new opportunities for you and your company? What are the actual benefits for connecting the cloud and the edge in this way? \r\n\r\nI\u0027ll give you some examples and demonstrate how Edge Computing can enable new scenarios and new business.\r\n","StartTime":"2019-01-31T10:20:00-08:00","EndTime":"2019-01-31T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":47,"Title":"Let\u2019s talk patterns","Abstract":"At some point in your life, you start realizing that re-inventing the wheel isn\u0027t the best way to spend your time. Especially since Bob Wheel Sr. perfected that invention many, many years ago. And it\u0027s the same with software. Smart people have already encountered a lot of the problems that we face every day while building software. Some of them have even been nice enough to write down their solutions in so called \u0022patterns\u0022. So why not stand on the shoulders of...well...maybe not giants...but at least very smart people who were born before you, and build on top of their hard-earned wisdom?\r\nThis session, will walk you through a bunch of really useful patterns, and you\u0027ll not only learn their names, but also why they are useful and how to implement them in .NET. And maybe, just maybe, you\u0027ll even see that one pattern that solves that problem you are working on at the moment. But even if you don\u0027t see that one pattern that you need, you will at least get a few that you can store in your toolbelt for future problems.\r\n","StartTime":"2019-01-31T09:00:00-08:00","EndTime":"2019-01-31T10:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":3,"Name":"Room 5"},"Speakers":[],"Id":48,"Title":"Power BI for Developers","Abstract":"Integrate, Extend, Embed!\r\n\r\nIn this session, you will learn how developers can deliver real-time dashboards, create custom visuals and embed rich interactive analytics in their apps with Power BI. This presentation specifically targets experienced app developers, and also those curious to understand what developers can achieve with Power BI. Numerous demonstrations will put the theory into action.","StartTime":"2019-01-30T15:00:00-08:00","EndTime":"2019-01-30T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":3},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":49,"Title":"C# 8","Abstract":"It\u0027s nearly here! The Visual Studio 2019 Preview is already available, so if you haven\u0027t looked into what\u0027s coming in C# 8, now is the perfect time to do so.\r\nThe most important feature of C# 8 is undoubtedly nullable reference types, but there\u0027s plenty more to look forward to as well.\r\n\r\nWhile I\u0027ll make this talk as easy to understand as I can, there\u0027s a huge amount to cover. Expect a fast pace, with lots of code.","StartTime":"2019-02-01T10:20:00-08:00","EndTime":"2019-02-01T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":50,"Title":"Dungeons, Dragons and Functions","Abstract":"Dungeons \u0026 Dragons, or D\u0026D, is the grand-daddy of all role playing games. While playing D\u0026D is great fun, the rules are a bit daunting for the beginner. The basic rulebook, the PHB, clocks in at a solid 300 pages, and can be extended with multiple additional rule sets. This should come as no surprise to software engineers: this is, after all, documentation for a system that models a complex domain, and has been in use for over 40 years now, going through numerous redesigns over time.\r\n\r\nAs such, D\u0026D rules make for a great exercise in domain modelling. In this talk, I will take you along my journey attempting to tame that monster. We will use no magic, but a weapon imbued with great power, F#; practical tips and tricks for the Adventurer on the functional road will be shared. So... roll 20 for initiative, and join us for an epic adventure in domain modeling with F#!","StartTime":"2019-01-31T17:40:00-08:00","EndTime":"2019-01-31T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":51,"Title":"Build cross-platform mobile apps using Fabulous","Abstract":"In recent years there has been a shift in the way websites and mobile apps are being built - moving to architectures with immutable models and virtual UIs - based on the MVU (model-view-update) pattern. This has lead to great new frameworks like ELM and React for web, and ReactNative for mobile.\r\n\r\nNow there is a new MVU framework for building mobile apps - Fabulous. It\u0027s a community-driven open source framework, combining the simplicity of an MVU framework, with 100% native API access for both iOS and Android, all built with using an established, world class, battle-hardened functional programming language.\r\n\r\nThis session will start with an overview of MVU, discussing how it works and why it is such a great architecture. It will then move on to building your first Fabulous app that runs on iOS and Android. Next up more features will be added to the app whilst the app is running on a device, showing the hot reload capabilities of Fabulous for both UI and app logic. Finally it will look at the underlying architecture, see how to use all of the iOS and Android APIs, see how to easily use native components such as cocoa pods or jars, and look at the massive range of libraries that this framework as available to it to do all manner of UI and application logic things. We\u0027ll even see how to use it on macOS and Windows, including being able to build iOS apps on Windows (with the help of a networked Mac, Apple licensing rules and whatnot).\r\n\r\nWhen looking at naming for this framework, someone suggested Fabulous. By the end of this session you will see why that name stuck.","StartTime":"2019-01-31T16:20:00-08:00","EndTime":"2019-01-31T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":52,"Title":"Building Clients for OpenID Connect\u002fOAuth 2-based Systems","Abstract":"Using protocols like OpenID Connect and OAuth 2 for authentication and API access can on one hand simply your front-ends dramatically since they don\u2019t have to deal with credentials anymore \u2013 but on the other hand introduces new challenges like choosing the right protocol flow for the given client, secure token storage as well as token lifetime management. This talk gives an overview over the best practices how to solve the above problems for both native server and client-side applications as well as browser-based applications and SPAs.","StartTime":"2019-01-30T13:40:00-08:00","EndTime":"2019-01-30T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":53,"Title":"Securing Web Applications and APIs with ASP.NET Core 2.2 and 3.0","Abstract":"ASP.NET Core and MVC is a mature and modern platform to build secure web applications and APIs for a while now. Starting with version 2.2, Microsoft makes big investments in the areas of standards-based authentication, single sign-on and API security by including the popular open source project IdentityServer4 in the project templates. This talk gives an overview over the various security features in ASP.NET Core but focuses in particular on the API security scenarios enabled by IdentityServer.","StartTime":"2019-01-30T11:40:00-08:00","EndTime":"2019-01-30T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":54,"Title":"What you need to know about ASP.NET Core 2.2","Abstract":"Another new version of ASP.NET Core is here and it brings new capabilities, making it easier than ever to build and consume APIs. But there\u0027s also some hidden gems in the framework that aren\u0027t well known that you should definitely know about! \r\n\r\nDamian and David from the ASP.NET Core team are back to show you the new features plus their favourite, little-known features that don\u0027t get enough attention but will make your lives easier.","StartTime":"2019-01-30T10:20:00-08:00","EndTime":"2019-01-30T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":55,"Title":"Futurology for Dummies - the Next 30 Years in Tech","Abstract":"2019 is the 30th anniversary of my first job in tech. On my first day I was given a Wyse 60 terminal attached via RS232 cables to a Tandon 286, and told to learn C from a dead tree so I could write text applications for an 80x24 character screen. Fast-forward to now: my phone is about a million times more powerful than that Tandon; screens are 3840x2160 pixels; every computer in the world is attached to every other thing with no cables; and we code using, well, still basically C.\r\n\r\nHaving lived through all those changes in realtime, and as an incurable neophile, I think I can make an educated guess as to what the next 30 years are going to be like, and what we\u0027re all going to be doing by 2049. If anything, I\u0027m going to underestimate it, but hopefully you\u0027ll be inspired, invigorated and maybe even informed about the future of your career in tech.","StartTime":"2019-02-01T16:20:00-08:00","EndTime":"2019-02-01T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":56,"Title":"Crash, Burn, Report","Abstract":"With the launch of the Reporting API any browser that visits your site can automatically detect and alert you to a whole heap of problems with your application. DNS not resolving? Serving an invalid certificate? Got a redirect loop, using a soon to be deprecated API or any one of countless other problems, they can all be detected and reported with no user action, no agents, no code to deploy. You have one of the most extensive and powerful monitoring platforms in existence at your disposal, millions of browsers. Let\u0027s look at how to use them.\r\n\r\nIn this talk we\u0027ll look at how to configure the browser to send you reports when things go wrong. These are brand new capabilities the likes of which we\u0027ve haven\u0027t seen before and they\u0027re already supported in the world\u0027s most popular browser, Google Chrome. We\u0027ll look at how to receive reports and how to make use of them after having the browser do the hard work.","StartTime":"2019-02-01T15:00:00-08:00","EndTime":"2019-02-01T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":57,"Title":"Solving Diabetes with an Open Source Artificial Pancreas","Abstract":"Scott has been a Type 1 diabetic for over 20 years. When he first became diabetic he did what every engineer would do...he wrote an app to solve his problem. Fast forward to 2018 and Scott lives 24 hours a day connected to an open source artificial pancreas. After years of waiting, the diabetes community online creating solutions.\r\n\r\nScott will go through the history of diabetes online, the components (both hardware and software) needed for an artificial pancreas, and discuss the architectural design of two popular systems (LoopKit and OpenAPS). Plus, you\u0027ll see Scott *not die* live on stage as he\u0027s been \u0022looping\u0022 for over a year!","StartTime":"2019-02-01T13:40:00-08:00","EndTime":"2019-02-01T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":58,"Title":"From \u0027dotnet run\u0027 to \u0027Hello World!\u0027","Abstract":"Have you ever stopped to think about all the things that happen when you execute a simple .NET program?\r\n\r\nThis talk will delve into the internals of the recently open-sourced .NET Core runtime, looking at what happens, when it happens and why. \r\n\r\nMaking use of freely available tools such as \u0027PerfView\u0027, we\u0027ll examine the Execution Engine, Type Loader, Just-in-Time (JIT) Compiler and the CLR Hosting API to see how all these components play a part in making \u0027Hello World\u0027 possible.","StartTime":"2019-02-01T11:40:00-08:00","EndTime":"2019-02-01T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":59,"Title":"Async injection","Abstract":"This talk attempts to answer a pair of frequently asked questions, the first one of which is: how do I combine dependency injection with async and await in C# without leaky abstractions?\r\n\r\nIt turns out that the answer to that question can be found by answering another frequently asked question:  how do I get the value out of my monad?\r\n\r\nDuring the talk, you\u2019ll get a quick and easy-to-understand explanation of monads.\r\n\r\nAll code examples will be in C#.","StartTime":"2019-02-01T10:20:00-08:00","EndTime":"2019-02-01T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":60,"Title":"Keynote: The Microsoft Open Source Cinematic Universe - Phase 2","Abstract":"Phase 1 is nearly complete with open source .NET Core. What does Microsoft\u0027s Open Source plan look like for the next 10 years?\r\n\r\nJoin Scott Hanselman as he compares the MCU (Marvel Cinematic Universe) to the MSFTOSSCU and talks about what a next phase MIGHT look like.","StartTime":"2019-02-01T09:00:00-08:00","EndTime":"2019-02-01T10:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":61,"Title":"Let\u0027s Talk HTTP in .NET Core","Abstract":"In the world of microservices (yes, there\u0027s that buzzword again!) and distributed systems, we often find ourselves communicating over HTTP. What seems like a simple requirement can quickly become complicated! Networks aren\u0027t reliable and services fail. Dealing with those inevitable facts and avoiding a cascading failure can be quite a challenge. In this talk, Steve will explore how we can build .NET Core applications that make HTTP requests and rely on downstream services, whilst remaining resilient and fault tolerant.\r\n\r\nThis session will focus on some of the improvements which have been released in .NET Core and ASP.NET Core 2.1, such as IHttpClientFactory and the new, more performant SocketHttpHandler. Steve will identify some HTTP anti-patterns and common mistakes and demonstrate how we can refactor existing code to use the new HttpClientFactory features.\r\n\r\nNext, Steve will demonstrate other HTTP tips and tricking, including Polly; a fantastic resilience and transient fault handling library which can be used to make your applications less prone to failure. When integrated with the Microsoft IHttpClientFactory; wrapping your HTTP calls in retries, timeouts and circuit-breakers has never been easier!\r\n\r\nIf you\u0027re building services which make HTTP calls, then this talk is for you!","StartTime":"2019-01-31T17:40:00-08:00","EndTime":"2019-01-31T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":62,"Title":"DiagnosticSourcery 101","Abstract":".NET has a new mechanism for generating and storing diagnostic data: DiagnosticSource. This is the cross-platform alternative to ETW. Much of ASP.NET Core and EF Core produce useful metric data using DiagnosticSource, and you can produce your own and stream some or all of the data to the metrics storage of your choice.\r\n\r\nIn this talk I\u0027ll run through how DiagnosticSource works, show you how to use it to output your own metrics in any .NET application, and how to pipe those metrics to a Time-Series database and turn them into a lovely Grafana dashboard.\r\n\r\nYou can use DiagnosticSource in anything from an ASP.NET Core cloud-native microservice to a WPF desktop application, and it\u0027s a Microsoft package with no 3rd-party dependencies, so this talk should be interesting and useful for any .NET developer.","StartTime":"2019-01-31T16:20:00-08:00","EndTime":"2019-01-31T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":63,"Title":"Where is C# headed?","Abstract":"C# 8.0 is coming up! Not just nullable reference types and asynchronous streams, which will get much coverage elsewhere in the conference, but also recursive patterns, switch expressions, ranges, default interface member implementations and more. We\u2019ll look at all of those, and also at some of the things being worked on for future versions of the language.","StartTime":"2019-01-31T15:00:00-08:00","EndTime":"2019-01-31T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":64,"Title":"Blazor, a new framework for browser-based .NET apps","Abstract":"Today, nearly all browser-based apps are written in JavaScript (or similar languages that transpile to it). That\u2019s fine, but there\u2019s no good reason to limit our industry to basically one language when so many powerful and mature alternate languages and programming platforms exist. Starting now, WebAssembly opens the floodgates to new choices, and one of the first realistic options may be .NET.\r\n \r\nBlazor is a new experimental web UI framework from the ASP.NET team that aims to brings .NET applications into all browsers (including mobile) via WebAssembly. It allows you to build true full-stack .NET applications, sharing code across server and client, with no need for transpilation or plugins.\r\n \r\nIn this talk I\u2019ll demonstrate what you can do with Blazor today and how it works on the underlying WebAssembly runtime behind the scenes. You\u2019ll see its modern, component-based architecture (inspired by modern SPA frameworks) at work as we use it to build a responsive client-side UI. I\u2019ll cover both basic and advanced scenarios using Blazor\u2019s components, router, DI system, JavaScript interop, and more.","StartTime":"2019-01-31T13:40:00-08:00","EndTime":"2019-01-31T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":65,"Title":"Beyond Developer","Abstract":"When I started in IT the roles were clearly separated. Business Analysts wrote requirements, Architects designed them, Programmers wrote the code, Testers tested the software.\r\n\r\nOver the last decade or so we have seen a shift towards \u201cgeneralising specialists\u201d who can cut code, understand a business domain, design a user interface, participate in and automate some of the testing and deployment activities, and who are sometimes even responsible for the health and wellbeing of their own systems in production.\r\n\r\nTo succeed in this new world requires more than \u201c3 years of Java\u201d. The modern developer needs to be constantly reinventing themselves, learning, and helping others to do the same. In this session, Dan explores some of the skills and characteristics of the modern developer, and suggests some ways you can grow them for yourself.","StartTime":"2019-01-31T11:40:00-08:00","EndTime":"2019-01-31T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":66,"Title":"Structure and Interpretation of Test Cases","Abstract":"Throw a line of code into many codebases and it\u0027s sure to hit one or more testing frameworks. There\u0027s no shortage of frameworks for testing, each with their particular spin and set of conventions, but that glut is not always matched by a clear vision of how to structure and use tests \u2014 a framework is a vehicle, but you still need to know how to drive.\r\n\r\nThis talk takes a deep dive into testing, with a strong focus on unit testing, looking at examples and counterexamples in different languages and frameworks, from naming to nesting, exploring the benefits of data-driven testing, the trade-offs between example-based and property-based testing, how to get the most out of the common given\u2013when\u2013then refrain and knowing how far to follow it.","StartTime":"2019-01-31T10:20:00-08:00","EndTime":"2019-01-31T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":67,"Title":"How We Got Here - The History of Web Development","Abstract":"The Internet existed before the Web, but the Web redefined the Internet - what started out as a protocol for helping scientists share documents and references has turned into one of the most important forces in the 21st century. But how did we get here?\r\n\r\nJoin Richard Campbell as he tells the story of the World Wide Web and the web development tools and techniques that made it all possible. From the early versions of HTML where you laid out web pages with tables (GeoCities anyone?) and simple scripting languages to CSS, JavaScript and HTML 5, leading to Single Page Applications, Progressive Web Apps and Web Assembly! We\u0027ve come a long way, and the story is continuing!","StartTime":"2019-01-31T09:00:00-08:00","EndTime":"2019-01-31T10:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":68,"Title":"Hack to the Future","Abstract":"Infosec is a continual game of one-upmanship; we build a defence and someone breaks it so we build another one then they break that and the cycle continues. Because of this, the security controls we have at our disposal are rapidly changing and the ones we used yesterday are very often useless today.\r\n\r\nThis talk focuses on what the threats look like *today*. What are we getting wrong, how do we fix it and how do we stay on top in an environment which will be different again tomorrow to what it is today. It\u0027s a real-world look at modern defences that everyone building online applications will want to see.","StartTime":"2019-01-30T17:40:00-08:00","EndTime":"2019-01-30T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":69,"Title":"Life Beyond Distributed Transactions: An Apostate\u0027s Implementation","Abstract":"Over a decade ago, Pat Helland authored his paper, \u0022Life Beyond Distributed Transactions: An Apostate\u0027s Opinion\u0022 describing a means to coordinate activities between entities in databases when a transaction encompassing those entities wasn\u0027t feasible or possible. While the paper and subsequent talks provided great insight in the challenges of coordinating activities across entities in a single database, implementations were left as an exercise to the reader!\r\n\r\nFast forward to today, and now we have NoSQL databases, microservices, message queues and brokers, HTTP web services and more that don\u0027t (and shouldn\u0027t) support any kind of distributed transaction.\r\n\r\nIn this session, we\u0027ll look at how to implement coordination between non-transactional resources using Pat\u0027s paper as a guide, with examples in Azure Cosmos DB, Azure Service Bus, and Azure SQL Server. We\u0027ll look at a real-world example where a codebase assumed everything would be transactional and always succeed, but production proved us wrong! Finally, we\u0027ll look at advanced coordination workflows such as Sagas to achieve robust, scalable coordination across the enterprise.","StartTime":"2019-01-30T16:20:00-08:00","EndTime":"2019-01-30T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":70,"Title":"Insecure Transit - Microservice Security","Abstract":"A deep dive into some of the technical challenges and solutions to securing a microservice architecture.\r\n\r\nMicroservices are great, and they offer us lots of options for how we can build, scale and evolve our applications. On the face of it, they should also help us create much more secure applications - the ability to protect in depth is a key part of protecting systems, and microservices make this much easier. On the other hand, information that used to flow within single processes, now flows over our networks, giving us a real headache. How do we make sure our shiny new microservices architectures aren\u2019t less secure than their monolithic predecessor.\r\n\r\nIn this talk, I outline some of the key challenges associated with microservice architectures with respect to security, and then looks at approaches to address these issues. From secret stores, time-limited credentials and better backups, to confused deputy problems, JWT tokens and service meshes, this talk looks at the state of the art for building secure microservice architectures.","StartTime":"2019-01-30T13:40:00-08:00","EndTime":"2019-01-30T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":71,"Title":"Much Ado about Nothing: A C# play in two acts. Act 2, starring Bill Wagner","Abstract":"Resolve that tension by learning to love that strategic shift and put the new understanding into practice.\r\n\r\nLearn how nullable reference types affects your design decisions and how you express those decisions. Learn how to migrate an existing code base by discovering the original intent and expressing that intent in new syntax. The exciting conclusion to a world without null.","StartTime":"2019-01-30T11:40:00-08:00","EndTime":"2019-01-30T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":6,"Name":"Room 1"},"Speakers":[],"Id":72,"Title":"Much Ado about Nothing: A C# play in two acts - Act 1, starring Mads Torgersen","Abstract":"Understand the history and motivation behind introducing nullable types into an existing language.\r\nThis opening act is a deep design dive where you see the twists and turns of designing such a major feature that introduces potentially breaking changes into mountains of existing code. The stage is set for a major strategic shift in how you write C# code.","StartTime":"2019-01-30T10:20:00-08:00","EndTime":"2019-01-30T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":6},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":73,"Title":"Designing Nullable Reference Types in F#","Abstract":"Together for C#, F# will be incorporating nullability as a concept for .NET reference types. From the F# perspective, this fits with the default non-nullness of other F# types. But compatibility with existing code makes designing this a wild ride indeed! In this talk, we\u0027ll briefly explain what nullability means for F#, some existing mitigations for null in the language, and how we must consider compatibility with everything in mind. This deep dive into language design should give you an idea about what it is like designing a nontrivial feature that improves existing code while remaining compatible with it.","StartTime":"2019-01-30T15:00:00-08:00","EndTime":"2019-01-30T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":74,"Title":"Domain-Driven Design: Hidden Lessons from the Big Blue Book","Abstract":"We are entering an incredible new era of digital product development where users expect a seamless experience across all of their touchable, wearable, and voice-activated devices. How can we learn to develop software effectively in this new digital-by-default world? \r\n\r\nWhat if the answers are hidden away as secret messages in a 15 year old book?  \r\n\r\nAre bounded contexts really used to design loosely coupled code, or are they one of the most powerful organisation design tools used to enable autonomous, self-organising teams? Are core domains just academic jargon that get in the way of shiny technical practices like event sourcing, or is understanding business core domains one of the key differentiators between high-performing delivery teams and the rest of us?\r\n\r\nLet\u2019s go on an adventure and see if the big blue big and can help us in this brave new world.","StartTime":"2019-01-30T16:20:00-08:00","EndTime":"2019-01-30T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":75,"Title":"Panel discussion on the future of .NET","Abstract":"Panel discussion with four experts in the field on the current state of the art and the where .NET and related technologies are heading.\r\n\r\nWe will discuss cross platform development, new features, performance, versioning issues of .NET Core, what\u2019s going to happen with full framework, Blazor, how .NET stands up against competing technologies and where it is all going. \r\n\r\nYou won\u0027t cram more info into a session than this, come spend a great hour with us.","StartTime":"2019-01-30T17:40:00-08:00","EndTime":"2019-01-30T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":76,"Title":"CompSci and My Day Job","Abstract":"4 years ago I had a vague idea about Big-O notation and absolutely no clue about combinatorial problems. I knew what a SHA256 hash was (sort of) but I didn\u0027t know how it was created, nor that it didn\u0027t completely protect some of my data. I knew these things were important, but I never understood how they could apply to the types of applications I was building at the time. All of this changed as I put together the first two volumes of The Imposter\u0027s Handbook.\r\n\r\nI get to build a lot of fun things in my new position at Microsoft and I\u0027ve been surprised at how often I use the things I\u0027ve learned. Avoiding an obvious performance pitfall with Redis, for instance, because I understood the Big-O implications of the data structure I chose. Going back to ensure that a salt was added to a hash which stored sensitive data for an old client and, most importantly, discouraging a friend from trying to solve a problem that was very clearly NP-Complete.\r\n\r\nIn this talk I\u0027ll show you some of the fun things I\u0027ve learned (like mod(%) and remainder being different things) and how I\u0027ve applied them to the applications I create for my day job. You might know some of these concepts, or maybe you don\u0027t - either way: hopefully you\u0027ll leave with a few more tools under your belt to help you do your job better.has grown exponentially over the years, in both market size and developer frustration.\r\n \r\nIn this talk I will walk you through my first few months as an Azure Cloud Developer Engineer, tasked with getting to know Azure, from scratch, while building compelling applications with it. My job is two-fold: I get to show you why Azure is interesting and I then get to tell the Azure product team why it\u0027s not. This can be stressful. It can also be quite fun. I\u0027ll show you what I\u0027ve come up with and then you get to decide.","StartTime":"2019-01-31T09:00:00-08:00","EndTime":"2019-01-31T10:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":77,"Title":"Zero to Mobile Hero - Intro to Xamarin and Visual Studio Team Services","Abstract":"You can be faced with a nightmare of Xcode, Android Studio, Swift, Objective C, Swift and other options. This means not only learning multiple languages and frameworks but also having to support two different codebases for the same application. But Xamarin Native and Xamarin.Forms offer a powerful, cross-platform development solution for .NET developers looking to target smartphones, tablets, TV\u2019s, computers and IoT devices.\r\n\r\nIn this talk, Luce shares what Xamarin is including Native and Xamarin.Forms for both C# and F#, how to get started creating a simple HelloWorld app from scratch and a more complex example (will involve at least one Azure service including Cognitive Services for facial recognition). Also how to use Visual Studio Team Services for Continuous Integration and some awesome examples of apps written using Xamarin including ones used to save lives!\r\n\r\nLuce will take examples from xamarin.com\u002fcustomers as well as show this demo about how Xamarin was used alongside other technologies to aid with Skin Cancer prediction.\r\n\r\nThis talk will include slides, demos, code samples, live coding and the audience will walk away feeling like they too can create a mobile app in just a few minutes and carry their work around with them in their pocket or backpack!","StartTime":"2019-01-31T15:00:00-08:00","EndTime":"2019-01-31T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":78,"Title":"Let\u2019s Talk About Mental Health","Abstract":"It\u2019s a great time to be in technology. And yet despite the almost constant improvement in our tools, we somehow don\u2019t spend time talking about how to maintain our most important tool - the one between our ears.\r\n\r\nConstantly feeling worn down, experiencing anxiety over making decisions, and burning out are *not* just facts of a developer\u2019s life! They\u2019re challenges that can be dealt with. In this talk we\u2019ll cover the most common mental health challenges facing developers, and then learn about some techniques to supercharge your brain by improving your mental hygiene (whether you have a psychological disorder or not). Most importantly, you\u2019ll learn how to have a conversation with your coworkers (and other people in your life) about supporting each other and finding your best selves.\r\n","StartTime":"2019-01-31T13:40:00-08:00","EndTime":"2019-01-31T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":79,"Title":"Functional Web Programming in .Net with the SAFE Stack","Abstract":"The SAFE stack is an open source stack of libraries and tools which simplify the process of building type safe web applications which run on the cloud almost entirely in F#. \r\n\r\nIn this talk we\u0027ll explore the components of the SAFE stack and how they can be used to write web services and web sites in idiomatic F#. We\u0027ll see how we can manage this without needing to compromise and use object oriented frameworks whilst also still integrating with the existing ASP.Net, JavaScript and React ecosystems. We\u0027ll consider how we can write backend applications using Saturn on top of ASP.Net, we\u0027ll look at how to run F# in the web browser with Fable and we\u0027ll cover how we can develop interactive web applications leveraging the benefits of functional programming. This talk is aimed at developers who are looking to understand how they can use F# to effectively build full stack web applications.","StartTime":"2019-01-31T11:40:00-08:00","EndTime":"2019-01-31T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":80,"Title":"Serverless with Knative","Abstract":"When you build a serverless app, you either tie yourself to a cloud provider, or you end up building your own serverless stack. Knative provides a better choice. Knative extends Kubernetes to provide a set of middleware components (build, serving, events) for modern, source-centric, and container-based apps that can run anywhere. In this talk, we\u2019ll see how we can use Knative primitives to build a serverless app that utilizes the Machine Learning magic of the cloud.   ","StartTime":"2019-01-31T10:20:00-08:00","EndTime":"2019-01-31T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":81,"Title":"ASP.NET Core: The One Hour Makeover","Abstract":"The \u201cout of the box\u201d template has some lowest common denominator \u002f simplicity tradeoffs that make it easy to understand and work with in a variety of scenarios, but there are lots of performance and deployment tweaks that experienced developers should make before deploying. If you had one hour to tweak a new project, what would you do? I\u0027ll include some top open source libraries, best practices from ASP.NET Community Standup links, recommendations from the ASP.NET Core team, etc.","StartTime":"2019-01-31T09:00:00-08:00","EndTime":"2019-01-31T10:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":82,"Title":"Patterns for Resilient Architecture","Abstract":"We have traditionally built robust software systems by trying to avoid mistakes and by dodging failures when they occur in production or by testing parts of the system in isolation from one another. Modern methods and techniques take a very different approach based on resiliency, which promotes embracing failure instead of trying to avoid it. Resilient architectures enhance observability, leverage well-known patterns such as graceful degradation, timeouts and circuit breakers and embrace chaos engineering, a discipline that promotes breaking things on purpose in order to learn how to build more resilient systems. In this session, will review the most useful patterns for building resilient software systems and I will introduce chaos engineering methodology and especially show the audience how they can benefit from breaking things on purpose.","StartTime":"2019-01-30T17:40:00-08:00","EndTime":"2019-01-30T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":83,"Title":"The tech future is diverse","Abstract":"By 2020, there will be 4 times more devices connected to the Internet around the world. While technology impacts our everyday life in almost every way, the solutions we create fails to reflect our society or the world we live in. Instead, they often reinforce stereotypes, prejudice, and differences. In this talk, we will look into the lack of diversity and how diversity will make us more suited to solve problems and meet the needs of our society. We will address the culture in our communities, the reasons why minorities quit, and the importance of diversity in tech.","StartTime":"2019-01-30T16:20:00-08:00","EndTime":"2019-01-30T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":84,"Title":"Infrastructure as TypeScript","Abstract":"For almost a decade \u0022Infrastructure as Code\u0022 has been a DevOps buzzword - but the myriad tools in share a dirty little secret... there\u0027s no actual code! Few people like \u0022programming\u0022 YAML or JSON (even the human-friendly variants!), and even fewer like having to reverse-engineer ways to apply known good development practices to tools which resist it at all cost.\r\n\r\nSo, what if things were different,and programming infrastructure was more like real programming, with real programming languages like TypeScript? What if you defined Lambda functions by actually writing lambdas, created abstractions using complex types, and could take advantage of existing tools for modularity, linting, refactoring and testing?\r\n\r\nEnter Pulumi, an open-source deployment engine which enables all these things using TypeScript, Python or Go!\r\n\r\nIn this talk, we\u0027ll look at how you can write TypeScript code using Pulumi to provision traditional cloud infrastructure, manage Kubernetes and build portable \u0022serverless\u0022 applications - all with minimal YAML in sight! We\u0027ll look at deploying to multiple regions of the same cloud, and how to build abstractions allowing multi-cloud to be a reality.","StartTime":"2019-01-30T15:00:00-08:00","EndTime":"2019-01-30T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":85,"Title":"Icons and the Web: Symbols of the Modern Age","Abstract":"Icons have been a staple of software for decades, and come in as many varieties as the tools used to make them. From humble beginnings as precisely-pixelated pictograms, icons are now entering a renaissance of high-density displays, vector formats, and an almost cult-like following. In this session, you\u0027ll learn the inner workings of modern icon design, explore various techniques for adding symbology to your web apps, and discover how to bring your interfaces into the modern age!","StartTime":"2019-01-30T13:40:00-08:00","EndTime":"2019-01-30T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":86,"Title":"Distributed Tracing: How the Pros Debug Concurrent and Distributed Systems","Abstract":"As more and more developers move to distributed architectures such as micro services, distributed actor systems, and so forth it becomes increasingly complex to understand, debug, and diagnose.\r\n\r\nIn this talk we\u0027re going to introduce the emerging OpenTracing standard and talk about how you can instrument your applications to help visualize every operation, even across process and service boundaries. We\u0027ll also introduce Zipkin, one of the most popular implementations of the OpenTracing standard. ","StartTime":"2019-01-30T11:40:00-08:00","EndTime":"2019-01-30T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":87,"Title":"The promise of an async future awaits","Abstract":"The prominent trends in software a distributed programs powered by cooperating microservices, each operating independently. These distributed systems are asynchronous by their very nature. You will use asynchronous programming paradigms to build these systesms.\r\n\r\nIn this session, you\u0027ll see the most common mistakes developers make using async and await in C#. You\u0027ll see the practices you should use instead. This session also provides a deep dive into async streams, a new feature introduced in C# 8.\r\n\r\nYou\u0027re building asynchronous programs now. Make sure you\u0027re building them for the future.","StartTime":"2019-02-01T15:00:00-08:00","EndTime":"2019-02-01T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2},{"Track":{"Id":4,"Name":"Room 3"},"Speakers":[],"Id":88,"Title":"Observability and the Development Process","Abstract":"Historically, monitoring has been thought of as an afterthought of the software development cycle: something owned by the ops side of the room. But instead of trying to predict the various ways something might go sideways right before release and crafting dashboards to prepare, what might it look like to use answers about our system to figure out what to build, and how to build it, and whom for?\r\n\r\nObservability is the practice of understanding the internal state of a system via knowledge of its external outputs -- and is something that should be built into the process of crafting software from the very beginning.\r\n\r\nIn this talk, we\u0027ll discuss what this might look like in practice by using Honeycomb as a case study: how we rely on visibility into our system to inform planning during the development process, to observe the impact of new changes during and after release, and, of course, debug. We\u0027ll start by describing the problems faced by a SaaS platform like ours, then run through some specific instrumentation practices that we love and have used successfully to gain the visibility we need into our system\u2019s day-to-day operations.","StartTime":"2019-01-30T10:20:00-08:00","EndTime":"2019-01-30T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":4},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":89,"Title":"Tabs, spaces and salaries: a data science detective story","Abstract":"In data science, sometimes you stumble across an intriguing property in the data. I will tell you a story of a mysterious correlation - from the StackOverflow developer survey it seems that developers who use spaces have higher salaries than those who use tabs. Correlation doesn\u0027t mean causation: using spaces won\u0027t suddenly increase your salary. But what does it all mean? Follow me into a detective investigation that will show you how to approach complex data science problems. I will show you some of the perils of correlation, model fitting and biases - how they can be dangerous and how to avoid these traps. And you\u0027ll also find how profitable your indentation style really is.","StartTime":"2019-02-01T15:00:00-08:00","EndTime":"2019-02-01T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":90,"Title":"Society (n\u002b1).0: smashing the patriarchy and other ways of changing the world","Abstract":"Software engineers are fond of casually mentioning how their work changes the world. But have you thought about what you want the world to look like after you\u0027ve changed it? Do you want to smash the patriarchy [1]? Save the planet? Make Furbies cool again? Is technology really the only tool at your disposal?\r\nThis session is a call to both discovery and action. You already care about Furbies, but what do you not know you don\u0027t know about them? Have you looked at Furbies from someone else\u0027s perspective? Once your eyes are wide open, what\u0027s the next step? How would a Furby smash the patriarchy? Let\u0027s learn to be better together, and make a difference in the world today.\r\n\r\nFootnote 1: Our system of society norms which puts everyone in boxes that are hard to escape [2]. The boxes surrounding straight white men can be extremely comfortable ones, but more limiting than you might realize.\r\n\r\nFootnote 2: Furbies are pretty easy to get out of boxes; humans, not so much.","StartTime":"2019-02-01T13:40:00-08:00","EndTime":"2019-02-01T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":91,"Title":"The Functional Programmer\u0027s Toolkit","Abstract":"The functional programming community has a number of patterns with strange names such as monads, monoids, functors, and catamorphisms.\r\n \r\nIn this beginner-friendly talk, we\u0027ll demystify these techniques and see how they all fit together into a small but versatile \u0022tool kit\u0022. \r\n\r\nWe\u0027ll then see how the tools in this tool kit can be applied to a wide variety of programming problems, such as handling missing data, working with lists, and implementing the functional equivalent of dependency injection. ","StartTime":"2019-02-01T11:40:00-08:00","EndTime":"2019-02-01T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":92,"Title":"Ctrl-Alt-Del: Learning to Love Legacy Code","Abstract":"The world runs on legacy code. For every greenfield progressive web app with 100% test coverage, there are literally hundreds of archaic line-of-business applications running in production - systems with no tests, no documentation, built using out-of-date tools, languages and platforms. It\u2019s the code developers love to hate: it\u2019s not exciting, it\u2019s not shiny, and it won\u2019t look good on your CV - but the world runs on legacy code, and, as developers, if we\u2019re going to work on anything that actually matters, we\u2019re going to end up dealing with legacy. To work effectively with this kind of system, we need to answer some fundamental questions: why was it built this way in the first place? What\u0027s happened over the years it\u0027s been running in production? And, most importantly, how can we develop our understanding of legacy codebases to the point where we\u0027re confident that we can add features, fix bugs and improve performance without making things worse?\r\n\r\nDylan worked on the web application stack at Spotlight (www.spotlight.com) from 2000 until 2018 - first as a supplier, then as webmaster, then as systems architect. Working on the same codebase for nearly two decades has given him an unusual perspective on how applications go from being cutting-edge to being \u0027legacy\u0027. In this talk, he\u0027ll share tips, patterns and techniques that he\u0027s learned from helping new developers work with a large and unfamiliar codebase. We\u0027ll talk about virtualisation, refactoring tools, and how to bring legacy code under control using continuous integration and managed deployments. We\u0027ll explore creative ways to use common technologies like DNS to create more productive development environments. We\u0027ll talk about how to bridge the gap between automated testing and systems monitoring, how to improve visibility and transparency of your production systems - and why good old Ctrl-Alt-Del might be the secret to unlocking the potential of your legacy codebase.","StartTime":"2019-02-01T10:20:00-08:00","EndTime":"2019-02-01T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":93,"Title":".NET Rocks Live on Software Feature Selection with Christine Yen","Abstract":"Join Carl and Richard from .NET Rocks as they chat with Christine Yen from Honeycomb about how you select features to build in your applications.\r\n\r\nAfter the first version of software is out the door, what do you choose nest? Christine has a background in instrumenting applications to understand what people use \u2013 is that the best way to pick features? What about the vision of your own designers? What about asking the users? Bring your questions and come to this live recording of .NET Rocks!","StartTime":"2019-01-31T17:40:00-08:00","EndTime":"2019-01-31T18:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":94,"Title":"A practical guide to deep learning","Abstract":"Machine Learning is one of the fastest growing areas of computer science, and Deep Learning (neural networks) is growing even faster, with lots of data and computing power at our fingertips. \r\nThis talk is a practical (very little math) guide to computer vision and deep learning.\r\n\r\nWe will look at a deep learning project from start to finish, look at how to program and train a neural network and gradually refine it using some tips and tricks that you can steal for your future deep learning projects.","StartTime":"2019-01-31T16:20:00-08:00","EndTime":"2019-01-31T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":95,"Title":"Scaling microservices with Message queues, .NET and Kubernetes","Abstract":"When you design and build applications at scale, you deal with two significant challenges: scalability \u0026 robustness. You should design your service so that even if it is subject to intermittent heavy loads, it continues to operate reliably. But how do you build such applications? And how do you deploy an application that scales dynamically? Kubernetes has a feature called autoscaler where instances of your applications are increased or decreased automatically based on metrics that you define.\r\n\r\nIn this talk, you\u2019ll learn how to design, package \u0026 deploy reliable .NET applications to Kubernetes \u0026 decouple several components using a message broker. You will also learn how to set autoscaling rules to cope with an increasing influx of messages in the queue.","StartTime":"2019-01-31T15:00:00-08:00","EndTime":"2019-01-31T16:00:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":96,"Title":"Small Steps, Giant Leaps: Engineering Lessons from Apollo","Abstract":"On July 20th, 1969, Neil Armstrong and Buzz Aldrin became the first humans to set foot on another world. Billions of people tuned in live to watch Apollo 11 land on the moon, but behind Armstrong\u2019s \u2018one small step\u2019 lay a decade of astonishing innovation. The Apollo programme wasn\u2019t just about aerospace engineering; it was also responsible for revolutionary new approaches in project management and quality control; new ways of thinking about testing strategies and communications - not to mention delivering a completely bespoke set of hardware and software components that would play a vital role at every stage of the programme.\r\n\r\nAs we celebrate the fiftieth anniversary of the moon landings, let\u2019s take a look back at the technology, processes and practises behind the Apollo programme - and how many of those techniques are still relevant today. What is \u2018all-up testing\u2019, and how does it apply to modern software development? Who was the CAPCOM - and what can they teach us about product ownership? How do you manage a distributed team of nearly half a million people? How do you manage scope creep when you\u2019re working to a hard deadline with the whole world watching you? And how DO you fly to the moon and back using a computer with less processing power than an Apple II?","StartTime":"2019-01-31T13:40:00-08:00","EndTime":"2019-01-31T14:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":97,"Title":"The State of C# - What Have I Missed?","Abstract":"One of the most popular programming language on the market is getting even better. With every iteration of C# we get more and more features that are meant to make our lives as developers a lot easier. Support for writing (hopefully) better and more readable asynchronous code, being able to do pattern matching, tuples, deconstruction and much more. These are just a few of the many additions to C# that we\u2019ve seen lately.\r\n\r\nJoin me in this session to explore what you\u2019ve missed in one of the most fun to work with programming language on the market; C#!","StartTime":"2019-01-31T11:40:00-08:00","EndTime":"2019-01-31T12:40:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":98,"Title":"Leadership Guide for the Reluctant Leader","Abstract":"Regardless of the technology you know, regardless of the job title you have, you have amazing potential to impact your workplace, community, and beyond.\r\n\r\nIn this talk, I\u2019ll share a few candid stories of my career failures\u2026 I mean\u2026 learning opportunities. We\u2019ll start by debunking the myth that leadership == management. Next, we\u2019ll talk about some the attributes, behaviors and skills of good leaders. Last, we\u2019ll cover some practical steps and resources to accelerate your journey.\r\n\r\nYou\u2019ll walk away with some essential leadership skills I believe anyone can develop, and a good dose of encouragement to be more awesome!","StartTime":"2019-01-31T10:20:00-08:00","EndTime":"2019-01-31T11:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":5,"Name":"Room 2"},"Speakers":[],"Id":99,"Title":"Four Languages from Forty Years Ago","Abstract":"The 1970\u0027s were a golden age for new programming languages, but do they have any relevance to programming today? Can we still learn from them?\r\n\r\nIn this talk, we\u0027ll look at four languages designed over forty years ago --  SQL, Prolog, ML, and Smalltalk -- and discuss their philosophy and approach to programming, which is very different from most popular languages today.\r\n\r\nWe\u0027ll come away with some practical principles that are still very applicable to modern development. And you might discover your new favorite programming paradigm!\r\n","StartTime":"2019-02-01T16:20:00-08:00","EndTime":"2019-02-01T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":5},{"Track":{"Id":2,"Name":"Room 6"},"Speakers":[],"Id":100,"Title":"A Piece of Git","Abstract":"You use Git, and maybe you even know the internals: all those blobs, trees, commits and refs make it look like Git is sane, well-designed and organized system.  But is it, really?\r\n\r\nAfter all, why are there three different kinds of rebase?  What makes merge recursive?  And what\u0027s the deal with line ending normalization?  Edward Thomson shows off some of the weirder idiosyncrasies in Git and why it works the way it does.","StartTime":"2019-02-01T16:20:00-08:00","EndTime":"2019-02-01T17:20:00-08:00","Duration":{"Ticks":36000000000,"Days":0,"Hours":1,"Milliseconds":0,"Minutes":0,"Seconds":0,"TotalDays":0.041666666666666664,"TotalHours":1,"TotalMilliseconds":3600000,"TotalMinutes":60,"TotalSeconds":3600},"TrackId":2}]
