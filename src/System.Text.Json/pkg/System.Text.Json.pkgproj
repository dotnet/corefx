<Project DefaultTargets="Build">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
  <ItemGroup>
    <!-- We dont have a project reference to the ref project because we dont ship a ref in the package. -->
    <ProjectReference Include="..\src\System.Text.Json.csproj">
      <SupportedFramework>net461;netcoreapp2.0;uap10.0.16299;$(AllXamarinFrameworks)</SupportedFramework>
    </ProjectReference>
    <!-- Since UAP and .NETCoreApp are package based we still want to enable
     OOBing libraries that happen to overlap with their framework package.
     This avoids us having to lock the API in our NuGet packages just 
     to match what shipped inbox: since we can provide a new library 
     we can update it to add API without raising the netstandard version. -->
    <ValidatePackageSuppression Include="TreatAsOutOfBox">
      <Value>.NETCoreApp;UAP</Value>
    </ValidatePackageSuppression>
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
</Project>