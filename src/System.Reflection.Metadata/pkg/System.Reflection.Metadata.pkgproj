<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <!-- we need to be supported on pre-nuget-3 platforms (Dev12, Dev11, etc) -->
    <MinClientVersion>2.8.6</MinClientVersion>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\src\System.Reflection.Metadata.csproj">
      <SupportedFramework>net45;netcore45;netcoreapp1.0;wpa81;$(AllXamarinFrameworks)</SupportedFramework>
    </ProjectReference>
    <FilePackageDependency Include="System.Collections.Immutable">
      <TargetFramework>portable-net45+win8</TargetFramework>
      <Version>1.1.37</Version>
    </FilePackageDependency>
    
    <!-- Since UAP and .NETCoreApp are package based we still want to enable
         OOBing libraries that happen to overlap with their framework package.
         This avoids us having to lock the API in our NuGet packages just 
         to match what shipped inbox: since we can provide a new library 
         we can update it to add API without raising the netstandard version. -->
    <ValidatePackageSuppression Include="TreatAsOutOfBox">
      <Value>.NETCoreApp;UAP</Value>
    </ValidatePackageSuppression>
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
</Project>