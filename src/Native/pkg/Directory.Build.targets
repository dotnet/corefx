<Project>

  <!-- Add path globs specific to native binaries to exclude unnecessary files from packages. -->
  <Choose>
    <When Condition="$(PackageTargetRuntime.StartsWith('win'))" />
    <When Condition="$(PackageTargetRuntime.StartsWith('osx'))">
      <PropertyGroup>
        <LibraryFileExtension>.dylib</LibraryFileExtension>
        <SymbolFileExtension>.dwarf</SymbolFileExtension>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <LibraryFileExtension>.so</LibraryFileExtension>
        <SymbolFileExtension>.dbg</SymbolFileExtension>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <ItemGroup>
    <AdditionalLibPackageExcludes Condition="'$(SymbolFileExtension)' != ''" Include="%2A%2A\%2A$(SymbolFileExtension)" />
    <AdditionalSymbolPackageExcludes Condition="'$(LibraryFileExtension)' != ''" Include="%2A%2A\%2A.a;%2A%2A\%2A$(LibraryFileExtension)" />
  </ItemGroup>

  <ItemGroup>
    <File Include="@(NativeFile)" />
  </ItemGroup>

  <Target Name="GetSymbolPackageFiles" BeforeTargets="GetPackageFiles">
    <ItemGroup>
      <!-- On Windows, trim ".dll" before adding ".pdb". On xplat, the symbol extension is simply appended. -->
      <NativeDllFileWithoutExtension Include="@(NativeFile -> '%(RootDir)%(Directory)%(Filename)')" Condition="'%(NativeFile.Extension)'=='.dll'" />
      <NativeSoFile Include="@(NativeFile)" Condition="'%(NativeFile.Extension)'=='.so'" />
      <NativeDylibFile Include="@(NativeFile)" Condition="'%(NativeFile.Extension)'=='.dylib'" />

      <WindowsSymbolFile Include="@(NativeDllFileWithoutExtension -> '%(Identity).pdb')" />
      <NonWindowsSymbolFile Include="@(NativeSoFile -> '%(Identity).dbg')" />
      <NonWindowsSymbolFile Include="@(NativeDylibFile -> '%(Identity).dwarf')" />

      <ExistingWindowsSymbolFile Include="@(WindowsSymbolFile)" Condition="Exists('%(Identity)')" />
      <ExistingNonWindowsSymbolFile Include="@(NonWindowsSymbolFile)" Condition="Exists('%(Identity)') AND '$(SkipPackagingXplatSymbols)'!='true'" />

      <File Include="@(ExistingWindowsSymbolFile);@(ExistingNonWindowsSymbolFile)">
        <IsSymbolFile>true</IsSymbolFile>
      </File>
    </ItemGroup>

    <PropertyGroup>
      <NeedsPlaceholderPdb Condition="'@(ExistingNonWindowsSymbolFile)'!='' AND '@(ExistingWindowsSymbolFile)'==''">true</NeedsPlaceholderPdb>
    </PropertyGroup>

    <ItemGroup>
      <File Include="$(MSBuildThisFileDirectory)\_.pdb" Condition="'$(NeedsPlaceholderPdb)'=='true' AND '$(PackageTargetRuntime)'!=''">
        <TargetPath>runtimes/$(PackageTargetRuntime)/native</TargetPath>
        <IsSymbolFile>true</IsSymbolFile>
      </File>
    </ItemGroup>
  </Target>

  <Import Project="..\..\Directory.Build.targets" />
</Project>
