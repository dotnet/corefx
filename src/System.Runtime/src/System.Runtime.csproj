<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <ProjectGuid>{56B9D0A9-44D3-488E-8B42-C14A6E30CAB2}</ProjectGuid>
    <AssemblyName>System.Runtime</AssemblyName>
    <IsPartialFacadeAssembly>true</IsPartialFacadeAssembly>
    <GenFacadesIgnoreMissingTypes Condition="'$(TargetsAOT)'=='true' OR '$(TargetGroup)' == 'uap'">true</GenFacadesIgnoreMissingTypes>
    <Configurations>netcoreapp-Unix-Debug;netcoreapp-Unix-Release;netcoreapp-Windows_NT-Debug;netcoreapp-Windows_NT-Release;uap-Windows_NT-Debug;uap-Windows_NT-Release;uapaot-Windows_NT-Debug;uapaot-Windows_NT-Release</Configurations>
    <NullableContextOptions>enable</NullableContextOptions>
  </PropertyGroup>
  <ItemGroup>
    <!-- Compiler throws error if you try to use System.Void and instructs you to use void keyword instead. So we have manually added a typeforward for this type. -->  
    <GenFacadesOmitType Include="System.Void" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="System\Action.cs" />
    <Compile Include="System\Collections\Generic\ISet.cs" />
    <Compile Include="System\Function.cs" />
    <Compile Include="System\IO\FileAttributes.cs" />
    <Compile Include="System\IO\HandleInheritability.cs" />
    <Compile Include="System\LazyOfTTMetadata.cs" />
    <Compile Include="System\Reflection\RuntimeReflectionExtensions.cs" />
    <Compile Include="System\Runtime\CompilerServices\EnumeratorCancellationAttribute.cs" />
    <Compile Include="System\Runtime\ConstrainedExecution\PrePrepareMethodAttribute.cs" />
    <Compile Include="System\Runtime\NgenServicingAttributes.cs" />
    <Compile Include="System\System.Runtime.Typeforwards.cs" />
    <Compile Include="System\Threading\WaitHandleExtensions.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\System.Private.Uri\src\System.Private.Uri.csproj" />
  </ItemGroup>
  <ItemGroup>
    <ReferenceFromRuntime Include="System.Private.CoreLib" />
  </ItemGroup>
</Project>
