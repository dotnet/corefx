<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Xml_InvalidOperation" xml:space="preserve">
    <value>Operation is not valid due to the current state of the object.</value>
  </data>
  <data name="Xml_InvalidNmToken" xml:space="preserve">
    <value>Invalid NmToken value '{0}'.</value>
  </data>
  <data name="Xml_InvalidNameChars" xml:space="preserve">
    <value>Invalid name character in '{0}'.</value>
  </data>
  <data name="XmlMissingType" xml:space="preserve">
    <value>Invalid serialization assembly: Required type {0} cannot be found in the generated assembly '{1}'.</value>
  </data>
  <data name="XmlSerializerUnsupportedType" xml:space="preserve">
    <value>{0} is an unsupported type. Please use [XmlIgnore] attribute to exclude members of this type from serialization graph.</value>
  </data>
  <data name="XmlSerializerUnsupportedMember" xml:space="preserve">
    <value>Cannot serialize member '{0}' of type '{1}', see inner exception for more details.</value>
  </data>
  <data name="XmlUnsupportedTypeKind" xml:space="preserve">
    <value>The type {0} may not be serialized.</value>
  </data>
  <data name="XmlUnsupportedIDictionary" xml:space="preserve">
    <value>The type {0} is not supported because it implements IDictionary.</value>
  </data>
  <data name="XmlUnsupportedIDictionaryDetails" xml:space="preserve">
    <value>Cannot serialize member {0} of type {1}, because it implements IDictionary.</value>
  </data>
  <data name="XmlConstructorInaccessible" xml:space="preserve">
    <value>{0} cannot be serialized because it does not have a parameterless constructor.</value>
  </data>
  <data name="XmlTypeInaccessible" xml:space="preserve">
    <value>{0} is inaccessible due to its protection level. Only public types can be processed.</value>
  </data>
  <data name="XmlTypeStatic" xml:space="preserve">
    <value>{0} cannot be serialized. Static types cannot be used as parameters or return types.</value>
  </data>
  <data name="XmlNoDefaultAccessors" xml:space="preserve">
    <value>You must implement a default accessor on {0} because it inherits from ICollection.</value>
  </data>
  <data name="XmlNoAddMethod" xml:space="preserve">
    <value>To be XML serializable, types which inherit from {2} must have an implementation of Add({1}) at all levels of their inheritance hierarchy. {0} does not implement Add({1}).</value>
  </data>
  <data name="XmlReadOnlyPropertyError" xml:space="preserve">
    <value>Cannot deserialize type '{0}' because it contains property '{1}' which has no public setter.</value>
  </data>
  <data name="XmlAttributeSetAgain" xml:space="preserve">
    <value>'{0}.{1}' already has attributes.</value>
  </data>
  <data name="XmlReflectionError" xml:space="preserve">
    <value>There was an error reflecting '{0}'.</value>
  </data>
  <data name="XmlTypeReflectionError" xml:space="preserve">
    <value>There was an error reflecting type '{0}'.</value>
  </data>
  <data name="XmlPropertyReflectionError" xml:space="preserve">
    <value>There was an error reflecting property '{0}'.</value>
  </data>
  <data name="XmlFieldReflectionError" xml:space="preserve">
    <value>There was an error reflecting field '{0}'.</value>
  </data>
  <data name="XmlInvalidDataTypeUsage" xml:space="preserve">
    <value>'{0}' is an invalid value for the {1} property. The property may only be specified for primitive types.</value>
  </data>
  <data name="XmlInvalidXsdDataType" xml:space="preserve">
    <value>Value '{0}' cannot be used for the {1} property. The datatype '{2}' is missing.</value>
  </data>
  <data name="XmlDataTypeMismatch" xml:space="preserve">
    <value>'{0}' is an invalid value for the {1} property. {0} cannot be converted to {2}.</value>
  </data>
  <data name="XmlIllegalTypeContext" xml:space="preserve">
    <value>{0} cannot be used as: 'xml {1}'.</value>
  </data>
  <data name="XmlUdeclaredXsdType" xml:space="preserve">
    <value>The type, {0}, is undeclared.</value>
  </data>
  <data name="XmlInvalidConstantAttribute" xml:space="preserve">
    <value>Only XmlEnum may be used on enumerated constants.</value>
  </data>
  <data name="XmlIllegalAttributesArrayAttribute" xml:space="preserve">
    <value>XmlAttribute cannot be used in conjunction with XmlElement, XmlText, XmlAnyElement, XmlArray, or XmlArrayItem.</value>
  </data>
  <data name="XmlIllegalElementsArrayAttribute" xml:space="preserve">
    <value>XmlElement, XmlText, and XmlAnyElement cannot be used in conjunction with XmlAttribute, XmlArray, or XmlArrayItem.</value>
  </data>
  <data name="XmlIllegalArrayArrayAttribute" xml:space="preserve">
    <value>XmlArray and XmlArrayItem cannot be used in conjunction with XmlAttribute, XmlElement, XmlText, or XmlAnyElement.</value>
  </data>
  <data name="XmlIllegalAttribute" xml:space="preserve">
    <value>For non-array types, you may use the following attributes: XmlAttribute, XmlText, XmlElement, or XmlAnyElement.</value>
  </data>
  <data name="XmlIllegalType" xml:space="preserve">
    <value>The type for {0} may not be specified for primitive types.</value>
  </data>
  <data name="XmlIllegalAttrOrText" xml:space="preserve">
    <value>Cannot serialize member '{0}' of type {1}. XmlAttribute/XmlText cannot be used to encode complex types.</value>
  </data>
  <data name="XmlIllegalAttrOrTextInterface" xml:space="preserve">
    <value>Cannot serialize member '{0}' of type {1}. XmlAttribute/XmlText cannot be used to encode types implementing {2}.</value>
  </data>
  <data name="XmlIllegalAttributeFlagsArray" xml:space="preserve">
    <value>XmlAttribute cannot be used to encode array of {1}, because it is marked with FlagsAttribute.</value>
  </data>
  <data name="XmlIllegalAnyElement" xml:space="preserve">
    <value>Cannot serialize member of type {0}: XmlAnyElementAttribute attribute is used incorrectly.</value>
  </data>
  <data name="XmlInvalidIsNullable" xml:space="preserve">
    <value>IsNullable may not be 'true' for value type {0}.  Please consider using Nullable&lt;{0}&gt; instead.</value>
  </data>
  <data name="XmlInvalidNotNullable" xml:space="preserve">
    <value>IsNullable may not be set to 'false' for a Nullable&lt;{0}&gt; type. Consider using '{0}' type or removing the IsNullable property from the {1} attribute.</value>
  </data>
  <data name="XmlInvalidFormUnqualified" xml:space="preserve">
    <value>The Form property may not be 'Unqualified' when an explicit Namespace property is present.</value>
  </data>
  <data name="XmlHiddenMember" xml:space="preserve">
    <value>Member {0}.{1} of type {2} hides base class member {3}.{4} of type {5}. Use XmlElementAttribute or XmlAttributeAttribute to specify a new name.</value>
  </data>
  <data name="XmlInvalidXmlOverride" xml:space="preserve">
    <value>Member '{0}.{1}' hides inherited member '{2}.{3}', but has different custom attributes.</value>
  </data>
  <data name="XmlMissingMethodEnum" xml:space="preserve">
    <value>The method for enum {0} is missing.</value>
  </data>
  <data name="XmlInvalidDefaultValue" xml:space="preserve">
    <value>Value '{0}' cannot be converted to {1}.</value>
  </data>
  <data name="XmlUnknownNode" xml:space="preserve">
    <value>{0} was not expected.</value>
  </data>
  <data name="XmlUnknownConstant" xml:space="preserve">
    <value>Instance validation error: '{0}' is not a valid value for {1}.</value>
  </data>
  <data name="XmlSerializeError" xml:space="preserve">
    <value>There is an error in the XML document.</value>
  </data>
  <data name="XmlSerializeErrorDetails" xml:space="preserve">
    <value>There is an error in XML document ({0}, {1}).</value>
  </data>
  <data name="XmlUnknownType" xml:space="preserve">
    <value>The specified type was not recognized: name</value>
  </data>
  <data name="XmlAbstractType" xml:space="preserve">
    <value>The specified type is abstract: name</value>
  </data>
  <data name="XmlMethodTypeNameConflict" xml:space="preserve">
    <value>The XML element '{0}' from namespace '{1}' references a method and a type. Change the method's message name or change the type's root element using the XmlRootAttribute.</value>
  </data>
  <data name="XmlCannotReconcileAccessor" xml:space="preserve">
    <value>The top XML element '{0}' from namespace '{1}' references distinct types {2} and {3}. Use XML attributes to specify another XML name or namespace for the element or types.</value>
  </data>
  <data name="XmlCannotReconcileAttributeAccessor" xml:space="preserve">
    <value>The global XML attribute '{0}' from namespace '{1}' references distinct types {2} and {3}. Use XML attributes to specify another XML name or namespace for the attribute or types.</value>
  </data>
  <data name="XmlCannotReconcileAccessorDefault" xml:space="preserve">
    <value>The global XML item '{0}' from namespace '{1}' has mismatch default value attributes: '{2}' and '{3}' and cannot be mapped to the same schema item. Use XML attributes to specify another XML name or namespace for one of the items, or make sure that the default values match.</value>
  </data>
  <data name="XmlInvalidTypeAttributes" xml:space="preserve">
    <value>XmlRoot and XmlType attributes may not be specified for the type {0}.</value>
  </data>
  <data name="XmlInvalidAttributeUse" xml:space="preserve">
    <value>XML attributes may not be specified for the type {0}.</value>
  </data>
  <data name="XmlTypesDuplicate" xml:space="preserve">
    <value>Types '{0}' and '{1}' both use the XML type name, '{2}', from namespace '{3}'. Use XML attributes to specify a unique XML name and/or namespace for the type.</value>
  </data>
  <data name="XmlInvalidSerializable" xml:space="preserve">
    <value>The type {0} may not be used in this context. To use {0} as a parameter, return type, or member of a class or struct, the parameter, return type, or member must be declared as type {0} (it cannot be object). Objects of type {0} may not be used in untyped collections.</value>
  </data>
  <data name="XmlInvalidUseOfType" xml:space="preserve">
    <value>The type {0} may not be used in this context.</value>
  </data>
  <data name="XmlUnxpectedType" xml:space="preserve">
    <value>The type {0} was not expected. Use the XmlInclude attribute to specify types that are not known statically.</value>
  </data>
  <data name="XmlUnknownAnyElement" xml:space="preserve">
    <value>The XML element '{0}' from namespace '{1}' was not expected. The XML element name and namespace must match those provided via XmlAnyElementAttribute(s).</value>
  </data>
  <data name="XmlInvalidReturnPosition" xml:space="preserve">
    <value>The return value must be the first member.</value>
  </data>
  <data name="XmlInvalidAttributeType" xml:space="preserve">
    <value>{0} may not be used on parameters or return values when they are not wrapped.</value>
  </data>
  <data name="XmlInvalidIdentifier" xml:space="preserve">
    <value>Identifier '{0}' is not CLS-compliant.</value>
  </data>
  <data name="XmlGenError" xml:space="preserve">
    <value>There was an error generating the XML document.</value>
  </data>
  <data name="XmlInvalidXmlns" xml:space="preserve">
    <value>Invalid namespace attribute: xmlns:{0}</value>
  </data>
  <data name="XmlCircularReference" xml:space="preserve">
    <value>A circular reference was detected while serializing an object of type {0}.</value>
  </data>
  <data name="XmlNoSerializableMembers" xml:space="preserve">
    <value>Cannot serialize object of type '{0}'. The object does not have serializable members.</value>
  </data>
  <data name="XmlReadOnlyCollection" xml:space="preserve">
    <value>Could not deserialize {0}. Parameterless constructor is required for collections and enumerators.</value>
  </data>
  <data name="XmlDuplicateElementName" xml:space="preserve">
    <value>The XML element '{0}' from namespace '{1}' is already present in the current scope. Use XML attributes to specify another XML name or namespace for the element.</value>
  </data>
  <data name="XmlDuplicateAttributeName" xml:space="preserve">
    <value>The XML attribute '{0}' from namespace '{1}' is already present in the current scope. Use XML attributes to specify another XML name or namespace for the attribute.</value>
  </data>
  <data name="XmlUndefinedAlias" xml:space="preserve">
    <value>Namespace prefix '{0}' is not defined.</value>
  </data>
  <data name="XmlChoiceIdentifierType" xml:space="preserve">
    <value>Type of choice identifier '{0}' is inconsistent with type of '{1}'. Please use {2}.</value>
  </data>
  <data name="XmlChoiceIdentifierArrayType" xml:space="preserve">
    <value>Type of choice identifier '{0}' is inconsistent with type of '{1}'. Please use array of {2}.</value>
  </data>
  <data name="XmlChoiceIdentifierTypeEnum" xml:space="preserve">
    <value>Choice identifier '{0}' must be an enum.</value>
  </data>
  <data name="XmlChoiceIdentiferMemberMissing" xml:space="preserve">
    <value>Missing '{0}' member needed for serialization of choice '{1}'.</value>
  </data>
  <data name="XmlChoiceIdentiferAmbiguous" xml:space="preserve">
    <value>Ambiguous choice identifier. There are several members named '{0}'.</value>
  </data>
  <data name="XmlChoiceIdentiferMissing" xml:space="preserve">
    <value>You need to add {0} to the '{1}' member.</value>
  </data>
  <data name="XmlChoiceMissingValue" xml:space="preserve">
    <value>Type {0} is missing enumeration value '{1}' for element '{2}' from namespace '{3}'.</value>
  </data>
  <data name="XmlChoiceMissingAnyValue" xml:space="preserve">
    <value>Type {0} is missing enumeration value '##any:' corresponding to XmlAnyElementAttribute.</value>
  </data>
  <data name="XmlChoiceMismatchChoiceException" xml:space="preserve">
    <value>Value of {0} mismatches the type of {1}; you need to set it to {2}.</value>
  </data>
  <data name="XmlArrayItemAmbiguousTypes" xml:space="preserve">
    <value>Ambiguous types specified for member '{0}'.  Items '{1}' and '{2}' have the same type.  Please consider using {3} with {4} instead.</value>
  </data>
  <data name="XmlUnsupportedInterface" xml:space="preserve">
    <value>Cannot serialize interface {0}.</value>
  </data>
  <data name="XmlUnsupportedInterfaceDetails" xml:space="preserve">
    <value>Cannot serialize member {0} of type {1} because it is an interface.</value>
  </data>
  <data name="XmlUnsupportedRank" xml:space="preserve">
    <value>Cannot serialize object of type {0}. Multidimensional arrays are not supported.</value>
  </data>
  <data name="XmlUnsupportedInheritance" xml:space="preserve">
    <value>Using {0} as a base type for a class is not supported by XmlSerializer.</value>
  </data>
  <data name="XmlIllegalMultipleText" xml:space="preserve">
    <value>Cannot serialize object of type '{0}' because it has multiple XmlText attributes. Consider using an array of strings with XmlTextAttribute for serialization of a mixed complex type.</value>
  </data>
  <data name="XmlIllegalMultipleTextMembers" xml:space="preserve">
    <value>XmlText may not be used on multiple parameters or return values.</value>
  </data>
  <data name="XmlIllegalArrayTextAttribute" xml:space="preserve">
    <value>Member '{0}' cannot be encoded using the XmlText attribute. You may use only the XmlText attribute to encode certain types such as primitives, enumerations, or arrays of strings.</value>
  </data>
  <data name="XmlIllegalTypedTextAttribute" xml:space="preserve">
    <value>Cannot serialize object of type '{0}'. Consider changing type of XmlText member '{0}.{1}' from {2} to string or string array.</value>
  </data>
  <data name="XmlIllegalSimpleContentExtension" xml:space="preserve">
    <value>Cannot serialize object of type '{0}'. Base type '{1}' has simpleContent and can only be extended by adding XmlAttribute elements. Please consider changing XmlText member of the base class to string array.</value>
  </data>
  <data name="XmlInvalidCast" xml:space="preserve">
    <value>Cannot assign object of type {0} to an object of type {1}.</value>
  </data>
  <data name="XmlInvalidCastWithId" xml:space="preserve">
    <value>Cannot assign object of type {0} to an object of type {1}. The error occurred while reading node with id</value>
  </data>
  <data name="XmlInvalidNullCast" xml:space="preserve">
    <value>Cannot assign null value to an object of type {1}.</value>
  </data>
  <data name="XmlMultipleXmlns" xml:space="preserve">
    <value>Cannot serialize object of type '{0}' because it has multiple XmlNamespaceDeclarations attributes.</value>
  </data>
  <data name="XmlMultipleXmlnsMembers" xml:space="preserve">
    <value>XmlNamespaceDeclarations may not be used on multiple parameters or return values.</value>
  </data>
  <data name="XmlXmlnsInvalidType" xml:space="preserve">
    <value>Cannot use XmlNamespaceDeclarations attribute on member '{0}' of type {1}.  This attribute is only valid on members of type {2}.</value>
  </data>
  <data name="XmlSoleXmlnsAttribute" xml:space="preserve">
    <value>XmlNamespaceDeclarations attribute cannot be used in conjunction with any other custom attributes.</value>
  </data>
  <data name="XmlConstructorHasSecurityAttributes" xml:space="preserve">
    <value>The type '{0}' cannot be serialized because its parameterless constructor is decorated with declarative security permission attributes. Consider using imperative asserts or demands in the constructor.</value>
  </data>
  <data name="XmlInvalidChoiceIdentifierValue" xml:space="preserve">
    <value>Invalid or missing value of the choice identifier '{1}' of type '{0}[]'.</value>
  </data>
  <data name="XmlAnyElementDuplicate" xml:space="preserve">
    <value>The element '{0}' has been attributed with duplicate XmlAnyElementAttribute(Name</value>
  </data>
  <data name="XmlChoiceIdDuplicate" xml:space="preserve">
    <value>Enum values in the XmlChoiceIdentifier '{0}' have to be unique.  Value '{1}' already present.</value>
  </data>
  <data name="XmlChoiceIdentifierMismatch" xml:space="preserve">
    <value>Value '{0}' of the choice identifier '{1}' does not match element '{2}' from namespace '{3}'.</value>
  </data>
  <data name="XmlNoPartialTrust" xml:space="preserve">
    <value>An internal error has occurred: Code in one or more assemblies referenced by the XmlSerializer cannot be called.</value>
  </data>
  <data name="XmlInvalidSpecifiedType" xml:space="preserve">
    <value>Member '{0}' of type {1} cannot be serialized.  Members with names ending on 'Specified' suffix have special meaning to the XmlSerializer: they control serialization of optional ValueType members and have to be of type {2}.</value>
  </data>
  <data name="XmlUnsupportedOpenGenericType" xml:space="preserve">
    <value>Type {0} is not supported because it has unbound generic parameters.  Only instantiated generic types can be serialized.</value>
  </data>
  <data name="XmlRpcLitElementNamespace" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="XmlRpcLitElementNullable" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="XmlRpcLitElements" xml:space="preserve">
    <value>Multiple accessors are not supported with rpc\\literal SOAP, you may use the following attributes: XmlArray, XmlArrayItem, or single XmlElement.</value>
  </data>
  <data name="XmlRpcLitArrayElement" xml:space="preserve">
    <value>Input or output values of an rpc\\literal method cannot have maxOccurs &gt; 1. Provide a wrapper element for '{0}' by using XmlArray or XmlArrayItem instead of XmlElement attribute.</value>
  </data>
  <data name="XmlRpcLitAttributeAttributes" xml:space="preserve">
    <value>XmlAttribute cannot be used with rpc\\literal SOAP, you may use the following attributes: XmlArray, XmlArrayItem, or single XmlElement.</value>
  </data>
  <data name="XmlRpcLitAttributes" xml:space="preserve">
    <value>XmlText, XmlAnyElement, or XmlChoiceIdentifier cannot be used with rpc\\literal SOAP, you may use the following attributes: XmlArray, XmlArrayItem, or single XmlElement.</value>
  </data>
  <data name="XmlSequenceMembers" xml:space="preserve">
    <value>Explicit sequencing may not be used on parameters or return values.  Please remove {0} property from custom attributes.</value>
  </data>
  <data name="XmlRpcLitXmlns" xml:space="preserve">
    <value>Input or output values of an rpc\\literal method cannot have an XmlNamespaceDeclarations attribute (member '{0}').</value>
  </data>
  <data name="XmlDuplicateNs" xml:space="preserve">
    <value>Illegal namespace declaration xmlns:{0}</value>
  </data>
  <data name="XmlAnonymousInclude" xml:space="preserve">
    <value>Cannot include anonymous type '{0}'.</value>
  </data>
  <data name="XmlGetSchemaMethodName" xml:space="preserve">
    <value>'{0}' is an invalid language identifier.</value>
  </data>
  <data name="XmlGetSchemaMethodMissing" xml:space="preserve">
    <value>You must implement public static {0}({1}) method on {2}.</value>
  </data>
  <data name="XmlGetSchemaMethodReturnType" xml:space="preserve">
    <value>Method {0}.{1}() specified by {2} has invalid signature: return type must be compatible with {3}.</value>
  </data>
  <data name="XmlGetSchemaEmptyTypeName" xml:space="preserve">
    <value>{0}.{1}() must return a valid type name.</value>
  </data>
  <data name="XmlSerializableAttributes" xml:space="preserve">
    <value>Only XmlRoot attribute may be specified for the type {0}. Please use {1} to specify schema type.</value>
  </data>
  <data name="XmlSerializableBadDerivation" xml:space="preserve">
    <value>Type '{0}' from namespace '{1}' declared as derivation of type '{2}' from namespace '{3}, but corresponding CLR types are not compatible.  Cannot convert type '{4}' to '{5}'.</value>
  </data>
  <data name="XmlSerializableMissingClrType" xml:space="preserve">
    <value>Type '{0}' from namespace '{1}' does not have corresponding IXmlSerializable type. Please consider adding {2} to '{3}'.</value>
  </data>
  <data name="XmlMelformMapping" xml:space="preserve">
    <value>This mapping was not crated by reflection importer and cannot be used in this context.</value>
  </data>
  <data name="XmlNotSerializable" xml:space="preserve">
    <value>Type '{0}' is not serializable.</value>
  </data>
  <data name="XmlSequenceInconsistent" xml:space="preserve">
    <value>Inconsistent sequencing: if used on one of the class's members, the '{0}' property is required on all particle-like members, please explicitly set '{0}' using XmlElement, XmlAnyElement or XmlArray custom attribute on class member '{1}'.</value>
  </data>
  <data name="XmlSequenceUnique" xml:space="preserve">
    <value>'{1}' values must be unique within the same scope. Value '{0}' is in use. Please change '{1}' property on '{2}'.</value>
  </data>
  <data name="XmlSequenceHierarchy" xml:space="preserve">
    <value>There was an error processing type '{0}'. Type member '{1}' declared in '{2}' is missing required '{3}' property. If one class in the class hierarchy uses explicit sequencing feature ({3}), then its base class and all derived classes have to do the same.</value>
  </data>
  <data name="XmlSequenceMatch" xml:space="preserve">
    <value>If multiple custom attributes specified on a single member only one of them have to have explicit '{0}' property, however if more that one attribute has the explicit '{0}', all values have to match.</value>
  </data>
  <data name="XmlInternalError" xml:space="preserve">
    <value>Internal error.</value>
  </data>
  <data name="XmlInternalErrorDetails" xml:space="preserve">
    <value>Internal error: {0}.</value>
  </data>
  <data name="XmlInternalErrorMethod" xml:space="preserve">
    <value>Internal error: missing generated method for {0}.</value>
  </data>
  <data name="Arg_NeverValueType" xml:space="preserve">
    <value>Only TypeKind.Root can be set for typeof(object) which is never value type.</value>
  </data>
  <data name="SFxErrorDeserializingRequestBody" xml:space="preserve">
    <value>Error in deserializing body of request message for operation '{0}'.</value>
  </data>
  <data name="SFxErrorDeserializingReplyBody" xml:space="preserve">
    <value>Error in deserializing body of reply message for operation '{0}'.</value>
  </data>
  <data name="SFxInvalidXmlAttributeInWrapped" xml:space="preserve">
    <value>XmlSerializer attribute {0} is not valid in {1}. Only XmlElement, XmlArray, XmlArrayItem and XmlAnyElement attributes are supported when IsWrapped is true.</value>
  </data>
  <data name="SFxInvalidXmlAttributeInBare" xml:space="preserve">
    <value>XmlSerializer attribute {0} is not valid in {1}. Only XmlElement, XmlArray, XmlArrayItem and XmlAnyElement attributes are supported in MessageContract when IsWrapped is false.</value>
  </data>
  <data name="SFxXmlArrayNotAllowedForMultiple" xml:space="preserve">
    <value>XmlArrayAttribute cannot be used in repeating part {1}:{0}.</value>
  </data>
  <data name="SFxErrorSerializingBody" xml:space="preserve">
    <value>There was an error in serializing body of message {0}: '{1}'.  Please see InnerException for more details.</value>
  </data>
  <data name="SFxRpcMessageMustHaveASingleBody" xml:space="preserve">
    <value>RPC Message {1} in operation {0} must have a single MessageBodyMember.</value>
  </data>
  <data name="SFxBodyObjectTypeCannotBeInherited" xml:space="preserve">
    <value>Type {0} cannot inherit from any class other than object to be used as body object in RPC style.</value>
  </data>
  <data name="SFxBodyObjectTypeCannotBeInterface" xml:space="preserve">
    <value>Type {0} implements interface {1} which is not supported for body object in RPC style.</value>
  </data>
  <data name="SFxKnownTypeNull" xml:space="preserve">
    <value>KnownType cannot be null in operation {0}</value>
  </data>
  <data name="SFxFaultTypeAnonymous" xml:space="preserve">
    <value>In operation {0}, the schema type corresponding to the fault detail type {1} is anonymous. Please set Fault name explicitly to export anonymous types.</value>
  </data>
  <data name="XmlConvert_BadFormat" xml:space="preserve">
    <value>The string '{0}' is not a valid {1} value.</value>
  </data>
  <data name="XmlDisallowNegativeValues" xml:space="preserve">
    <value>Negative values are prohibited.</value>
  </data>
  <data name="XmlInvalidEncodingNotEncoded1" xml:space="preserve">
    <value>The encoding style '{0}' is not valid for this call because this XmlSerializer instance does not support encoding. Use the SoapReflectionImporter to initialize an XmlSerializer that supports encoding.</value>
  </data>
  <data name="XmlInvalidEncoding3" xml:space="preserve">
    <value>The encoding style '{0}' is not valid for this call. Valid values are '{1}' for SOAP 1.1 encoding or '{2}' for SOAP 1.2 encoding.</value>
  </data>
  <data name="XmlUnexpectedType" xml:space="preserve">
    <value>Unexpected type: '{0}'.</value>
  </data>
  <data name="XmlMultipleAttributeOverrides" xml:space="preserve">
    <value>{0}. {1} already has attributes.</value>
  </data>
  <data name="XmlIllegalSoapAttribute" xml:space="preserve">
    <value>Cannot serialize member '{0}' of type {1}. SoapAttribute cannot be used to encode complex types.</value>
  </data>
  <data name="XmlInvalidArrayLength" xml:space="preserve">
    <value>SOAP-ENC:arrayType could not handle '{1}' as the length of the array.</value>
  </data>
  <data name="XmlUnsupportedSoapTypeKind" xml:space="preserve">
    <value>The type {0} may not be serialized with SOAP-encoded messages. Set the Use for your message to Literal.</value>
  </data>
  <data name="XmlUnsupportedType" xml:space="preserve">
    <value>{0} is an unsupported type.</value>
  </data>
  <data name="Xml_InvalidBinHexValueOddCount" xml:space="preserve">
    <value>'{0}' is not a valid BinHex text sequence. The sequence must contain an even number of characters.</value>
  </data>
  <data name="Xml_InvalidBinHexValue" xml:space="preserve">
    <value>'{0}' is not a valid BinHex text sequence.</value>
  </data>
  <data name="XmlS_UnknownID_1" xml:space="preserve">
    <value>Referenced identifier #{0} not found in document.</value>
  </data>
  <data name="XmlS_IllegalAttrType_1" xml:space="preserve">
    <value>Unexpected attribute type: '{0}'.</value>
  </data>
  <data name="XmlS_XmlInvalidCast_2" xml:space="preserve">
    <value>Cannot assign object of type {0} to an object of type {1}.</value>
  </data>
  <data name="XmlS_IllegalTextType_1" xml:space="preserve">
    <value>Invalid text type {0}.</value>
  </data>
  <data name="XmlS_TwoXmlAny_2" xml:space="preserve">
    <value>Unexpected two any elements for {0}:{1}.</value>
  </data>
  <data name="XmlS_MissingEnum_1" xml:space="preserve">
    <value>Enum is missing {0}.</value>
  </data>
  <data name="XmlS_UnknownEnum_1" xml:space="preserve">
    <value>Unexpected type of '{0}' value.</value>
  </data>
  <data name="XmlS_UnknownAccessor_1" xml:space="preserve">
    <value>Could not find accessor for type {0}.</value>
  </data>
  <data name="XmlS_TwoMappings_1" xml:space="preserve">
    <value>Duplicated mapping for {0}.</value>
  </data>
  <data name="XmlS_TwoDefaultXmlAny" xml:space="preserve">
    <value>There can only be one default member value.</value>
  </data>
  <data name="XmlS_IllegalChoiceDirection" xml:space="preserve">
    <value>Invalid choice direction.</value>
  </data>
  <data name="XmlS_ElementAsAttribute_2" xml:space="preserve">
    <value>Cannot deserialize element as attribute {0}:{1}.</value>
  </data>
  <data name="XmlS_AttributeAsElement_2" xml:space="preserve">
    <value>Cannot deserialize attribute as element {0}:{1}.</value>
  </data>
  <data name="XmlS_CircularRef_1" xml:space="preserve">
    <value>Cannot serialize a cycle in a literal object graph with type {0}.</value>
  </data>
  <data name="XmlS_IllegalSequenceType_1" xml:space="preserve">
    <value>Invalid sequence type {0}.</value>
  </data>
  <data name="XmlS_NoRepeatingAccessor_2" xml:space="preserve">
    <value>No repeating element accessor for {0}:{1}.</value>
  </data>
  <data name="XmlS_NoArrayEltAcc_2" xml:space="preserve">
    <value>Could not deserialize array of element {0}:{1}.</value>
  </data>
  <data name="XmlS_WrongXAEAType_1" xml:space="preserve">
    <value>Invalid array type for XmlAnyElementAttribute: '{0}'.</value>
  </data>
  <data name="XmlS_WrongXAAAType_1" xml:space="preserve">
    <value>Invalid type for XmlAnyAttributeAttribute: '{0}'.</value>
  </data>
  <data name="XmlS_XNDANotXSN_1" xml:space="preserve">
    <value>Invalid location for an XmlNamespaceDeclarationAttribute.</value>
  </data>
  <data name="XmlS_InvalidHref_1" xml:space="preserve">
    <value>Invalid Href format: '{0}'.</value>
  </data>
  <data name="XmlS_IllegalDataType_1" xml:space="preserve">
    <value>Invalid data type: '{0}'.</value>
  </data>
  <data name="XmlS_DataTypeNotValid_1" xml:space="preserve">
    <value>Invalid data type: '{0}'.</value>
  </data>
  <data name="XmlS_UnknownPrefix_1" xml:space="preserve">
    <value>Unknown prefix: '{0}'.</value>
  </data>
  <data name="XmlS_CollNoAdd_1" xml:space="preserve">
    <value>'Add' method is required for collection type '{0}'.</value>
  </data>
  <data name="XmlS_IEnumNoAdd_3" xml:space="preserve">
    <value>'Add' method is required for type {0} {1} of {2}.</value>
  </data>
  <data name="XmlS_BadArrayType_1" xml:space="preserve">
    <value>Invalid array type {0}.</value>
  </data>
  <data name="XmlS_RepeatedIdentifier_1" xml:space="preserve">
    <value>The identifier {0} cannot appear more than once.</value>
  </data>
  <data name="XmlInvalidCharSchemaPrimitive" xml:space="preserve">
    <value>Char is not a valid schema primitive and should be treated as int in DataContract</value>
  </data>
  <data name="UnknownConstantType" xml:space="preserve">
    <value>Internal Error: Unrecognized constant type {0}.</value>
  </data>
  <data name="ArrayTypeIsNotSupported" xml:space="preserve">
    <value>Array of type {0} is not supported.</value>
  </data>
  <data name="NoConversionPossibleTo" xml:space="preserve">
    <value>No conversion possible to {0}.</value>
  </data>
  <data name="IsNotAssignableFrom" xml:space="preserve">
    <value>{0} is not assignable from {1}.</value>
  </data>
  <data name="XmlElementNameMismatch" xml:space="preserve">
    <value>This element was named '{0}' from namespace '{1}' but should have been named '{2}' from namespace '{3}'.</value>
  </data>
  <data name="XmlNeedAttributeHere" xml:space="preserve">
    <value>The node must be either type XmlAttribute or a derived type.</value>
  </data>
  <data name="XmlNoAttributeHere" xml:space="preserve">
    <value>Cannot write a node of type XmlAttribute as an element value. Use XmlAnyAttributeAttribute with an array of XmlNode or XmlAttribute to write the node as an attribute.</value>
  </data>
  <data name="XmlInvalidArrayTypeSyntax" xml:space="preserve">
    <value>Invalid wsd:arrayType syntax: '{0}'.</value>
  </data>
  <data name="Xml_MissingSerializationCodeException" xml:space="preserve">
    <value>Type '{0}' cannot be serialized by XmlSerializer, serialization code for the type is missing. Consult the SDK documentation for adding it as a root serialization type. http://go.microsoft.com/fwlink/?LinkId=613136</value>
  </data>
</root>