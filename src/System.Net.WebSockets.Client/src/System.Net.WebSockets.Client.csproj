<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)'==''">Windows_Debug</Configuration>
  </PropertyGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <ProjectGuid>{B8AD98AE-84C3-4313-B3F1-EE8BD5BFF69B}</ProjectGuid>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <EnableWinRT Condition="'$(TargetGroup)' == 'netcore50'">true</EnableWinRT>
    <PackageTargetFramework Condition="'$(PackageTargetFramework)' == ''">dotnet5.4</PackageTargetFramework>
    <PackageTargetRuntime Condition="'$(TargetsWindows)' == 'true'">win7</PackageTargetRuntime>
    <PackageTargetRuntime Condition="'$(TargetsUnix)' == 'true'">unix</PackageTargetRuntime>
  </PropertyGroup>

  <PropertyGroup Condition="'$(EnableWinRT)' != 'true'">
    <DefineConstants>$(DefineConstants);FEATURE_CORECLR</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(EnableWinRT)' == 'true'">
    <DefineConstants>$(DefineConstants);NETNATIVE</DefineConstants>
  </PropertyGroup>

  <!-- Help VS understand available configurations -->
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Linux_Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Linux_Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'OSX_Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'OSX_Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Windows_Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Windows_Release|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netcore50_Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'netcore50_Release|AnyCPU'" />

  <ItemGroup>
    <Compile Include="System\Net\WebSockets\ClientWebSocket.cs" />
    <Compile Include="System\Net\WebSockets\ClientWebSocketOptions.cs" />

    <!-- Common -->
    <Compile Include="$(CommonPath)\System\Net\Logging\LoggingHash.cs">
      <Link>Common\System\Net\Logging\LoggingHash.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\System\Net\Logging\NetEventSource.cs">
      <Link>Common\System\Net\Logging\NetEventSource.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\System\Net\UriScheme.cs">
      <Link>Common\System\Net\UriScheme.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\System\Net\WebSockets\WebSocketValidate.cs">
      <Link>Common\System\Net\WebSockets\WebSocketValidate.cs</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetsWindows)' == 'true' ">
    <Compile Include="System\Net\WebSockets\WebSocketHandle.Windows.cs" />
  </ItemGroup>

  <!-- Windows : Win32 only -->
  <ItemGroup Condition="'$(TargetsWindows)' == 'true' AND '$(EnableWinRT)' != 'true'">
    <Compile Include="System\Net\WebSockets\WebSocketHandle.Win32.cs" />
    <Compile Include="System\Net\WebSockets\WebSocketMessageTypeAdapter.cs" />
    <Compile Include="System\Net\WebSockets\WinHttpWebSocket.cs" />
    <Compile Include="System\Net\WebSockets\WinHttpWebSocketCallback.cs" />
    <Compile Include="System\Net\WebSockets\WinHttpWebSocketState.cs" />

    <!-- Common -->
    <Compile Include="$(CommonPath)\Microsoft\Win32\SafeHandles\SafeHandleZeroOrMinusOneIsInvalid.cs">
      <Link>Common\Microsoft\Win32\SafeHandles\SafeHandleZeroOrMinusOneIsInvalid.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Microsoft\Win32\SafeHandles\SafeLibraryHandle.cs">
      <Link>Common\Microsoft\Win32\SafeHandles\SafeLibraryHandle.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\System\Net\Http\WinHttpException.cs">
      <Link>Common\System\Net\Http\WinHttpException.cs</Link>
    </Compile>

    <!-- Interop -->
    <Compile Include="$(CommonPath)\Interop\Windows\Interop.Libraries.cs">
      <Link>Interop\Windows\Interop.Libraries.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\mincore\Interop.GetModuleHandle.cs">
      <Link>Interop\Windows\mincore\Interop.GetModuleHandle.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\mincore\Interop.HRESULT_FROM_WIN32.cs">
      <Link>Interop\Windows\mincore\Interop.HRESULT_FROM_WIN32.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\mincore\Interop.FormatMessage.cs">
      <Link>Interop\Windows\mincore\Interop.FormatMessage.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\mincore\Interop.FreeLibrary.cs">
      <Link>Interop\Windows\mincore\Interop.FreeLibrary.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\mincore\Interop.GetProcAddress.cs">
      <Link>Interop\Windows\mincore\Interop.GetProcAddress.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\mincore\Interop.LoadLibraryEx.cs">
      <Link>Interop\Windows\mincore\Interop.LoadLibraryEx.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\winhttp\Interop.SafeWinHttpHandle.cs">
      <Link>Interop\Windows\winhttp\Interop.SafeWinHttpHandle.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\winhttp\Interop.winhttp.cs">
      <Link>Interop\Windows\winhttp\Interop.winhttp.cs</Link>
    </Compile>
    <Compile Include="$(CommonPath)\Interop\Windows\winhttp\Interop.winhttp_types.cs">
      <Link>Interop\Windows\winhttp\Interop.winhttp_types.cs</Link>
    </Compile>
  </ItemGroup>

  <!-- Windows : Win32 + WinRT -->
  <ItemGroup Condition="'$(TargetsWindows)' == 'true' AND '$(EnableWinRT)' == 'true'">
    <Compile Include="System\Net\WebSockets\WebSocketHandle.WinRT.cs" />
    <Compile Include="System\Net\WebSockets\WinRTWebSocket.cs" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetsUnix)' == 'true' ">
    <Compile Include="System\Net\WebSockets\WebSocketHandle.Unix.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Include="project.json" />
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
</Project>
