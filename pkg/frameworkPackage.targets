<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" InitialTargets="CheckForBuildTools" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <IsLineupPackage Condition="'$(PackageTargetRuntime)' == '' AND '$(IncludeLibFiles)' != 'true'">true</IsLineupPackage>
    <PreventImplementationReference Condition="'$(PackageTargetRuntime)' != ''">true</PreventImplementationReference>

    <!-- these packages don't follow the patterns expected by package validation -->
    <SkipPackageFileCheck>true</SkipPackageFileCheck>
    <SkipValidatePackage>true</SkipValidatePackage>

    <NETStandardVersion Condition="'$(NETStandardVersion)' == ''">2.0</NETStandardVersion>
    <NETStandardPackageRefPath Condition="'$(NETStandardPackageRefPath)' == ''">$(PackagesDir)$(NETStandardPackageId.ToLower())\$(NETStandardPackageVersion)\build\netstandard$(NETStandardVersion)\ref</NETStandardPackageRefPath>

    <IncludeReferenceFiles Condition="'$(IncludeReferenceFiles)' == '' AND '$(PackageTargetRuntime)' == ''">true</IncludeReferenceFiles>
    <IncludeLibFiles Condition="'$(IncludeLibFiles)' == '' AND '$(PackageTargetRuntime)' != ''">true</IncludeLibFiles>
    <IncludeNativeFiles Condition="'$(IncludeNativeFiles)' == '' AND '$(PackageTargetRuntime)' != ''">true</IncludeNativeFiles>

    <RefFileTargetPath Condition="'$(RefFileTargetPath)' == ''">ref/$(TargetFramework)</RefFileTargetPath>
    <LibFileTargetPath Condition="'$(LibFileTargetPath)' == '' AND '$(PackageTargetRuntime)' == ''">lib/$(TargetFramework)</LibFileTargetPath>
    <LibFileTargetPath Condition="'$(LibFileTargetPath)' == '' AND '$(PackageTargetRuntime)' != ''">runtimes/$(PackageTargetRuntime)/lib/$(TargetFramework)</LibFileTargetPath>

    <NativeFileTargetPath Condition="'$(NativeFileTargetPath)' == '' AND '$(PackageTargetRuntime)' != ''">runtimes/$(PackageTargetRuntime)/native</NativeFileTargetPath>
  </PropertyGroup>

  <!-- Bring in ref content from binplaced ref props -->
  <Import Condition="'$(IncludeReferenceFiles)' == 'true'" Project="$(RefBinDir)\*.props" />
  <ItemGroup Condition="'$(IncludeReferenceFiles)' == 'true'">
    <!-- Include refs -->
    <File Include="@(RefFile)">
      <TargetPath Condition="'%(File.TargetPath)' == ''">$(RefFileTargetPath)%(File.SubFolder)</TargetPath>
    </File>
    <!-- force a missing file if ref build is absent -->
    <File Include="$(RefBinDir)/MISSING_REF_BUILD" Condition="'@(RefFile)' == ''" />

    <_buildRIDWithMetadata Include="@(BuildRID)">
      <TargetRuntime>%(Identity)</TargetRuntime>
      <Version>$(PackageVersion)</Version>
    </_buildRIDWithMetadata>
    <Dependency Include="@(_buildRIDWithMetadata->'runtime.%(Identity).$(Id)')" />

    <Dependency Include="Microsoft.NETCore.Platforms">
      <Version>$(PlatformPackageVersion)</Version>
      <TargetFramework>$(TargetFramework)</TargetFramework>
    </Dependency>

    <!-- Include the update to v1 lineup package, which now has no runtime package mappings.
         This will reduce the number of packages downloaded when mixing v1 and later
         packages as well as reduce our dependence on conflict resolution for dropping
         those v1 runtime packages -->
    <Dependency Condition="'$(IsLineupPackage)' == 'true'" Include="Microsoft.NETCore.Targets">
      <Version>2.0.0</Version>
      <TargetFramework>$(TargetFramework)</TargetFramework>
    </Dependency>
  </ItemGroup>

  <!-- Bring in lib content from binplaced lib props -->
  <Import Condition="'$(IncludeLibFiles)' == 'true'" Project="$(LibBinDir)\*.props" />
  <ItemGroup Condition="'$(IncludeLibFiles)' == 'true'">
    <!-- Include lib -->
    <File Include="@(LibFile)">
      <TargetPath Condition="'%(File.TargetPath)' == ''">$(LibFileTargetPath)%(File.SubFolder)</TargetPath>
    </File>
    <!-- force a missing file if lib build is absent -->
    <File Include="$(LibBinDir)/MISSING_LIB_BUILD" Condition="'@(LibFile)' == ''" />
  </ItemGroup>

  <ItemGroup Condition="'$(IncludeNativeFiles)' == 'true'">
    <!-- Include native -->
    <ExcludeNative Include="$(NativeBinDir)/*.lib" />
    <NativeFile Include="$(NativeBinDir)/*.*" Exclude="@(ExcludeNative)">
      <TargetPath>$(NativeFileTargetPath)</TargetPath>
    </NativeFile>
    <File Include="@(NativeFile)" />
    <!-- force a missing file if native build is absent -->
    <File Include="$(NativeBinDir)/MISSING_NATIVE_BUILD" Condition="'@(NativeFile)' == ''" />
  </ItemGroup>

  <Target Name="_getFinalFilesExisting">
    <ItemGroup>
      <_refFileExisting Include="@(File)" Condition="Exists('%(FullPath)') AND ($([System.String]::new('%(File.TargetPath)').StartsWith('ref')) OR '%(File.TargetPath)' == '$(RefFileTargetPath)')" />
      <_refFileNames Include="@(_refFileExisting -> '%(FileName)')">
        <Original>%(_refFileExisting.Identity)</Original>
      </_refFileNames>
      <_refFileNamesFiltered Include="@(_refFileNames)" Exclude="@(ExcludeFromClosure)" />
      <_refFilesFiltered Include="@(_refFileNamesFiltered->'%(Original)')" />

      <_runtimeFileExisting Include="@(File)" Condition="Exists('%(FullPath)') AND ($([System.String]::new('%(File.TargetPath)').StartsWith('lib')) OR $([System.String]::new('%(File.TargetPath)').StartsWith('runtimes')) OR '%(File.TargetPath)' == '$(LibFileTargetPath)')" />
      <_runtimeFileNames Include="@(_runtimeFileExisting -> '%(FileName)')">
        <Original>%(_runtimeFileExisting.Identity)</Original>
      </_runtimeFileNames>
      <_runtimeFileNamesFiltered Include="@(_runtimeFileNames)" Exclude="@(ExcludeFromClosure)" />
      <_runtimeFilesFiltered Include="@(_runtimeFileNamesFiltered->'%(Original)')" />
    </ItemGroup>
    <PropertyGroup>
      <_hasRefFiles Condition="'@(_refFilesFiltered)' != '' and '%(_refFilesFiltered.Extension)' != '._'">true</_hasRefFiles>
      <_hasRuntimeFiles Condition="'@(_runtimeFilesFiltered)' != '' AND '%(_runtimeFilesFiltered.Extension)' != '._'">true</_hasRuntimeFiles>
    </PropertyGroup>
  </Target>

  <Target Name="VerifyClosure" DependsOnTargets="_getFinalFilesExisting" AfterTargets="Build">
    <Message Condition="'$(_hasRefFiles)' == 'true'" Text="Verifying closure of reference assemblies" />
    <VerifyClosure Condition="'$(_hasRefFiles)' == 'true'"
                   Sources="@(_refFilesFiltered)"
                   IgnoredReferences="@(IgnoredReference)" />

    <Message Condition="'$(_hasRuntimeFiles)' == 'true'" Text="Verifying closure of runtime assemblies" />
    <VerifyClosure Condition="'$(_hasRuntimeFiles)' == 'true'"
                   Sources="@(_runtimeFilesFiltered)"
                   IgnoredReferences="@(IgnoredReference)" />
  </Target>

  <Target Name="VerifyNETStandard" DependsOnTargets="_getFinalFilesExisting" AfterTargets="Build">
    <ItemGroup>
      <_NETStandardFile Include="$(NETStandardPackageRefPath)\*.dll" />
      <!-- force a missing file there are no files found in the package -->
      <_NETStandardFile Include="$(NETStandardPackageRefPath)\MISSING_NETSTANDARD_PACKAGE" Condition="'@(_NETStandardFile)' == ''" />

      <_NETStandardRefMissingFile Include="@(_NETStandardFile->'%(FileName)')" Exclude="@(_refFileNames)" />
      <_NETStandardRefMissingFileError Include="@(_NETStandardRefMissingFile)" Exclude="@(SuppressNETStandardMissingFile)" />
      <_NETStandardRefSuppressedMissingFile Include="@(_NETStandardRefMissingFile)" Exclude="@(_NETStandardRefMissingFileError)" />

      <_NETStandardRuntimeMissingFile Include="@(_NETStandardFile->'%(FileName)')" Exclude="@(_runtimeFileNames)" />
      <_NETStandardRuntimeMissingFileError Include="@(_NETStandardRuntimeMissingFile)" Exclude="@(SuppressNETStandardMissingFile)" />
      <_NETStandardRuntimeSuppressedMissingFile Include="@(_NETStandardRuntimeMissingFile)" Exclude="@(_NETStandardRuntimeMissingFileError)" />
    </ItemGroup>

    <Message Condition="'$(_hasRefFiles)' == 'true' AND '@(_NETStandardRefSuppressedMissingFile)' != ''" Text="Files'@(_NETStandardRefSuppressedMissingFile)' are part of '$(NETStandardPackageId)' but missing from this package.  This error has been suppressed." />
    <Error Condition="'$(_hasRefFiles)' == 'true' AND '@(_NETStandardRefMissingFileError)' != ''" Text="Files '@(_NETStandardRefMissingFileError)' are part of '$(NETStandardPackageId)' but missing from this package." />
    
    <Message Condition="'$(_hasRuntimeFiles)' == 'true' AND '@(_NETStandardRuntimeSuppressedMissingFile)' != ''" Text="Files'@(_NETStandardRuntimeSuppressedMissingFile)' are part of '$(NETStandardPackageId)' but missing from this package.  This error has been suppressed." />
    <Error Condition="'$(_hasRuntimeFiles)' == 'true' AND '@(_NETStandardRuntimeMissingFileError)' != ''" Text="Files '@(_NETStandardRuntimeMissingFileError)' are part of '$(NETStandardPackageId)' but missing from this package." />
  </Target>

  <Target Name="GetSymbolPackageFiles" BeforeTargets="GetPackageFiles">
    <ItemGroup>
      <File>
        <IsSymbolFile Condition="'%(Extension)' == '.pdb'">true</IsSymbolFile>
        <IsSymbolFile Condition="'$(SymbolFileExtension)' != '' AND'%(Extension)' == '$(SymbolFileExtension)'">true</IsSymbolFile>
      </File>
    </ItemGroup>
  </Target>
</Project>
