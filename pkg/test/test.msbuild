<Project DefaultTargets="Restore;Test">
  <ItemGroup>
    <TestPackages Condition="'$(TestPackages)' != ''" Include="$(TestPackages)" />
  </ItemGroup>

  <PropertyGroup>
    <PackageTestProjectsDir Condition="'$(PackageTestProjectsDir)' == ''">$(MSBuildThisFileDirectory)..\projects</PackageTestProjectsDir>
    <_projectProperties>SupportFilesDir=$(MSBuildThisFileDirectory)</_projectProperties>
  </PropertyGroup>

  <Target Name="GetProjects">
    <ItemGroup>
      <Project Condition="'@(TestPackages)' == ''" Include="$(PackageTestProjectsDir)\**\*.csproj" />
      <Project Condition="'@(TestPackages)' != ''" Include="$(PackageTestProjectsDir)\%(TestPackages.Identity)\**\*.csproj" />
    </ItemGroup>
  </Target>

  <Target Name="Restore"
          Inputs="@(Project)"
          Outputs="@(Project->'%(RootDir)%(Directory)obj\project.assets.json')"
          DependsOnTargets="GetProjects">
    <MSBuild Projects="@(Project)" Targets="Restore" BuildInParallel="true" Properties="$(_projectProperties)" />
    <Touch Files="@(Project->'%(RootDir)%(Directory)obj\project.assets.json')" />
  </Target>

  <Target Name="Test" DependsOnTargets="GetProjects">
    <!-- We need to pass a dummy global property to force msbuild reevaluation after restoring the project to get implicit references added
    and all generated props and targets imported in the test step. This is used to be able to call RestoreAndTest target when running in helix. -->
    <MSBuild Projects="@(Project)" Targets="Test" BuildInParallel="true" Properties="$(_projectProperties);ForceMsbuildEvaluation=true" />
  </Target>
</Project>