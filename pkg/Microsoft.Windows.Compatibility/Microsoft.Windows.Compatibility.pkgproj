<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.props))\Directory.Build.props" />
  <PropertyGroup>
      <!-- We use the PackageVersion property defined in Packaging.props for the Prerelease packages which are using it to be built -->
    <_PreReleasePackageVersion>$(PackageVersion)</_PreReleasePackageVersion>
    <PackageVersion>2.1.0</PackageVersion>
    <ServiceModelVersion>4.4.1</ServiceModelVersion>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <PrereleaseLibraryPackage>
      <Version>$(_PreReleasePackageVersion)</Version>
    </PrereleaseLibraryPackage>
  </ItemDefinitionGroup>
  <ItemGroup>
    <PackageIndex Include="$(MSBuildThisFileDirectory)externalIndex.json" />
  </ItemGroup>
  <ItemGroup>
    <PrereleaseLibraryPackage Include="Microsoft.Win32.Registry" />
    <PrereleaseLibraryPackage Include="Microsoft.Win32.Registry.AccessControl" />
    <PrereleaseLibraryPackage Include="Microsoft.Win32.SystemEvents" />
    <PrereleaseLibraryPackage Include="System.CodeDom" />
    <PrereleaseLibraryPackage Include="System.ComponentModel.Composition" />
    <PrereleaseLibraryPackage Include="System.Configuration.ConfigurationManager" />
    <PrereleaseLibraryPackage Include="System.Data.Odbc" />
    <PrereleaseLibraryPackage Include="System.Data.DataSetExtensions" />
    <PrereleaseLibraryPackage Include="System.Data.SqlClient" />
    <PrereleaseLibraryPackage Include="System.Drawing.Common" />
    <PrereleaseLibraryPackage Include="System.Diagnostics.EventLog" />
    <PrereleaseLibraryPackage Include="System.Diagnostics.PerformanceCounter" />
    <PrereleaseLibraryPackage Include="System.DirectoryServices" />
    <PrereleaseLibraryPackage Include="System.DirectoryServices.AccountManagement" />
    <PrereleaseLibraryPackage Include="System.DirectoryServices.Protocols" />
    <PrereleaseLibraryPackage Include="System.IO.FileSystem.AccessControl" />
    <PrereleaseLibraryPackage Include="System.IO.Packaging" />
    <PrereleaseLibraryPackage Include="System.IO.Pipes.AccessControl" />
    <PrereleaseLibraryPackage Include="System.IO.Ports" />
    <PrereleaseLibraryPackage Include="System.Management" />
    <PrereleaseLibraryPackage Include="System.Runtime.Caching" />
    <PrereleaseLibraryPackage Include="System.Security.AccessControl" />
    <PrereleaseLibraryPackage Include="System.Security.Cryptography.Cng" />
    <PrereleaseLibraryPackage Include="System.Security.Cryptography.Pkcs" />
    <PrereleaseLibraryPackage Include="System.Security.Cryptography.ProtectedData" />
    <PrereleaseLibraryPackage Include="System.Security.Cryptography.Xml" />
    <PrereleaseLibraryPackage Include="System.Security.Permissions" />
    <PrereleaseLibraryPackage Include="System.Security.Principal.Windows" />
    <PrereleaseLibraryPackage Include="System.ServiceModel.Syndication" />
    <PrereleaseLibraryPackage Include="System.ServiceProcess.ServiceController" />
    <PrereleaseLibraryPackage Include="System.Text.Encoding.CodePages" />
    <PrereleaseLibraryPackage Include="System.Threading.AccessControl" />
    <!-- Service model packages -->
    <LibraryPackage Include="System.ServiceModel.Primitives">
      <Version>$(ServiceModelVersion)</Version>
    </LibraryPackage>
    <LibraryPackage Include="System.ServiceModel.Duplex">
      <Version>$(ServiceModelVersion)</Version>
    </LibraryPackage>
    <LibraryPackage Include="System.ServiceModel.Http">
      <Version>$(ServiceModelVersion)</Version>
    </LibraryPackage>
    <LibraryPackage Include="System.ServiceModel.NetTcp">
      <Version>$(ServiceModelVersion)</Version>
    </LibraryPackage>
    <LibraryPackage Include="System.ServiceModel.Security">
      <Version>$(ServiceModelVersion)</Version>
    </LibraryPackage>
  </ItemGroup>
  <ItemGroup>
    <!-- The shims included in the shims package are only needed for netcoreapp2.0 since in newer frameworks they are included inbox.
    In order to condition the shims package to an specific framework other dependencies need to specify their target framework. So
    we need to include the dependencies with the supported frameworks and then we include the compatibility shims package only for 2.0 -->
    <Dependency Include="@(LibraryPackage);@(PrereleaseLibraryPackage)">
      <TargetFramework>netcoreapp2.0</TargetFramework>
    </Dependency>
    <Dependency Include="@(LibraryPackage);@(PrereleaseLibraryPackage)">
      <TargetFramework>netcoreapp2.1</TargetFramework>
    </Dependency>
    <Dependency Include="@(LibraryPackage);@(PrereleaseLibraryPackage)">
      <TargetFramework>netstandard2.0</TargetFramework>
    </Dependency>
    <!-- Include dependency to shims package -->
    <Dependency Include="Microsoft.Windows.Compatibility.Shims">
      <Version>$(CompatibilityShimsPackageVersion)</Version>
      <TargetFramework>netcoreapp2.0</TargetFramework>
    </Dependency>
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Directory.Build.targets))\Directory.Build.targets" />
</Project>