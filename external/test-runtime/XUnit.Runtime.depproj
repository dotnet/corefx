<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <!-- Given that xunit packages bring with them part of the framework, we need to specify a runtime in order to get the assets
         This RID value doesn't really matter, since the assets we are copying are not RID specific, so defaulting to Windows here
    -->
    <NugetRuntimeIdentifier>win7-x64</NugetRuntimeIdentifier>
    <OutputPath>$(RuntimePath)</OutputPath>
    <XUnitRunnerPackageId Condition="'$(TargetGroup)' != 'netfx'">xunit.console.netcore</XUnitRunnerPackageId>
    <XUnitRunnerPackageId Condition="'$(TargetGroup)' == 'netfx'">xunit.runner.console</XUnitRunnerPackageId>
    <NuGetTargetMoniker Condition="'$(TargetGroup)' == 'uapaot'">.NETStandard,Version=v2.0</NuGetTargetMoniker>
    <NuGetTargetMoniker Condition="'$(TargetGroup)' == 'uap'">.NETStandard,Version=v2.0</NuGetTargetMoniker>
  </PropertyGroup>
  <ItemGroup>
    <None Include="project.json" />
  </ItemGroup>
  <ItemGroup>
    <PackageToInclude Include="xunit.abstractions"/>
    <PackageToInclude Include="xunit.assert"/>
    <PackageToInclude Include="xunit.extensibility.core"/>
    <PackageToInclude Include="xunit.extensibility.execution"/>
    <PackageToInclude Include="xunit.runner.utility"/>
    <PackageToInclude Include="Microsoft.xunit.netcore.extensions"/>
    <PackageToInclude Include="Newtonsoft.Json"/>
    <PackageToInclude Include="$(XUnitRunnerPackageId)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetGroup)' != 'uapaot'">
    <PackageToInclude Include="xunit.performance.core"/>
    <PackageToInclude Include="xunit.performance.api"/>
    <PackageToInclude Include="xunit.performance.execution"/>
    <PackageToInclude Include="xunit.performance.metrics"/>
    <PackageToInclude Include="Microsoft.Diagnostics.Tracing.TraceEvent"/>
    <PackageToInclude Include="Microsoft.3rdpartytools.MarkdownLog"/>
    <PackageToInclude Include="CommandLineParser" />
  </ItemGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />

  <!-- Retrieve the UAP Tools to the TestHost folder -->
  <Target Name="CopyUAPToolsToTestHost" 
          AfterTargets="RestorePackages"
          Condition="'$(TargetGroup)'=='uap'" >

    <!-- Give a warning that the UAPToolsFolder is not set and that tests won't run -->
    <Warning Text="The UAPToolsFolder parameter was not specified. This means that tests won't be able to run." Condition="'$(UAPToolsFolder)'==''" />

    <ItemGroup Condition="'$(UAPToolsFolder)'!=''">
      <RunnerFolderContents Include="$(UAPToolsFolder)\Runner\**\*" />
      <LauncherFolderContents Include="$(UAPToolsFolder)\Launcher\**\*" />
    </ItemGroup>

    <Copy Condition="'$(UAPToolsFolder)'!=''"
          SourceFiles="@(RunnerFolderContents)" 
          DestinationFolder="$(NETCoreAppTestRootPath)\Runner\%(RecursiveDir)"
          SkipUnchangedFiles="true"/>

    <Copy Condition="'$(UAPToolsFolder)'!=''"
          SourceFiles="@(LauncherFolderContents)" 
          DestinationFolder="$(NETCoreAppTestRootPath)\Launcher\%(RecursiveDir)"
          SkipUnchangedFiles="true"/>
  </Target>

  <Target Name="AddXunitConsoleRunner" BeforeTargets="ResolveReferences" Condition="'$(TargetGroup)' == 'netfx'">
    <Error Condition="!Exists('$(PackagesDir)$(XUnitRunnerPackageId)\$(XUnitPackageVersion)\tools\xunit.console.exe')"
            Text="Error: looks the package $(PackagesDir)$(XUnitRunnerPackageId)\$(XUnitPackageVersion) not restored or missing xunit.console.exe."
    />
    <ItemGroup>
      <ReferenceCopyLocalPaths 
        Include="$(PackagesDir)$(XUnitRunnerPackageId)\$(XUnitPackageVersion)\tools\*.*"
        Exclude="$(PackagesDir)$(XUnitRunnerPackageId)\$(XUnitPackageVersion)\tools\xunit.console.exe.config"
      >
        <Private>false</Private>
        <NuGetPackageId>$(XUnitRunnerPackageId)</NuGetPackageId>
        <NuGetPackageVersion>$(XUnitPackageVersion)</NuGetPackageVersion>
      </ReferenceCopyLocalPaths>
    </ItemGroup>
</Target>
</Project>
