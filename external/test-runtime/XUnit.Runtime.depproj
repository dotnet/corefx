<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup Condition="'$(TargetGroup)' == 'uap' OR '$(TargetGroup)' == 'uapaot'">
    <TargetFramework>netstandard2.0</TargetFramework>
    <!-- reset parts so that they can be re-inferred -->
    <TargetFrameworkIdentifier />
    <TargetFrameworkVersion />
  </PropertyGroup>
  <PropertyGroup>
    <!-- Given that xunit packages bring with them part of the framework, we need to specify a runtime in order to get the assets
         The only asset that we copy which is RID-specific is sni.dll which is only used in windows, which is why we default to Windows as the RID -->
    <RuntimeIdentifier>win10-$(ArchGroup)</RuntimeIdentifier>
    <!-- Use xunit for arm packages because of not providing armel package in win10 -->
    <RuntimeIdentifier Condition="'$(ArchGroup)' == 'armel'">win10-arm</RuntimeIdentifier>
    <OutputPath>$(RuntimePath)</OutputPath>
    <XUnitRunnerConsolePackageName>xunit.runner.console</XUnitRunnerConsolePackageName>
    <XUnitRunner>xunit.console</XUnitRunner>
    <XUnitTestAdapterPackageId>xunit.runner.visualstudio</XUnitTestAdapterPackageId>
    <XUnitAdapter Condition="'$(TargetGroup)' == 'netcoreapp'">xunit.runner.visualstudio.dotnetcore.testadapter</XUnitAdapter>
    <XUnitAdapter Condition="'$(TargetGroup)' == 'uap' OR '$(TargetGroup)' == 'uapaot'">xunit.runner.visualstudio.uwp.testadapter</XUnitAdapter>
    <XUnitAdapter Condition="'$(TargetGroup)' == 'netfx'">xunit.runner.visualstudio.testadapter</XUnitAdapter>
    <MicrosoftNetTestSdkPackageName>microsoft.net.test.sdk</MicrosoftNetTestSdkPackageName>
    <TestPlatformHostPackageId>microsoft.testplatform.testhost</TestPlatformHostPackageId>
    <MicrosoftDiagnosticsTracingTraceEventPackageName>Microsoft.Diagnostics.Tracing.TraceEvent</MicrosoftDiagnosticsTracingTraceEventPackageName>
    <TestPlatformHost>testhost</TestPlatformHost>
    <!-- Explicitly set Language to c# to handle the analyzer resolution in nuget -->
    <Language Condition="'$(Language)' == ''">c#</Language>
    <!-- Don't warn if some dependencies were rolled forward -->
    <NoWarn>$(NoWarn);NU1603;NU1701</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <!-- xunit packages -->
    <PackageReference Include="xunit" Version="$(XUnitPackageVersion)" />
    <PackageReference Include="$(MicrosoftDotNetXUnitExtensionsPackage)" Version="$(MicrosoftDotNetXUnitExtensionsPackageVersion)" />
    <PackageReference Include="$(XUnitRunnerConsolePackageName)" Version="$(XUnitPackageVersion)" />
    <PackageReference Condition="'$(TargetsUap)' == 'true'" Include="Microsoft.DotNet.UAP.TestTools" Version="$(UAPToolsPackageVersion)" />

    <!-- for callstack line numbers -->
    <PackageReference Include="Microsoft.DiaSymReader.Native" Version="1.5.0" />
    <PackageReference Condition="'$(TargetGroup)' != 'uapaot'" Include="Microsoft.DotNet.PlatformAbstractions" Version="2.1.0" />
    <PackageReference Include="Newtonsoft.Json" Version="9.0.1" />

    <!-- Test Data -->
    <PackageReference Include="System.IO.Compression.TestData" Version="1.0.6-prerelease" />
    <PackageReference Include="System.IO.Packaging.TestData" Version="1.0.0-prerelease" />
    <PackageReference Include="System.Security.Cryptography.X509Certificates.TestData" Version="1.0.2-prerelease" />
    <PackageReference Include="System.Net.TestData" Version="1.0.1-prerelease" />
    <PackageReference Include="System.ComponentModel.TypeConverter.TestData" Version="1.0.0" />
    <PackageReference Include="System.Drawing.Common.TestData" Version="1.0.7" />
    <PackageReference Include="System.Text.RegularExpressions.TestData" Version="1.0.2" />

    <PackageToInclude Include="xunit.abstractions" />
    <PackageToInclude Include="xunit.assert" />
    <PackageToInclude Include="xunit.extensibility.core" />
    <PackageToInclude Include="xunit.extensibility.execution" />
    <PackageToInclude Include="xunit.runner.utility" />
    <PackageToInclude Include="$(MicrosoftDotNetXUnitExtensionsPackage)" />
    <PackageToInclude Condition="'$(TargetsUap)' != 'true'" Include="$(XUnitRunnerConsolePackageName)" />
    <PackageToInclude Include="Microsoft.DiaSymReader.Native" />
    <PackageToInclude Include="Newtonsoft.Json" />
    <PackageToInclude Condition="'$(TargetGroup)' != 'uapaot'" Include="Microsoft.DotNet.PlatformAbstractions" />
  </ItemGroup>

    <!-- Perf testing -->
  <ItemGroup Condition="'$(TargetGroup)' != 'uap' AND '$(TargetGroup)' != 'uapaot'">
    <PackageReference Include="xunit.performance.api" Version="$(XUnitPerformancePackageVersion)" />
    <PackageReference Include="xunit.performance.core" Version="$(XUnitPerformancePackageVersion)" />
    <PackageReference Include="xunit.performance.execution" Version="$(XUnitPerformancePackageVersion)" />
    <PackageReference Include="xunit.performance.metrics" Version="$(XUnitPerformancePackageVersion)" />
    <PackageReference Include="$(MicrosoftDiagnosticsTracingTraceEventPackageName)" Version="$(TraceEventPackageVersion)" />
    <PackageReference Include="MarkdownLog.NS20" Version="0.10.1" />
    <PackageReference Include="CommandLineParser.NS20" Version="2.3.1" />

    <PackageToInclude Include="xunit.performance.core"/>
    <PackageToInclude Include="xunit.performance.api"/>
    <PackageToInclude Include="xunit.performance.execution"/>
    <PackageToInclude Include="xunit.performance.metrics"/>
    <PackageToInclude Include="$(MicrosoftDiagnosticsTracingTraceEventPackageName)"/>
    <PackageToInclude Include="MarkdownLog.NS20"/>
    <PackageToInclude Include="CommandLineParser.NS20" />
  </ItemGroup>

  <!-- Microsoft.NET.Test.SDK packages. -->
  <ItemGroup Condition="'$(EnableVSTestReferences)' == 'true'">
    <PackageReference Include="$(XUnitTestAdapterPackageId)" Version="$(XUnitPackageVersion)" />
    <PackageReference Include="$(MicrosoftNetTestSdkPackageName)" Version="$(MicrosoftNetTestSdkPackageVersion)" />
    <PackageReference Condition="'$(TargetsNetFx)' != 'true'" Include="$(TestPlatformHostPackageId)" Version="$(MicrosoftNetTestSdkPackageVersion)" />
    <PackageReference Condition="'$(TargetsNetFx)' != 'true'" Include="Microsoft.TestPlatform.ObjectModel" Version="$(MicrosoftNetTestSdkPackageVersion)" />
    <PackageReference Condition="'$(TargetsNetCoreApp)' == 'true'" Include="Microsoft.Extensions.DependencyModel" Version="2.0.4" />
    <PackageReference Condition="'$(TargetsNetCoreApp)' == 'true' OR '$(TargetsNetFx)' == 'true'" Include="Microsoft.CodeCoverage" Version="$(MicrosoftNetTestSdkPackageVersion)" />

    <PackageToInclude Include="$(XUnitTestAdapterPackageId)" />
    <PackageToInclude Condition="'$(TargetsNetFx)' != 'true'" Include="Microsoft.TestPlatform.TestHost" />
    <PackageToInclude Condition="'$(TargetsNetFx)' != 'true'" Include="Microsoft.TestPlatform.ObjectModel" />
    <PackageToInclude Condition="'$(TargetsNetCoreApp)' == 'true'" Include="Microsoft.Extensions.DependencyModel" />
    <PackageToInclude Condition="'$(TargetsNetCoreApp)' == 'true' OR '$(TargetsNetFx)' == 'true'" Include="Microsoft.CodeCoverage" />
  </ItemGroup>

  <!--
    Ensure that the native components of TraceEvent are restored into the testhost
    so that TraceEvent can pinvoke into them.
  -->
  <Target Name="CopyTraceEventNativeFiles"
          Condition="'$(TargetGroup)' == 'netcoreapp' OR '$(TargetGroup)' == 'netfx'"
          AfterTargets="AfterResolveReferences">

    <ItemGroup>
      <TraceEventNativeFiles Include="$(PackagesDir)\$(MicrosoftDiagnosticsTracingTraceEventPackageName)\$(TraceEventPackageVersion)\lib\native\**\*.*" />
    </ItemGroup>

    <PropertyGroup>
      <TraceEventDestinationFolder Condition="'$(TargetGroup)' == 'netcoreapp'">$(NETCoreAppTestSharedFrameworkPath)</TraceEventDestinationFolder>
      <TraceEventDestinationFolder Condition="'$(TargetGroup)' == 'netfx'">$(TestHostRootPath)</TraceEventDestinationFolder>
    </PropertyGroup>

    <Copy SourceFiles="@(TraceEventNativeFiles)"
          DestinationFolder="$(TraceEventDestinationFolder)%(RecursiveDir)"
          SkipUnchangedFiles="true" />

  </Target>

  <!-- System.Data.SqlClient tests require sni.dll in the test folder -->
  <ItemGroup Condition="'$(TargetsAOT)'=='true'">
    <PackageReference Include="runtime.native.System.Data.SqlClient.sni" Version="$(RuntimeWinX64RuntimeNativeSystemDataSqlClientSniPackageVersion)" />

    <PackageToInclude Include="runtime.win-arm64.runtime.native.System.Data.SqlClient.sni"/>
    <PackageToInclude Include="runtime.win-x64.runtime.native.System.Data.SqlClient.sni"/>
    <PackageToInclude Include="runtime.win-x86.runtime.native.System.Data.SqlClient.sni"/>
  </ItemGroup>

  <!-- Retrieve the UAP Tools to the TestHost folder -->
  <Target Name="CopyUAPToolsToTestHost"
          Condition="'$(TargetGroup)' == 'uap'"
          AfterTargets="AfterResolveReferences">

    <PropertyGroup>
      <UAPToolsPackageName>microsoft.dotnet.uap.testtools</UAPToolsPackageName>

      <UAPToolsFolder Condition="'$(UAPToolsFolder)'==''">$(PackagesDir)$(UAPToolsPackageName)\$(UAPToolsPackageVersion)\Tools\$(ArchGroup)</UAPToolsFolder>
      <UAPToolsFolder>$(UAPToolsFolder.Replace('/', '\'))</UAPToolsFolder>
    </PropertyGroup>

    <!-- Give a warning that the UAPToolsFolder is not set and that tests won't run -->
    <Warning Condition="('$(UAPToolsFolder)'=='' or !Exists('$(UAPToolsFolder)')) AND '$(BuildAllConfigurations)' != 'true'" Text="Could not find the UAP Tools at '$(UAPToolsFolder)'. Please run sync." />

    <ItemGroup Condition="'$(UAPToolsFolder)'!=''">
      <RunnerFolderContents Include="$(UAPToolsFolder)\Runner\**\*" />
      <LauncherFolderContents Include="$(UAPToolsFolder)\Launcher\**\*" />
    </ItemGroup>

    <Copy Condition="'$(UAPToolsFolder)'!=''"
          SourceFiles="@(RunnerFolderContents)"
          DestinationFolder="$(TestHostRootPath)\Runner\%(RecursiveDir)"
          SkipUnchangedFiles="true"/>

    <Copy Condition="'$(UAPToolsFolder)'!=''"
          SourceFiles="@(LauncherFolderContents)"
          DestinationFolder="$(TestHostRootPath)\Launcher\%(RecursiveDir)"
          SkipUnchangedFiles="true"/>

  </Target>

  <Target Name="VerifyMatchingProjectNVersions"
          BeforeTargets="Build">

    <Error Condition="'$(ProjectNTfsExpectedPrerelease)' != '$(ProjectNTfsTestILCExpectedPrerelease)'" Text="The versions of ProjectN Targeting pack and TestILC have gone out of sync. Please make sure both of the prerelease versions on dependencies.props match." />

  </Target>

  <Target Name="CopyTestILCToolsToTestHost"
          AfterTargets="AfterResolveReferences"
          Condition="'$(TargetsAOT)' == 'true'">

    <PropertyGroup>
      <TestILCToolsPackageName>TestILC</TestILCToolsPackageName>
      <TestILCToolsPackageName Condition="'$(ArchGroup)' == 'x64'">$(TestILCToolsPackageName).amd64ret</TestILCToolsPackageName>
      <TestILCToolsPackageName Condition="'$(ArchGroup)' == 'x86'">$(TestILCToolsPackageName).x86ret</TestILCToolsPackageName>
      <TestILCToolsPackageName Condition="'$(ArchGroup)' == 'arm'">$(TestILCToolsPackageName).armret</TestILCToolsPackageName>
      <TestILCFolder Condition="'$(TestILCFolder)' == ''">$(PackagesDir)$(TestILCToolsPackageName)\$(ProjectNTfsTestILCPackageVersion)\TestILC</TestILCFolder>
    </PropertyGroup>

    <Warning Condition="('$(TestILCFolder)' == '' OR !Exists('$(TestILCFolder)')) AND '$(BuildAllConfigurations)' != 'true'" Text="Could not find the TestILC Tools at '$(TestILCFolder)'. Please run sync." />

    <ItemGroup Condition="Exists('$(TestILCFolder)')">
      <TestILCFolderContents Include="$(TestILCFolder)\**\*" />
    </ItemGroup>

    <Copy Condition="Exists('$(TestILCFolder)')"
          SourceFiles="@(TestILCFolderContents)"
          DestinationFolder="$(InternalTestILCFolder)\%(RecursiveDir)"
          SkipUnchangedFiles="true" />

  </Target>

  <Target Name="AddTestPlatformDependencies"
          Condition="'$(EnableVSTestReferences)' == 'true'"
          BeforeTargets="ResolveReferences">

    <PropertyGroup>
      <TestSdkTFM Condition="'$(TargetsNetFx)' == 'true'">net45</TestSdkTFM>
      <TestSdkTFM Condition="'$(TargetsUap)' == 'true'">uap10.0</TestSdkTFM>
      <TestSdkTFM Condition="'$(TestSdkTFM)' == ''">netcoreapp1.0</TestSdkTFM>
    </PropertyGroup>

    <ItemGroup>
      <ReferenceCopyLocalPaths Include="$(PackagesDir)$(MicrosoftNetTestSdkPackageName)\$(MicrosoftNetTestSdkPackageVersion)\build\$(TestSdkTFM)\*.*">
        <Private>false</Private>
        <NuGetPackageId>$(MicrosoftNetTestSdkPackageName)</NuGetPackageId>
        <NuGetPackageVersion>$(MicrosoftNetTestSdkPackageVersion)</NuGetPackageVersion>
      </ReferenceCopyLocalPaths>
    </ItemGroup>

  </Target>

  <Target Name="AddTestPlatformDependenciesNetCore"
          Condition="'$(TargetGroup)' == 'netcoreapp'"
          BeforeTargets="ResolveReferences">

    <Error Condition="!Exists('$(PackagesDir)$(XUnitRunnerConsolePackageName)\$(XUnitPackageVersion)\tools\netcoreapp2.0\$(XUnitRunner).dll')"
            Text="Error: looks the package $(PackagesDir)$(XUnitRunnerConsolePackageName)\$(XUnitPackageVersion) not restored or missing $(XUnitRunner).dll."
    />
    <Error Condition="'$(EnableVSTestReferences)' == 'true' AND !Exists('$(PackagesDir)$(XUnitTestAdapterPackageId)\$(XUnitPackageVersion)\build\netcoreapp1.0\$(XUnitAdapter).dll')"
            Text="Error: looks the package $(PackagesDir)$(XUnitTestAdapterPackageId)\$(XUnitPackageVersion) not restored or missing $(XUnitAdapter).dll."
    />
    <Error Condition="'$(EnableVSTestReferences)' == 'true' AND !Exists('$(PackagesDir)$(TestPlatformHostPackageId)\$(MicrosoftNetTestSdkPackageVersion)\lib\netstandard1.5\$(TestPlatformHost).dll')"
            Text="Error: looks the package $(PackagesDir)$(TestPlatformHostPackageId)\$(MicrosoftNetTestSdkPackageVersion) not restored or missing $(TestPlatformHost).dll."
    />

    <ItemGroup>
      <ReferenceCopyLocalPaths Include="$(PackagesDir)$(XUnitRunnerConsolePackageName)\$(XUnitPackageVersion)\tools\netcoreapp2.0\*.*">
        <Private>false</Private>
        <NuGetPackageId>$(XUnitRunnerConsolePackageName)</NuGetPackageId>
        <NuGetPackageVersion>$(XUnitPackageVersion)</NuGetPackageVersion>
      </ReferenceCopyLocalPaths>
      <ReferenceCopyLocalPaths Condition="'$(EnableVSTestReferences)' == 'true'" Include="$(PackagesDir)$(XUnitTestAdapterPackageId)\$(XUnitPackageVersion)\build\netcoreapp1.0\*.*">
        <Private>false</Private>
        <NuGetPackageId>$(XUnitTestAdapterPackageId)</NuGetPackageId>
        <NuGetPackageVersion>$(XUnitPackageVersion)</NuGetPackageVersion>
      </ReferenceCopyLocalPaths>
      <ReferenceCopyLocalPaths Condition="'$(EnableVSTestReferences)' == 'true'" Include="$(PackagesDir)$(TestPlatformHostPackageId)\$(MicrosoftNetTestSdkPackageVersion)\lib\netstandard1.5\$(TestPlatformHost).dll">
        <Private>false</Private>
        <NuGetPackageId>$(TestPlatformHostPackageId)</NuGetPackageId>
        <NuGetPackageVersion>$(MicrosoftNetTestSdkPackageVersion)</NuGetPackageVersion>
      </ReferenceCopyLocalPaths>
    </ItemGroup>

  </Target>

  <Target Name="AddTestPlatformDependenciesUap"
          Condition="'$(TargetGroup)' == 'uap' OR '$(TargetGroup)' == 'uapaot'"
          BeforeTargets="ResolveReferences">

    <Error Condition="'$(TargetGroup)' == 'uapaot' AND !Exists('$(PackagesDir)$(XUnitRunnerConsolePackageName)\$(XUnitPackageVersion)\tools\netcoreapp2.0\$(XUnitRunner).dll')"
            Text="Error: looks the package $(PackagesDir)$(XUnitRunnerConsolePackageName)\$(XUnitPackageVersion) not restored or missing $(XUnitRunner).dll."
    />
    <Error Condition="'$(EnableVSTestReferences)' == 'true' AND !Exists('$(PackagesDir)$(XUnitTestAdapterPackageId)\$(XUnitPackageVersion)\build\uap10.0\$(XUnitAdapter).dll')"
            Text="Error: looks the package $(PackagesDir)$(XUnitTestAdapterPackageId)\$(XUnitPackageVersion) not restored or missing $(XUnitAdapter).dll."
    />
    <Error Condition="'$(EnableVSTestReferences)' == 'true' AND !Exists('$(PackagesDir)$(TestPlatformHostPackageId)\$(MicrosoftNetTestSdkPackageVersion)\lib\uap10.0\$(TestPlatformHost).dll')"
            Text="Error: looks the package $(PackagesDir)$(TestPlatformHostPackageId)\$(MicrosoftNetTestSdkPackageVersion) not restored or missing $(TestPlatformHost).dll."
    />

    <ItemGroup>
      <ReferenceCopyLocalPaths Condition="'$(TargetGroup)' == 'uapaot'" Include="$(PackagesDir)$(XUnitRunnerConsolePackageName)\$(XUnitPackageVersion)\tools\netcoreapp2.0\*.*">
        <Private>false</Private>
        <NuGetPackageId>$(XUnitRunnerConsolePackageName)</NuGetPackageId>
        <NuGetPackageVersion>$(XUnitPackageVersion)</NuGetPackageVersion>
      </ReferenceCopyLocalPaths>
      <ReferenceCopyLocalPaths Condition="'$(EnableVSTestReferences)' == 'true'" Include="$(PackagesDir)$(XUnitTestAdapterPackageId)\$(XUnitPackageVersion)\build\uap10.0\*.dll">
        <Private>false</Private>
        <NuGetPackageId>$(XUnitTestAdapterPackageId)</NuGetPackageId>
        <NuGetPackageVersion>$(XUnitPackageVersion)</NuGetPackageVersion>
      </ReferenceCopyLocalPaths>
      <ReferenceCopyLocalPaths Condition="'$(EnableVSTestReferences)' == 'true'" Include="$(PackagesDir)$(TestPlatformHostPackageId)\$(MicrosoftNetTestSdkPackageVersion)\lib\uap10.0\$(TestPlatformHost).dll">
        <Private>false</Private>
        <NuGetPackageId>$(TestPlatformHostPackageId)</NuGetPackageId>
        <NuGetPackageVersion>$(MicrosoftNetTestSdkPackageVersion)</NuGetPackageVersion>
      </ReferenceCopyLocalPaths>
    </ItemGroup>

  </Target>

  <Target Name="AddTestPlatformDependenciesNetfx"
          Condition="'$(TargetGroup)' == 'netfx'"
          BeforeTargets="ResolveReferences">

    <Error Condition="!Exists('$(PackagesDir)$(XUnitRunnerConsolePackageName)\$(XUnitPackageVersion)\tools\net472\$(XUnitRunner).exe')"
            Text="Error: looks the package $(PackagesDir)$(XUnitRunnerConsolePackageName)\$(XUnitPackageVersion) not restored or missing $(XUnitRunner).exe."
    />
    <Error Condition="'$(EnableVSTestReferences)' == 'true' AND !Exists('$(PackagesDir)$(XUnitTestAdapterPackageId)\$(XUnitPackageVersion)\build\_common\$(XUnitAdapter).dll')"
            Text="Error: looks the package $(PackagesDir)$(XUnitTestAdapterPackageId)\$(XUnitPackageVersion) not restored or missing $(XUnitAdapter).dll."
    />

    <ItemGroup>
      <ReferenceCopyLocalPaths
        Include="$(PackagesDir)$(XUnitRunnerConsolePackageName)\$(XUnitPackageVersion)\tools\net472\*.*"
        Exclude="$(PackagesDir)$(XUnitRunnerConsolePackageName)\$(XUnitPackageVersion)\tools\net472\xunit.console.*exe.config"
      >
        <Private>false</Private>
        <NuGetPackageId>$(XUnitRunnerConsolePackageName)</NuGetPackageId>
        <NuGetPackageVersion>$(XUnitPackageVersion)</NuGetPackageVersion>
      </ReferenceCopyLocalPaths>
      <ReferenceCopyLocalPaths Condition="'$(EnableVSTestReferences)' == 'true'" Include="$(PackagesDir)$(XUnitTestAdapterPackageId)\$(XUnitPackageVersion)\build\_common\*.*">
        <Private>false</Private>
        <NuGetPackageId>$(XUnitTestAdapterPackageId)</NuGetPackageId>
        <NuGetPackageVersion>$(XUnitPackageVersion)</NuGetPackageVersion>
      </ReferenceCopyLocalPaths>
    </ItemGroup>

  </Target>

</Project>
