<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <!-- Always restore the x64 assets. These are build-only assets, so they should match the environment of the build. -->
    <NugetRuntimeIdentifier>$(RuntimeOS)-x64</NugetRuntimeIdentifier>
    <OutputPath>$(ToolsDir)ilasm</OutputPath>
    <EnableBinPlacing>false</EnableBinPlacing>
    <RidSpecificAssets>true</RidSpecificAssets>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.NETCore.Platforms">
      <Version>2.0.0-$(CoreFxExpectedPrerelease)</Version>
    </PackageReference>
    <PackageReference Include="Microsoft.NETCore.Runtime.CoreCLR">
      <Version>2.0.0-$(CoreClrExpectedPrerelease)</Version>
    </PackageReference>
    <PackageReference Include="Microsoft.NETCore.ILAsm">
      <Version>2.0.0-$(CoreClrExpectedPrerelease)</Version>
    </PackageReference>
  </ItemGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
  <!-- When zipped/unzipped in a package, ilasm loses its executable flag. Reset it. -->
  <Target Name="MakeIlasmExecutable" AfterTargets="CopyFilesToOutputDirectory" Condition="'$(RunningOnUnix)' == 'true'">
    <Exec Command="chmod +x $(OutputPath)ilasm" />
  </Target>
</Project>
