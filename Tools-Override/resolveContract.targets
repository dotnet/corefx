<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup Condition="'$(ResolveMatchingContract)' == 'true'">
    <AddProjectReferencesDynamicallyDependsOn>
      ResolveMatchingContract;
      $(AddProjectReferencesDynamicallyDependsOn);
    </AddProjectReferencesDynamicallyDependsOn>
    <ResolveReferencesDependsOn>
      $(ResolveReferencesDependsOn);
      VerifyMatchingContract
    </ResolveReferencesDependsOn>
  </PropertyGroup>

  <Target Name="ResolveMatchingContract">
    <PropertyGroup>
      <ContractProject Condition="'$(ContractProject)' == ''">$(SourceDir)/$(MSBuildProjectName)/ref/$(MSBuildProjectName).csproj</ContractProject>
      <HasMatchingContract Condition="'$(HasMatchingContract)' == '' and Exists('$(ContractProject)')">true</HasMatchingContract>
      <ContractAssemblyPath Condition="'$(ContractAssemblyPath)' == ''">$(ContractOutputPath)/$(MSBuildProjectName).dll</ContractAssemblyPath>
    </PropertyGroup>

    <ItemGroup Condition="'$(HasMatchingContract)' == 'true'">
      <ResolvedMatchingContract Condition="'$(IsDesktopFacade)' != 'true' and Exists('$(ContractAssemblyPath)')" Include="$(ContractAssemblyPath)" />

      <!-- If the contract doesn't exist in the default contract output path add a project reference to the contract project to resolve -->
      <ProjectReference Condition="'@(ResolvedMatchingContract)' == ''" Include="$(ContractProject)">
        <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
        <OutputItemType>ResolvedMatchingContract</OutputItemType>
      </ProjectReference>
    </ItemGroup>
  </Target>

  <Target Name="VerifyMatchingContract">
    <Error Condition="'$(HasMatchingContract)' == 'true' and !Exists('%(ResolvedMatchingContract.Identity)')" Text="ResolveMatchingContract could not find a matching contract '%(ResolvedMatchingContract.Identity)' not found." />
  </Target>
</Project>