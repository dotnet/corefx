<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <!-- todo: improve this condition -->
    <ILLinkTrimAssembly Condition="'$(ILLinkTrimAssembly)' == '' AND '$(IsRuntimeAssembly)' == 'true' AND '$(BuildingNETCoreAppVertical)' == 'true'">true</ILLinkTrimAssembly>
  </PropertyGroup>

  <PropertyGroup>
    <TargetsTriggeredByCompilation Condition="'$(ILLinkTrimAssembly)' == 'true'">
      $(TargetsTriggeredByCompilation);ILLinkTrimAssembly
    </TargetsTriggeredByCompilation>
  </PropertyGroup>

  <!-- Inputs and outputs of ILLinkTrimAssembly -->
  <PropertyGroup>
    <ILLinkToolPath Condition="'$(ILLinkToolPath)' == ''">$(ToolsDir)ILLink/illink.dll</ILLinkToolPath>
    <ILLinkTrimAssemblyPath>$(IntermediateOutputPath)$(TargetName)$(TargetExt)</ILLinkTrimAssemblyPath>
    <ILLinkTrimAssemblySymbols>$(IntermediateOutputPath)$(TargetName).pdb</ILLinkTrimAssemblySymbols>
    <ILLinkTrimInputPath>$(IntermediateOutputPath)PreTrim/</ILLinkTrimInputPath>
    <ILLinkTrimInputAssembly>$(ILLinkTrimInputPath)$(TargetName)$(TargetExt)</ILLinkTrimInputAssembly>
    <ILLinkTrimInputSymbols>$(ILLinkTrimInputPath)$(TargetName).pdb</ILLinkTrimInputSymbols>
    <ILLinkTrimOutputPath>$(IntermediateOutputPath)</ILLinkTrimOutputPath>

    <ILLinkTrimXml Condition="'$(ILLinkTrimXml)' == '' AND Exists('$(MSBuildProjectDirectory)/ILLinkTrim.xml')">$(MSBuildProjectDirectory)/ILLinkTrim.xml</ILLinkTrimXml>

    <!-- if building a portable PDB, tell illink to rewrite the symbols file -->
    <ILLinkRewritePDBs Condition="'$(ILLinkRewritePDBs)' == '' AND '$(DebugSymbols)' != 'false' AND '$(DebugType)'=='Portable'">true</ILLinkRewritePDBs>
  </PropertyGroup>

  <!-- ILLinkTrimAssembly
       Examines the "input assembly" for IL that is unreachable from public API and trims that,
       rewriting the assembly to an "output assembly"
  -->
  <Target Name="ILLinkTrimAssembly" DependsOnTargets="EnsureBuildToolsRuntime">
    <ItemGroup>
      <!-- currently only directories are supported by ILLink. -->
      <_ILLinkReferenceDirectory Include="%(ReferencePath.RootDir)%(ReferencePath.Directory)" />
    </ItemGroup>

    <PropertyGroup>
      <!-- Root public entry points in this assembly.
           Currently this must be passed as name and directory.
           Directory of this assembly *must* occur before directory of references. -->
      <ILLinkArgs>$(ILLinkArgs) -r $(TargetName)</ILLinkArgs>
      <ILLinkArgs>$(ILLinkArgs) -d $(ILLinkTrimInputPath)</ILLinkArgs>
      <!-- directories to examine for assembly dependencies -->
      <ILLinkArgs>$(ILLinkArgs) @(_ILLinkReferenceDirectory->'-d %(Identity)', ' ')</ILLinkArgs>
      <!-- don't trim anything that's defined in core assemblies -->
      <ILLinkArgs>$(ILLinkArgs) -c skip</ILLinkArgs>
      <ILLinkArgs>$(ILLinkArgs) -p skip netstandard</ILLinkArgs>
      <!-- keep type-forward assemblies (facades) -->
      <ILLinkArgs>$(ILLinkArgs) -t</ILLinkArgs>
      <ILLinkArgs>$(ILLinkArgs) -out $(ILLinkTrimOutputPath)</ILLinkArgs>
      <ILLinkArgs Condition="'$(ILLinkTrimXml)' != ''">$(ILLinkArgs) -x $(ILLinkTrimXml)</ILLinkArgs>
      <ILLinkArgs Condition="'$(ILLinkRewritePDBs)' == 'true' AND Exists('$(ILLinkTrimAssemblySymbols)')">$(ILLinkArgs) -b true</ILLinkArgs>
    </PropertyGroup>

    <MakeDir Directories="$(ILLinkTrimInputPath)" />

    <!-- Move the assembly into a subdirectory for ILLink -->
    <Move SourceFiles="$(ILLinkTrimAssemblyPath)"
          DestinationFolder="$(ILLinkTrimInputPath)"
    />

    <!-- Move the PDB into a subdirectory for ILLink if we are rewriting PDBs -->
    <Move SourceFiles="$(ILLinkTrimAssemblySymbols)"
          DestinationFolder="$(ILLinkTrimInputPath)"
          Condition="'$(ILLinkRewritePDBs)' == 'true' AND Exists('$(ILLinkTrimAssemblySymbols)')"
    />

    <PropertyGroup>
      <ILLinkCmd>$(OverrideToolHost) "$(ILLinkToolPath)"</ILLinkCmd>
    </PropertyGroup>

    <Exec Command="$(ILLinkCmd) $(ILLinkArgs)" />

    <PropertyGroup>
      <AsmDiffArgs>$(AsmDiffArgs) $(ILLinkTrimInputAssembly)</AsmDiffArgs>
      <AsmDiffArgs>$(AsmDiffArgs) $(ILLinkTrimAssemblyPath)</AsmDiffArgs>
      <AsmDiffArgs>$(AsmDiffArgs) -includePrivateApis -includeInternalApis -alwaysDiffMembers -diffAttributes</AsmDiffArgs>

      <AsmDiffReport>$(IntermediateOutputPath)$(TargetName).diff.html</AsmDiffReport>
      <AsmDiffReportArgs>$(AsmDiffArgs) -out:$(AsmDiffReport)</AsmDiffReportArgs>
      <AsmDiffReportArgs>$(AsmDiffReportArgs) -unchanged -changed -added -removed</AsmDiffReportArgs>

      <AsmDiffList>$(IntermediateOutputPath)$(TargetName).diff.csv</AsmDiffList>
      <AsmDiffListArgs>$(AsmDiffArgs) -out:$(AsmDiffList)</AsmDiffListArgs>
      <AsmDiffListArgs>$(AsmDiffListArgs) -unchanged -changed -added -removed </AsmDiffListArgs>
      <AsmDiffListArgs>$(AsmDiffListArgs) -diffWriter:CSV</AsmDiffListArgs>
    </PropertyGroup>

    <Exec Condition="'$(AsmDiffCmd)' != ''" Command="$(AsmDiffCmd) $(AsmDiffReportArgs)" />
    <Message Condition="'$(AsmDiffCmd)' != ''" Text="$(AsmDiffReport)" />
    <Exec Condition="'$(AsmDiffCmd)' != ''" Command="$(AsmDiffCmd) $(AsmDiffListArgs)" />
    <Message Condition="'$(AsmDiffCmd)' != ''" Text="$(AsmDiffList)" />
  </Target>
  
  <!-- Similar to _CheckForCompileOutputs and runs in the same places, 
       always set these even if compile didn't run. -->
  <Target Name="_CheckForILLinkTrimAssemblyOutputs" 
          BeforeTargets="CopyFilesToOutputDirectory;_CleanGetCurrentAndPriorFileWrites"
          Condition="'$(ILLinkTrimAssembly)' == 'true'">
    <ItemGroup>
      <PreTrimmedItem Condition="Exists('$(ILLinkTrimInputAssembly)')" Include="$(ILLinkTrimInputAssembly)" />
      <PreTrimmedItem Condition="'$(ILLinkRewritePDBs)' == 'true' AND Exists('$(ILLinkTrimInputSymbols)')" Include="$(ILLinkTrimInputSymbols)" />
      <FileWrites Include="@(PreTrimmedItem)" />

      <TrimmingReport Condition="Exists('$(AsmDiffReport)')" Include="$(AsmDiffReport)" />
      <TrimmingReport Condition="Exists('$(AsmDiffList)')" Include="$(AsmDiffList)" />
    </ItemGroup>

    <ItemGroup Condition="Exists('$(ILLinkTrimInputAssembly)') AND '$(BinPlaceILLinkTrimAssembly)' == 'true'">
      <BinPlaceConfiguration Include="$(BuildConfiguration)">
        <RuntimePath>$(BinDir)ILLinkTrimAssembly/$(BuildConfiguration)/trimmed</RuntimePath>
      </BinPlaceConfiguration>
      <BinPlaceConfiguration Include="$(BuildConfiguration)">
        <RuntimePath>$(BinDir)ILLinkTrimAssembly/$(BuildConfiguration)/reports</RuntimePath>
        <ItemName>TrimmingReport</ItemName>
      </BinPlaceConfiguration>
      <BinPlaceConfiguration Include="$(BuildConfiguration)">
        <RuntimePath>$(BinDir)ILLinkTrimAssembly/$(BuildConfiguration)/pretrimmed</RuntimePath>
        <ItemName>PreTrimmedItem</ItemName>
      </BinPlaceConfiguration>
    </ItemGroup>
  </Target>
</Project>
