{
  "build": [
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Change permissions to agent folder for cleanup steps",
      "timeoutInMinutes": 0,
      "refName": "Task1",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "sudo",
        "arguments": "chmod 777 -R .",
        "workingFolder": "$(Agent.WorkFolder)",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Delete files from $(PB_GitDirectory)",
      "timeoutInMinutes": 0,
      "refName": "Task2",
      "task": {
        "id": "b7e8b412-0437-4065-9371-edc5881de25b",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "SourceFolder": "$(PB_GitDirectory)",
        "Contents": "**\n.gitignore\n.editorconfig\n.gitattributes\n.gitmirrorall\n.git/**\n.git"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git clone",
      "timeoutInMinutes": 0,
      "refName": "Task3",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "clone $(PB_VsoCorefxGitUrl) $(PB_GitDirectory)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git checkout",
      "timeoutInMinutes": 0,
      "refName": "Task4",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "checkout $(SourceVersion)",
        "workingFolder": "$(PB_GitDirectory)",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize tools",
      "timeoutInMinutes": 0,
      "refName": "Task5",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(PB_GitDirectory)/init-tools.sh",
        "arguments": "",
        "workingFolder": "$(PB_GitDirectory)",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize Docker",
      "timeoutInMinutes": 0,
      "refName": "Task6",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(PB_GitDirectory)/Tools/scripts/docker/init-docker.sh",
        "arguments": "$(PB_DockerImageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Generate Version Assets",
      "timeoutInMinutes": 0,
      "refName": "Task7",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run $(PB_DockerCommonRunArgs) $(PB_DockerVolumeName)/build-managed.sh -OfficialBuildId=$(OfficialBuildId) -- /t:GenerateVersionSourceFile /p:GenerateVersionSourceFile=true",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run sync.sh",
      "timeoutInMinutes": 0,
      "refName": "Task8",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run $(PB_DockerCommonRunArgs) $(PB_DockerVolumeName)/sync.sh $(PB_SyncArguments)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build.sh",
      "timeoutInMinutes": 0,
      "refName": "Task9",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -e ROOTFS_DIR $(PB_DockerCommonRunArgs) $(PB_DockerVolumeName)/build.sh -OfficialBuildId=$(OfficialBuildId) $(PB_BuildArguments)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run publish-packages.sh",
      "timeoutInMinutes": 0,
      "refName": "Task10",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run $(PB_DockerCommonRunArgs) $(PB_DockerVolumeName)/publish-packages.sh -AzureAccount=$(PB_CloudDropAccountName) -AzureToken=$(CloudDropAccessToken) -Container=$(PB_Label) -verbose -- /p:OverwriteOnPublish=false",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Copy Files to: $(Build.StagingDirectory)\\BuildLogs",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "refName": "CopyFiles1",
      "task": {
        "id": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "SourceFolder": "$(PB_GitDirectory)",
        "Contents": "*.log",
        "TargetFolder": "$(Build.StagingDirectory)\\BuildLogs",
        "CleanTargetFolder": "false",
        "OverWrite": "false",
        "flattenFolders": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Publish Artifact: BuildLogs",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "refName": "PublishBuildArtifacts2",
      "task": {
        "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "PathtoPublish": "$(Build.StagingDirectory)\\BuildLogs",
        "ArtifactName": "BuildLogs",
        "ArtifactType": "Container",
        "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)",
        "Parallel": "false",
        "ParallelCount": "8"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Cleanup Docker",
      "timeoutInMinutes": 0,
      "condition": "always()",
      "refName": "Task12",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(PB_GitDirectory)/Tools/scripts/docker/cleanup-docker.sh",
        "arguments": "",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Cleanup VSTS Agent",
      "timeoutInMinutes": 0,
      "condition": "always()",
      "refName": "Task13",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(PB_GitDirectory)/Tools/msbuild.sh",
        "arguments": "cleanupagent.proj /p:AgentDirectory=$(Agent.HomeDirectory) /p:DoClean=$(PB_CleanAgent)",
        "workingFolder": "$(Build.SourcesDirectory)/corefx/Tools/scripts/vstsagent/",
        "failOnStandardError": "false"
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5d58cc01-7c75-450c-be18-a388ddb129ec"
      },
      "inputs": {
        "branchFilters": "[\"+refs/heads/*\"]",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "234347",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "CloudDropAccessToken": {
      "value": null,
      "isSecret": true
    },
    "GitHubBranch": {
      "value": "sni_plus_latestbuildtools"
    },
    "OfficialBuildId": {
      "value": "$(Build.BuildNumber)"
    },
    "PB_Architecture": {
      "value": "arm"
    },
    "PB_BuildArguments": {
      "value": "-BuildArch=$(PB_Architecture)"
    },
    "PB_CleanAgent": {
      "value": "true"
    },
    "PB_CloudDropAccountName": {
      "value": "dotnetbuildoutput"
    },
    "PB_ConfigurationGroup": {
      "value": "Release"
    },
    "PB_DockerCommonRunArgs": {
      "value": "--rm --name $(PB_DockerContainerName) -v \"$(PB_GitDirectory):$(PB_DockerVolumeName)\" -w=\"$(PB_DockerVolumeName)\" -e \"PACKAGEVERSIONPROPSURL=$(PB_PackageVersionPropsUrl)\" $(PB_DockerImageName)"
    },
    "PB_DockerContainerName": {
      "value": "corefx-cross-$(Build.BuildId)"
    },
    "PB_DockerCopyDest": {
      "value": "$(Build.BinariesDirectory)/docker_repo"
    },
    "PB_DockerImageName": {
      "value": "$(PB_DockerRepository):$(PB_DockerTag)"
    },
    "PB_DockerRepository": {
      "value": "microsoft/dotnet-buildtools-prereqs"
    },
    "PB_DockerTag": {
      "value": "ubuntu-14.04-cross-0cd4667-20170319080304",
      "allowOverride": true
    },
    "PB_DockerVolumeName": {
      "value": "/root/corefx-$(Build.BuildId)"
    },
    "PB_GitDirectory": {
      "value": "$(Build.SourcesDirectory)/corefx"
    },
    "PB_Label": {
      "value": "$(Build.BuildNumber)"
    },
    "PB_VsoAccountName": {
      "value": "dn-bot"
    },
    "PB_VsoCorefxGitUrl": {
      "value": "https://$(PB_VsoAccountName):$(VsoPassword)@devdiv.visualstudio.com/DevDiv/_git/$(PB_VsoRepositoryName)/"
    },
    "PB_VsoRepositoryName": {
      "value": "DotNet-CoreFX-Trusted"
    },
    "portableBuild": {
      "value": ""
    },
    "ROOTFS_DIR": {
      "value": "/crossrootfs/$(PB_Architecture)",
      "allowOverride": true
    },
    "SourceVersion": {
      "value": "HEAD",
      "allowOverride": true
    },
    "system.debug": {
      "value": "false",
      "allowOverride": true
    },
    "VsoPassword": {
      "value": null,
      "isSecret": true
    },
    "PB_SyncArguments": {
      "value": "-p -- /p:ArchGroup=$(PB_Architecture)",
      "allowOverride": true
    },
    "PB_PackageVersionPropsUrl": {
      "value": ""
    }
  },
  "demands": [
    "Agent.OS -equals linux"
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:-rr)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 90,
  "jobCancelTimeoutInMinutes": 5,
  "repository": {
    "properties": {
      "labelSources": "0",
      "reportBuildStatus": "true",
      "fetchDepth": "0",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "cleanOptions": "0",
      "checkoutNestedSubmodules": "false",
      "labelSourcesFormat": "$(build.buildNumber)"
    },
    "id": "58fa2458-e392-4373-ba2b-dd3ef0c2d7ce",
    "type": "TfsGit",
    "name": "DotNet-CoreFX-Trusted",
    "url": "https://devdiv.visualstudio.com/DevDiv/_git/DotNet-CoreFX-Trusted",
    "defaultBranch": "refs/heads/master",
    "clean": "false",
    "checkoutSubmodules": false
  },
  "processParameters": {},
  "quality": "definition",
  "drafts": [],
  "queue": {
    "id": 36,
    "name": "DotNet-Build",
    "pool": {
      "id": 39,
      "name": "DotNet-Build"
    }
  },
  "id": 5247,
  "name": "DotNet-CoreFx-Trusted-Linux-Crossbuild",
  "path": "\\",
  "type": "build",
  "queueStatus": "enabled",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418098432,
    "visibility": "organization"
  }
}