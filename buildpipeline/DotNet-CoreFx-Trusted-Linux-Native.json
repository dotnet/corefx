{
  "build": [
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Delete files from $(Build.SourcesDirectory)",
      "timeoutInMinutes": 0,
      "task": {
        "id": "b7e8b412-0437-4065-9371-edc5881de25b",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "SourceFolder": "$(Build.SourcesDirectory)",
        "Contents": "**\n.gitignore"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git clone",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "clone $(VsoCorefxGitUrl) corefx",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git checkout",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "checkout $(SourceVersion)",
        "workingFolder": "$(Build.SourcesDirectory)/corefx",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": true,
      "displayName": "Initialize tools",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)/corefx/init-tools.sh",
        "arguments": "",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": true,
      "displayName": "Docker clean-up",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)/corefx/Tools/scripts/docker/cleanup-docker.sh",
        "arguments": "",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Clone repository",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run --name $(DockerContainerName) $(DockerImageName) git clone $(VsoCorefxGitUrl) $(GitDirectory)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run clean.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerContainerName) $(GitDirectory)/clean.sh",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Check out the specified commit",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w $(GitDirectory) --name $(DockerContainerName) $(DockerContainerName) git checkout $(SourceVersion)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Generate version assets",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerContainerName) $(GitDirectory)/build-managed.sh -OfficialBuildId=$(OfficialBuildId) -- /t:GenerateVersionSourceFile /p:GenerateVersionSourceFile=true",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerContainerName) $(GitDirectory)/build-native.sh -buildArch=$(Platform) -$(ConfigurationGroup) -- generateversion",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build-packages.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerContainerName) $(GitDirectory)/build-packages.sh -$(ConfigurationGroup) -DisableManagedPackage",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Commit changes",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "commit $(DockerContainerName) $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Publish packages",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -w=\"$(GitDirectory)\" --name $(DockerContainerName) $(DockerContainerName) $(GitDirectory)/publish-packages.sh -AzureAccount=$(CloudDropAccountName) -AzureToken=$(CloudDropAccessToken) -Container=$(Label) -verbose -- /p:OverwriteOnPublish=true",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove old docker build logs",
      "timeoutInMinutes": 0,
      "task": {
        "id": "b7e8b412-0437-4065-9371-edc5881de25b",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "SourceFolder": "$(DockerCopyDest)",
        "Contents": "*"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Expose docker repo for publishing",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "cp $(DockerContainerName):$(GitDirectory) $(DockerCopyDest)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Remove container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "rm $(DockerContainerName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": true,
      "displayName": "Copy Publish Artifact: BuildLogs",
      "timeoutInMinutes": 0,
      "task": {
        "id": "1d341bb0-2106-458c-8422-d00bcea6512a",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "CopyRoot": "$(DockerCopyDest)/corefx",
        "Contents": "*.log",
        "ArtifactName": "BuildLogs",
        "ArtifactType": "Container",
        "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
      }
    },
    {
      "enabled": false,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Compress the bin directory",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "tar",
        "arguments": "-zcvf $(DockerCopyDest)/bin.tar.gz bin",
        "workingFolder": "$(DockerCopyDest)/corefx",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Run docker version",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "version",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Copy Publish Artifact: bin",
      "timeoutInMinutes": 0,
      "task": {
        "id": "1d341bb0-2106-458c-8422-d00bcea6512a",
        "versionSpec": "*",
        "definitionType": "task"
      },
      "inputs": {
        "CopyRoot": "$(DockerCopyDest)",
        "Contents": "bin.tar.gz",
        "ArtifactName": "bin",
        "ArtifactType": "Container",
        "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "7c555368-ca64-4199-add6-9ebaf0b0137d"
      },
      "inputs": {
        "multipliers": "[]",
        "parallel": "false",
        "continueOnError": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "234347",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "system.debug": {
      "value": "false",
      "allowOverride": true
    },
    "Platform": {
      "value": "x64",
      "allowOverride": true
    },
    "ConfigurationGroup": {
      "value": "Release",
      "allowOverride": true
    },
    "GitRepo": {
      "value": "$(VsoCorefxGitUrl)"
    },
    "GitDirectory": {
      "value": "/root/corefx"
    },
    "DockerContainerName": {
      "value": "$(Build.BuildId)"
    },
    "DockerImageName": {
      "value": "$(DockerRepository):$(DockerTag)"
    },
    "DockerRepository": {
      "value": "chcosta/dotnetcore"
    },
    "DockerTag": {
      "value": "debian82_prereqs_2",
      "allowOverride": true
    },
    "CloudDropAccountName": {
      "value": "dotnetbuildoutput"
    },
    "CloudDropAccessToken": {
      "value": null,
      "isSecret": true
    },
    "OfficialBuildId": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "Label": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "SourceVersion": {
      "value": "HEAD",
      "allowOverride": true
    },
    "RepoUser": {
      "value": "dn-bot"
    },
    "RepoAccessToken": {
      "value": null,
      "isSecret": true
    },
    "DockerCopyDest": {
      "value": "$(Build.BinariesDirectory)/docker_repo"
    },
    "VsoAccountName": {
      "value": "dn-bot"
    },
    "VsoPassword": {
      "value": null,
      "isSecret": true
    },
    "VsoRepoName": {
      "value": "DotNet-CoreFX-Trusted",
      "allowOverride": true
    },
    "VsoCorefxGitUrl": {
      "value": "https://$(VsoAccountName):$(VsoPassword)@devdiv.visualstudio.com/DevDiv/_git/$(VsoRepoName)/"
    }
  },
  "demands": [
    "Agent.OS -equals linux"
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [
        "build.SourceLabel"
      ],
      "artifactTypesToDelete": [],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:-rr)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 60,
  "repository": {
    "properties": {
      "labelSources": "0",
      "reportBuildStatus": "true"
    },
    "id": "58fa2458-e392-4373-ba2b-dd3ef0c2d7ce",
    "type": "TfsGit",
    "name": "DotNet-CoreFX-Trusted",
    "url": "https://devdiv.visualstudio.com/DevDiv/_git/DotNet-CoreFX-Trusted",
    "defaultBranch": "refs/heads/master",
    "clean": "true",
    "checkoutSubmodules": false
  },
  "quality": "definition",
  "defaultBranch": "refs/heads/master",
  "queue": {
    "pool": {
      "id": 39,
      "name": "DotNet-Build"
    },
    "id": 36,
    "name": "DotNet-Build"
  },
  "path": "\\",
  "type": "build",
  "id": 1054,
  "name": "DotNet-CoreFx-Trusted-Linux-Native",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418097399
  }
}