{
  "build": [
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "displayName": "run begin.ps1",
      "timeoutInMinutes": 0,
      "alwaysRun": true,
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "targetType": "inline",
        "filePath": "",
        "arguments": "",
        "script": "if (Test-Path \"$Env:AgentToolsPath\\begin.ps1\") {\n   \"$Env:AgentToolsPath\\begin.ps1 script found. Executing...\"\n    & $Env:AgentToolsPath\\begin.ps1\n} else {\n   \"$Env:AgentToolsPath\\begin.ps1 script does not exist. Moving on...\"\n}",
        "errorActionPreference": "continue",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "true",
        "workingDirectory": ""
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Delete 'corefx'",
      "timeoutInMinutes": 0,
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptType": "inlineScript",
        "scriptName": "",
        "arguments": "-path $(build.SourcesDirectory)\\corefx",
        "workingFolder": "",
        "inlineScript": "param($path)\nif ($path -and (Test-Path $path)){\nStop-Process -processname msbuild -ErrorAction Ignore -Verbose\nStop-Process -processname dotnet -ErrorAction Ignore -Verbose\nStop-Process -processname vbcscompiler -ErrorAction Ignore -Verbose\n$emptyFolder = (New-Item -ItemType Directory (Join-Path -Path $env:TEMP -ChildPath ([System.IO.Path]::GetRandomFileName()))).FullName\nrobocopy $emptyFolder $path /purge\nRemove-Item -Recurse -Force $path,$emptyFolder \nexit 0\n}",
        "failOnStandardError": "true"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git clone",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(PB_Git)",
        "arguments": "clone $(PB_VsoCorefxGitUrl) corefx",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git checkout",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(PB_Git)",
        "arguments": "checkout $(SourceVersion)",
        "workingFolder": "corefx",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Install Signing Plugin",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), in(variables.PB_SignType, 'real', 'test'))",
      "task": {
        "id": "30666190-6959-11e5-9f96-f56098202fef",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "signType": "real",
        "zipSources": "false",
        "version": "",
        "feedSource": "https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json",
        "esrpSigning": "$(PB_UseEsrpSigning)"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run $(Build.SourcesDirectory)\\corefx\\clean.cmd",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)\\corefx\\clean.cmd",
        "arguments": "-all",
        "workingFolder": "corefx",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run Build",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)\\corefx\\build.cmd",
        "arguments": "-ci /p:OfficialBuildId=$(OfficialBuildId) $(PB_BuildArguments) $(PB_SyncArguments) $(PB_OptionalToolingSyncArguments) $(PB_PipelineBuildMSBuildArguments)",
        "workingFolder": "corefx",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run Build Tests",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), ne(variables.PB_SkipTests, 'true'))",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)\\corefx\\build.cmd",
        "arguments": "-ci -test $(PB_BuildTestsArguments)",
        "workingFolder": "corefx",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Create Helix Test Jobs",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), ne(variables.PB_SkipTests, 'true'), ne(variables.PB_EnableCloudTest, 'false'))",
      "task": {
        "id": "c6c4c611-aa2e-4a33-b606-5eaba2196824",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "solution": "$(Build.SourcesDirectory)\\corefx\\src\\upload-tests.proj",
        "msbuildLocationMethod": "version",
        "msbuildVersion": "14.0",
        "msbuildArchitecture": "x64",
        "msbuildLocation": "",
        "platform": "",
        "configuration": "",
        "msbuildArguments": "$(PB_CreateHelixArguments) /p:\"Branch=$(SourceBranch)\" /p:\"CloudDropConnectionString=DefaultEndpointsProtocol=https;AccountName=$(PB_CloudDropAccountName);AccountKey=$(CloudDropAccessToken);EndpointSuffix=core.windows.net\" /p:\"CloudResultsConnectionString=DefaultEndpointsProtocol=https;AccountName=$(PB_CloudResultsAccountName);AccountKey=$(OutputCloudResultsAccessToken);EndpointSuffix=core.windows.net\" /p:\"HelixApiAccessKey=$(HelixApiAccessKey)\" /p:\"HelixApiEndpoint=$(PB_HelixApiEndPoint)\" /p:TargetQueues=$(PB_TargetQueue) /p:\"OfficialBuildId=$(OfficialBuildId)\" /p:\"ProductBuildId=$(ProductBuildId)\"",
        "clean": "false",
        "maximumCpuCount": "false",
        "restoreNugetPackages": "false",
        "logProjectEvents": "false",
        "createLogFile": "false"
      }
    },

    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Push packages to Azure",
      "timeoutInMinutes": 0,
      "task": {
        "id": "c6c4c611-aa2e-4a33-b606-5eaba2196824",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "solution": "$(Build.SourcesDirectory)\\corefx\\src\\publish.proj",
        "msbuildLocationMethod": "version",
        "msbuildVersion": "14.0",
        "msbuildArchitecture": "x64",
        "msbuildLocation": "",
        "platform": "",
        "configuration": "",
        "msbuildArguments": "/p:CloudDropAccountName=$(PB_CloudDropAccountName) /p:CloudDropAccessToken=$(CloudDropAccessToken) /p:ContainerName=$(PB_Label) /p:OverwriteOnPublish=false",
        "clean": "false",
        "maximumCpuCount": "false",
        "restoreNugetPackages": "false",
        "logProjectEvents": "false",
        "createLogFile": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Copy Files to: $(Build.StagingDirectory)\\BuildLogs",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "task": {
        "id": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "SourceFolder": "$(Build.SourcesDirectory)\\corefx",
        "Contents": "*.log",
        "TargetFolder": "$(Build.StagingDirectory)\\BuildLogs",
        "CleanTargetFolder": "false",
        "OverWrite": "false",
        "flattenFolders": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Publish Artifact: BuildLogs",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "task": {
        "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "PathtoPublish": "$(Build.StagingDirectory)\\BuildLogs",
        "ArtifactName": "BuildLogs",
        "ArtifactType": "Container",
        "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)",
        "Parallel": "false",
        "ParallelCount": "8"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Execute cleanup tasks",
      "timeoutInMinutes": 0,
      "condition": "always()",
      "task": {
        "id": "521a94ea-9e68-468a-8167-6dcf361ea776",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {}
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Final clean to remove any lingering process",
      "timeoutInMinutes": 0,
      "condition": "always()",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)\\corefx\\clean.cmd",
        "arguments": "",
        "workingFolder": "corefx",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "run end.ps1",
      "timeoutInMinutes": 0,
      "condition": "always()",
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "targetType": "inline",
        "filePath": "",
        "arguments": "",
        "script": "if (Test-Path \"$Env:AgentToolsPath\\end.ps1\") {\n   \"$Env:AgentToolsPath\\end.ps1 script found. Executing...\"\n    & $Env:AgentToolsPath\\end.ps1\n} else {\n   \"$Env:AgentToolsPath\\end.ps1 script does not exist. Moving on...\"\n}",
        "errorActionPreference": "continue",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "true",
        "workingDirectory": ""
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5d58cc01-7c75-450c-be18-a388ddb129ec"
      },
      "inputs": {
        "branchFilters": "[\"+refs/heads/*\"]",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "234347",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "CloudDropAccessToken": {
      "value": null,
      "isSecret": true
    },
    "HelixApiAccessKey": {
      "value": null,
      "isSecret": true
    },
    "OutputCloudResultsAccessToken": {
      "value": null,
      "isSecret": true
    },
    "OfficialBuildId": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "ProductBuildId": {
      "value": "",
      "allowOverride": true
    },
    "PB_BuildArguments": {
      "value": "",
      "allowOverride": true
    },
    "PB_BuildTestsArguments": {
      "value": "",
      "allowOverride": true
    },
    "PB_CleanAgent": {
      "value": "true"
    },
    "PB_CloudDropAccountName": {
      "value": "dotnetbuildoutput"
    },
    "PB_ConfigurationGroup": {
      "value": "Debug",
      "allowOverride": true
    },
    "PB_TargetQueue": {
      "value": "Windows.10.Amd64"
    },
    "PB_CreateHelixArguments": {
      "value": "/t:CloudBuild /p:ArchGroup=x64 /p:ConfigurationGroup=Release /p:\"EnableCloudTest=true\" /p:\"BuildMoniker=none\" /p:\"TargetQueue=$(PB_TargetQueue)\" /p:\"TestProduct=corefx\" /p:\"TimeoutInSeconds=1200\" /p:\"TargetOS=Windows_NT\" /p:FilterToOSGroup=Windows_NT",
      "allowOverride": true
    },
    "PB_Git": {
      "value": "$(ProgramFiles)\\Git\\cmd\\git.exe"
    },
    "PB_Label": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "PB_OptionalToolingSyncArguments": {
      "value": "/p:OptionalToolSource=$(PB_OptionalToolSource) /p:OptionalToolSourceUser=$(PB_OptionalToolSourceUser) /p:OptionalToolSourcePassword=$(PB_OptionalToolSourcePAT)"
    },
    "PB_OptionalToolSource": {
      "value": null,
      "allowOverride": true,
      "isSecret": true
    },
    "PB_OptionalToolSourcePAT": {
      "value": null,
      "allowOverride": true,
      "isSecret": true
    },
    "PB_OptionalToolSourceUser": {
      "value": null,
      "allowOverride": true,
      "isSecret": true
    },
    "PB_PipelineBuildMSBuildArguments": {
      "value": "",
      "allowOverride": true
    },
    "PB_Platform": {
      "value": "x64",
      "allowOverride": true
    },
    "PB_RuntimeOS": {
      "value": "win10"
    },
    "PB_SourceBranch": {
      "value": "master",
      "allowOverride": true
    },
    "PB_SyncArguments": {
      "value": "",
      "allowOverride": true
    },
    "PB_VsoAccountName": {
      "value": "dn-bot"
    },
    "PB_VsoCorefxGitUrl": {
      "value": "https://$(PB_VsoAccountName):$(VsoPassword)@devdiv.visualstudio.com/DevDiv/_git/$(PB_VsoRepositoryName)/",
      "isSecret": true
    },
    "PB_VsoRepositoryName": {
      "value": "DotNet-CoreFX-Trusted"
    },
    "SourceVersion": {
      "value": "HEAD",
      "allowOverride": true
    },
    "system.debug": {
      "value": "false",
      "allowOverride": true
    },
    "TeamName": {
      "value": "DotNetCore"
    },
    "VsoPassword": {
      "value": null,
      "isSecret": true
    },
    "PB_SignType": {
      "value": "real",
      "allowOverride": true
    },
    "PB_SkipTests": {
      "value": "false",
      "allowOverride": true
    },
    "PB_PackageVersionPropsUrl": {
      "value": ""
    },
    "PACKAGEVERSIONPROPSURL": {
      "value": "$(PB_PackageVersionPropsUrl)"
    },
    "PB_AssetRootUrl": {
      "value": ""
    },
    "PB_UseEsrpSigning": {
      "value": "false",
      "allowOverride": true
    }
  },
  "demands": [
    "Agent.OS -equals windows_nt"
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [
        "build.SourceLabel"
      ],
      "artifactTypesToDelete": [],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:-rr)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 180,
  "jobCancelTimeoutInMinutes": 5,
  "repository": {
    "properties": {
      "labelSources": "0",
      "reportBuildStatus": "true",
      "fetchDepth": "0",
      "gitLfsSupport": "false",
      "skipSyncSource": "true",
      "cleanOptions": "3",
      "checkoutNestedSubmodules": "false",
      "labelSourcesFormat": "$(build.buildNumber)"
    },
    "id": "0a2b2664-c1be-429c-9b40-8a24dee27a4a",
    "type": "TfsGit",
    "name": "DotNet-BuildPipeline",
    "url": "https://devdiv.visualstudio.com/DevDiv/_git/DotNet-BuildPipeline",
    "defaultBranch": "refs/heads/master",
    "clean": "false",
    "checkoutSubmodules": false
  },
  "processParameters": {},
  "quality": "definition",
  "drafts": [],
  "queue": {
    "_links": {
      "self": {
        "href": "https://devdiv.visualstudio.com/DefaultCollection/_apis/build/Queues/330"
      }
    },
    "id": 330,
    "name": "DotNetCore-Build",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/build/Queues/330",
    "pool": {
      "id": 97,
      "name": "DotNetCore-Build"
    }
  },
  "id": 893,
  "name": "DotNet-CoreFx-Trusted-Windows",
  "path": "\\",
  "type": "build",
  "queueStatus": "enabled",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418098432,
    "visibility": "organization"
  }
}
