parameters:
  artifactsDir: $(Build.SourcesDirectory)/artifacts
  buildConfiguration: Release
  dependsOn: ''

jobs:
  - template: ../common/templates/jobs/jobs.yml
    parameters:
      enableMicrobuild: true
      jobs:
      - job: PublishPackages
        displayName: Publish Packages
        timeoutInMinutes: 120

        ${{ if ne(parameters.dependsOn, '') }}:
          dependsOn: ${{ parameters.dependsOn }}

        pool:
          name: dotnet-internal-temp

        workspace:
          clean: all

        variables:
          - group: Publish-Build-Assets
          - group: DotNet-Blob-Feed
          - group: DotNet-MyGet-Publish
          - group: DotNet-Versions-Publish
          - _dotnetFeedUrl: https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json
          - _maestroApiEndpoint: https://maestro-prod.westus2.cloudapp.azure.com
          - _mygetFeedUrl: https://dotnet.myget.org/F/dotnet-core/api/v2/package
          - _manifestsDir: ${{ parameters.artifactsDir }}/AssetManifests
          - _TeamName: DotNetCore
          - _SignType: real

        steps:
          - powershell: |
              $prefix = "refs/heads/"
              $branch = "$(Build.SourceBranch)"
              $branchName = $branch
              if ($branchName.StartsWith($prefix))
              {
                $branchName = $branchName.Substring($prefix.Length)
              }
              Write-Host "For Build.SourceBranch $branch, FullBranchName is $branchName"
              Write-Host "##vso[task.setvariable variable=FullBranchName;]$branchName"
            displayName: Find true SourceBranchName

          - task: DownloadBuildArtifacts@0
            displayName: Download packages to publish
            inputs:
              artifactName: packages
              downloadPath: ${{ parameters.artifactsDir }}

          - script: build.cmd
                    -restore
                    -sign
                    /p:DotNetSignType=$(_SignType)
                    /p:OfficialBuildId=$(Build.BuildNumber)
            displayName: Sign packages

          - task: PublishBuildArtifacts@1
            displayName: Publish packages to artifacts container
            inputs:
              pathToPublish: $(Build.SourcesDirectory)/artifacts/packages
              artifactName: packages
              artifactType: container

          - script: powershell -ExecutionPolicy ByPass -NoProfile eng\common\msbuild.ps1 eng\publish.proj
                    -warnaserror:0 -ci
                    /t:PublishPackagesToBlobFeed
                    /p:ManifestBuildId=$(Build.BuildNumber)
                    /p:ManifestBuildData=Location=$(_dotnetFeedUrl)
                    /p:ManifestBranch=$(Build.SourceBranch)
                    /p:ManifestCommit=$(Build.SourceVersion)
                    /p:ManifestRepoUri=$(Build.Repository.Uri)
                    /p:AccountKey=$(dotnetfeed-storage-access-key-1)
                    /p:ExpectedFeedUrl=$(_dotnetFeedUrl)
                    /p:IncludeSymbolsOnPackagePublish=true
            displayName: Push to dotnet feed

          - task: PublishBuildArtifacts@1
            displayName: Publish assets manifest to artifacts
            inputs:
              pathToPublish: $(_manifestsDir)
              artifactName: BuildAssetsManifest
              artifactType: container

          - script: powershell -ExecutionPolicy ByPass -NoProfile eng\common\sdk-task.ps1
                    -task PublishBuildAssets -restore -msbuildEngine dotnet
                    /p:ManifestsPath='$(_manifestsDir)'
                    /p:BuildAssetRegistryToken=$(MaestroAccessToken)
                    /p:MaestroApiEndpoint=https://maestro-prod.westus2.cloudapp.azure.com
                    /p:Configuration=${{ parameters.buildConfiguration }}
            displayName: Publish to Build Assets Registry

          - script: powershell -ExecutionPolicy ByPass -NoProfile eng\common\msbuild.ps1 eng\publish.proj
                    -warnaserror:0 -ci
                    /t:NuGetPush
                    /p:NuGetSource=$(_mygetFeedUrl)
                    /p:NuGetApiKey=$(dotnet-myget-org-api-key)
            displayName: Push to myget.org

          - script: powershell -ExecutionPolicy ByPass -NoProfile eng\common\msbuild.ps1 build.proj
                    -warnaserror:0 -ci
                    /t:UpdatePublishedVersions
                    /p:GitHubAuthToken=$(AccessToken-dotnet-build-bot-public-repo)
                    /p:VersionsRepoOwner=dotnet
                    /p:VersionsRepo=versions
                    /p:VersionsRepoPath=build-info/dotnet/corefx/$(FullBranchName)
                    /p:ShippedNuGetPackageGlobPath=${{ parameters.artifactsDir }}/packages/*.nupkg
            displayName: Update dotnet/versions

      - job: PublishSymbols
        displayName: Publish Symbols
        timeoutInMinutes: 120

        ${{ if ne(parameters.dependsOn, '') }}:
          dependsOn: ${{ parameters.dependsOn }}

        pool:
          name: dotnet-internal-temp

        workspace:
          clean: all

        variables:
          - group: DotNet-Symbol-Server-Pats
          - name: _msdlSymbolServerUrl
            value: https://microsoftpublicsymbols.artifacts.visualstudio.com/DefaultCollection
          - name: _symwebSymbolServerUrl
            value: https://microsoft.artifacts.visualstudio.com/DefaultCollection
          - name: _symbolExpirationInDays
            value: 30

        steps:
          - task: DownloadBuildArtifacts@0
            displayName: Download symbols to publish
            inputs:
              artifactName: packages
              downloadPath: ${{ parameters.artifactsDir }}

          - script: build.cmd -restore
            displayName: Restore Tools

          - script: powershell -ExecutionPolicy ByPass -NoProfile eng\common\msbuild.ps1 eng\publish.proj
                    -warnaserror:0 -ci
                    /t:PublishSymbols
                    /p:SymbolServerPath=$(_msdlSymbolServerUrl)
                    /p:SymbolServerPAT=$(microsoft-symbol-server-pat)
            displayName: Publish symbols to msdl

          - script: powershell -ExecutionPolicy ByPass -NoProfile eng\common\msbuild.ps1 eng\publish.proj
                    -warnaserror:0 -ci
                    /t:PublishSymbols
                    /p:SymbolServerPath=$(_symwebSymbolServerUrl)
                    /p:SymbolServerPAT=$(symweb-symbol-server-pat)
            displayName: Publish symbols to symweb
