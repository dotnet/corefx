# Linux legs
parameters:
  # Required: value to specify if the job is comming from an official build to run extra steps and sign binaries
  #   Default: false
  isOfficialBuild: false
  # Required: value to specify if the build is comming from an outerloop pipeline.
  #   Default: false
  isOuterloopBuild: false

jobs:

- template: corefx-base.yml
  parameters:
    isOfficialBuild: ${{ parameters.isOfficialBuild }}
    targetOS: Linux
    jobs:

    # Legs with Helix testing
    - job: LinuxTest
      displayName: Linux
      strategy:
        matrix:
          x64_Release:
            _BuildConfig: Release
            _architecture: x64
            _framework: netcoreapp
            _helixQueues: $(linuxDefaultQueues)
            _dockerContainer: rhel7_container
            _buildScriptPrefix: ''
            _buildExtraArguments: ''
            _publishTests: true

          arm64_Release:
            _BuildConfig: Release
            _architecture: arm64
            _framework: netcoreapp
            _helixQueues: $(linuxArm64Queues)
            _dockerContainer: ubuntu_1604_arm64_cross_container
            _buildScriptPrefix: 'ROOTFS_DIR=/crossrootfs/arm64 '
            _buildExtraArguments: -warnAsError false

          ${{ if eq(parameters.isOuterloopBuild, 'true') }}:
            x64_Debug:
              _BuildConfig: Debug
              _architecture: x64
              _framework: netcoreapp
              _helixQueues: $(linuxDefaultQueues)
              _dockerContainer: rhel7_container
              _buildScriptPrefix: ''
              _buildExtraArguments: ''

            arm64_Debug:
              _BuildConfig: Debug
              _architecture: arm64
              _framework: netcoreapp
              _helixQueues: $(linuxArm64Queues)
              _dockerContainer: ubuntu_1604_arm64_cross_container
              _buildScriptPrefix: 'ROOTFS_DIR=/crossrootfs/arm64 '
              _buildExtraArguments: --warnAsError false

          ${{ if eq(parameters.isOfficialBuild, 'true') }}:
            musl_x64_Release:
              _BuildConfig: Release
              _architecture: x64
              _framework: netcoreapp
              _helixQueues: $(alpineQueues)
              _dockerContainer: alpine_36_container
              _buildScriptPrefix: ''
              _buildExtraArguments: /p:RuntimeOS=linux-musl

            arm_Release:
              _BuildConfig: Release
              _architecture: arm
              _framework: netcoreapp
              _helixQueues: $(linuxArmQueues)
              _dockerContainer: ubuntu_1604_arm_cross_container
              _buildScriptPrefix: 'ROOTFS_DIR=/crossrootfs/arm '
              _buildExtraArguments: -warnAsError false

      pool:
        name: Hosted Ubuntu 1604

      container: $[ variables['_dockerContainer'] ]
      buildScriptPrefix: $(_buildScriptPrefix)
      buildExtraArguments: $(_buildExtraArguments)
      submitToHelix: true

      variables:
        - _skipTests: true
        - _outerloop: ${{ parameters.isOfficialBuild }}
        - ${{ if eq(parameters.isOuterloopBuild, 'true') }}:
          - _outerloop: true

        - ${{ if eq(parameters.isOfficialBuild, 'false') }}:
          - linuxDefaultQueues: Centos.7.Amd64.Open+RedHat.7.Amd64.Open+Debian.8.Amd64.Open+Ubuntu.1604.Amd64.Open+Ubuntu.1804.Amd64.Open+OpenSuse.42.Amd64.Open+Fedora.27.Amd64.Open
          - linuxArm64Queues: '\(Ubuntu.1604.Arm64\)Ubuntu.1604.Arm64.Docker.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-helix-arm64v8-b049512-20190321153539'
      
        - ${{ if eq(parameters.isOfficialBuild, 'true') }}:
          - linuxDefaultQueues: Centos.7.Amd64+RedHat.7.Amd64+Debian.8.Amd64+Debian.9.Amd64+Ubuntu.1604.Amd64+Ubuntu.1804.Amd64+Ubuntu.1810.Amd64+OpenSuse.42.Amd64+SLES.12.Amd64+SLES.15.Amd64+Fedora.27.Amd64+Fedora.28.Amd64
          - linuxArm64Queues: '\(Ubuntu.1604.Arm64\)Ubuntu.1604.Arm64.Docker@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-helix-arm64v8-b049512-20190321153539'
          - linuxArmQueues: '\(Debian.9.Arm32\)Ubuntu.1604.Arm32@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-9-helix-arm32v7-b049512-20190321153542'
          - alpineQueues: 'Alpine.36.Amd64+Alpine.38.Amd64+\(Alpine.39.Amd64\)ubuntu.1604.amd64@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.9-helix-e4eaef4-20190228230637'

    # Legs without helix testing
    # There is no point of running legs without outerloop tests, when in an outerloop build.
    - ${{ if eq(parameters.isOuterloopBuild, 'false') }}:
      - job: LinuxNoTest
        displayName: Linux
        strategy:
          matrix:
            ${{ if eq(parameters.isOfficialBuild, 'false') }}:
              musl_x64_Debug:
                _BuildConfig: Debug
                _architecture: x64
                _framework: netcoreapp
                _dockerContainer: alpine_36_container
                _buildScriptPrefix: ''
                _buildExtraArguments: /p:RuntimeOS=linux-musl

              arm_Release:
                _BuildConfig: Release
                _architecture: arm
                _framework: netcoreapp
                _buildExtraArguments: /p:RuntimeOS=ubuntu.16.04 -warnAsError false
                _buildScriptPrefix: 'ROOTFS_DIR=/crossrootfs/arm '
                _dockerContainer: ubuntu_1604_arm_cross_container

            musl_arm64_Release:
              _BuildConfig: Release
              _architecture: arm64
              _framework: netcoreapp
              _dockerContainer: alpine_37_arm64_container
              _buildScriptPrefix: 'ROOTFS_DIR=/crossrootfs/arm64 '
              _buildExtraArguments: -warnAsError false /p:BuildNativeClang=--clang5.0 /p:RuntimeOS=linux-musl

        pool:
          name: Hosted Ubuntu 1604

        container: $[ variables['_dockerContainer'] ]
        buildExtraArguments: $(_buildExtraArguments)
        buildScriptPrefix: $(_buildScriptPrefix)
        submitToHelix: false

        variables:
          - _skipTests: true
          - _outerloop: ${{ parameters.isOfficialBuild }}
