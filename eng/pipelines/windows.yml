# Windows legs
parameters:
  # Required: value to specify if the job is comming from an official build to run extra steps and sign binaries
  #   Default: false
  isOfficialBuild: false
  # Required: value to specify if the full test matrix should be tested
  #   Default: false
  fullMatrix: false
  # Required: value to specify if the build is comming from an outerloop pipeline.
  #   Default: false
  isOuterloopBuild: false

jobs:

- template: corefx-base.yml
  parameters:
    isOfficialBuild: ${{ parameters.isOfficialBuild }}
    targetOS: Windows_NT
    jobs:

    # Legs with Helix testing
    - job: WindowsTest
      displayName: Windows
      strategy:
        matrix:
          # PR CI Matrix
          ${{ if eq(parameters.fullMatrix, 'false') }}:
            x64_Debug:
              _BuildConfig: Debug
              _architecture: x64
              _framework: netcoreapp
              _helixQueues: $(netcoreappWindowsQueues)+$(nanoQueues)

            x86_Release:
              _BuildConfig: Release
              _architecture: x86
              _framework: netcoreapp
              _helixQueues: $(netcoreappWindowsQueues)

            NETFX_x86_Release:
              _BuildConfig: Release
              _architecture: x86
              _framework: netfx
              _helixQueues: $(uapNetfxQueues)
              _skipPublishPackages: true # In NETFX leg we don't produce packages

            UWP_CoreCLR_x64_Debug:
              _BuildConfig: Debug
              _architecture: x64
              _framework: uap
              _helixQueues: $(uapNetfxQueues)

          # Run arm on the matrix or in Outerloop
          ${{ if or(eq(parameters.fullMatrix, 'true'), eq(parameters.isOuterloopBuild, 'true')) }}:
            arm64_Release:
              _BuildConfig: Release
              _architecture: arm64
              _framework: netcoreapp
              _helixQueues: $(windowsArmQueue)
              _publishTests: true
          
          # Full test matrix
          ${{ if eq(parameters.fullMatrix, 'true') }}:
            x64_Release:
              _BuildConfig: Release
              _architecture: x64
              _framework: netcoreapp
              _helixQueues: $(netcoreappWindowsQueues)+$(nanoQueues)
              _publishTests: true

            x86_Release:
              _BuildConfig: Release
              _architecture: x86
              _framework: netcoreapp
              _helixQueues: $(netcoreappWindowsQueues)
              _publishTests: true

            NETFX_x86_Release:
              _BuildConfig: Release
              _architecture: x86
              _framework: netfx
              _helixQueues: $(uapNetfxQueues)
              _skipPublishPackages: true # In NETFX leg we don't produce packages

            NETFX_x64_Release:
              _BuildConfig: Release
              _architecture: x64
              _framework: netfx
              _helixQueues: $(uapNetfxQueues)
              _skipPublishPackages: true # In NETFX leg we don't produce packages

            UAP_x64_Release:
              _BuildConfig: Release
              _architecture: x64
              _framework: uap
              _helixQueues: $(uapNetfxQueues)

            UAP_x86_Release:
              _BuildConfig: Release
              _architecture: x86
              _framework: uap
              _helixQueues: $(uapNetfxQueues)

      pool:
        name: Hosted VS2017

      submitToHelix: true
      buildExtraArguments: /p:RuntimeOS=win10

      variables:
        - _outerloop: ${{ parameters.isOuterloopBuild }}

        - nanoQueues: "`(Windows.Nano.1803.Amd64.Open`)windows.10.amd64.serverrs4.open@mcr.microsoft.com/dotnet-buildtools/prereqs:nanoserver-1803-helix-amd64-05227e1-20190509225944"
        - uapNetfxQueues: Windows.10.Amd64.ClientRS5.Open
        - windowsArmQueue: Windows.10.Arm64.Open

        - ${{ if eq(parameters.fullMatrix, 'false') }}:
          - netcoreappWindowsQueues: Windows.7.Amd64.Open+Windows.81.Amd64.Open+Windows.10.Amd64.ClientRS4.ES.Open

        - ${{ if eq(parameters.fullMatrix, 'true') }}:
          - netcoreappWindowsQueues: Windows.7.Amd64.Open+Windows.81.Amd64.Open+Windows.10.Amd64.ClientRS4.Open+Windows.10.Amd64.ServerRS5.Open          

    # There is no point of running legs without outerloop tests, when in an outerloop build.
    - ${{ if eq(parameters.isOuterloopBuild, 'false') }}:
      # Packaging all configurations
      - job: AllConfigurations
        displayName: Packaging All Configurations
        strategy:
          matrix:
            # PR Validation Matrix
            ${{ if eq(parameters.fullMatrix, 'false') }}:
              x64_Debug:
                _BuildConfig: Debug
                _architecture: x64
                _framework: allConfigurations
                _helixQueues: $(allConfigurationsQueues)

            # Official Build Matrix
            ${{ if eq(parameters.fullMatrix, 'true') }}:
              x64_Release:
                _BuildConfig: Release
                _architecture: x64
                _framework: allConfigurations
                _helixQueues: $(allConfigurationsQueues)

        pool:
          name: Hosted VS2017

        submitToHelix: true
        buildExtraArguments: /p:RuntimeOS=win10

        variables:
          - _outerloop: false
          - allConfigurationsQueues: Windows.10.Amd64.ClientRS5.Open

        _jobFramework: -allConfigurations
        customBuildSteps:
          - script: build.cmd
                    -build
                    -configuration $(_BuildConfig)
                    -ci
                    -buildtests
                    -allconfigurations
                    -arch $(_architecture)
                    /p:RuntimeOS=win10
                    /p:ArchiveTests=Packages
                    $(_msbuildCommonParameters)
            displayName: Build Packages and Tests

      # Legs without HELIX testing
      - job: WindowsNoTest
        displayName: Windows
        strategy:
          matrix:
            ${{ if eq(parameters.fullMatrix, 'false') }}:
              UWP_NETNative_x86_Release:
                _BuildConfig: Release
                _architecture: x86
                _framework: uapaot

            ${{ if eq(parameters.fullMatrix, 'true') }}:
              arm_Release:
                _BuildConfig: Release
                _architecture: arm
                _framework: netcoreapp

              UAP_arm_Release:
                _BuildConfig: Release
                _architecture: arm
                _framework: uap

        pool:
          name: Hosted VS2017

        submitToHelix: false
        buildExtraArguments: /p:RuntimeOS=win10

        variables:
          - _outerloop: ${{ parameters.isOuterloopBuild }}
